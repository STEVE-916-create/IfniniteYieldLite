-- Infinite Yield Lite
-- "OPTIMIZATION IS GOATED!!"

if _G.IYL_LOADED then
	return
end
_G.IYL_LOADED = true
local IY_VERSION = "v1.0.0"
local IY_MAINNAME = "Ifninite Yeild Lite"

-- coregui reference detector bypass
local cloneref = cloneref or function(o) return o end
COREGUI = cloneref(game:GetService("CoreGui"))
if not game:IsLoaded() then
	local notLoaded = Instance.new("Message")
	notLoaded.Parent = COREGUI
	notLoaded.Text = IY_MAINNAME .. " is waiting for the game to load"
	game.Loaded:Wait()
	notLoaded:Destroy()
end

local function randomString()
	local length = math.random(32, 64)
	local array = {}
	for i = 1, length do
		array[i] = string.char(math.random(32, 126))
	end
	return table.concat(array)
end

local DATE = os.date("%m %d")
local YEAR = os.date("%Y")
--DATE = "04 20"
local function IY_Celebration()
	local function EASTER(year)
		local a = year % 19
		local b = year % 4
		local c = year % 7
		local k = math.floor(year / 100)
		local p = math.floor((13 + (8 * k)) / 25)
		local q = math.floor(k / 4)
		local M = (15 - p + k - q) % 30
		local N = (4 + k - q) % 7
		local d = ((19 * a) + M) % 30
		local e = ((2 * b) + (4 * c) + (6 * d) + N) % 7
		local mday = 22 + d + e
		local G = ((11 * M) + 11) % 30
		local month, day = 3, mday
		if mday > 31 then
			month, day = 4, mday - 31
		end
		if d == 28 and e == 6 and G < 19 then
			if month == 4 and day == 25 then
				day = 18
			end
		elseif d == 29 and e == 6 then
			if month == 4 and day == 26 then
				day = 19
			end
		end
		return ("%02d %02d"):format(month, day)
	end
	return ({
		["01 01"] = "NEWYEAR",
		[EASTER(tonumber(YEAR))] = "EASTER",
		["10 30"] = "HALLOWEEN",
		["10 31"] = "HALLOWEEN",
		["11 01"] = "HALLOWEEN",
		["12 24"] = "CHRISTMAS",
		["12 25"] = "CHRISTMAS",
		["12 31"] = "NEWYEAR",
	})[DATE] or "NONE"
end

local function IY_Emoji()
	return ({
		NEWYEAR = "🎆",
		EASTER = "🥚",
		HALLOWEEN = "🎃",
		CHRISTMAS = "🎄"
	})[IY_Celebration()] or ""
end

local PARENT = nil
if get_hidden_gui or gethui then
	local hiddenUI = get_hidden_gui or gethui
	local Main = Instance.new("ScreenGui")
	Main.Name = randomString()
	Main.Parent = hiddenUI()
	PARENT = Main
elseif (not is_sirhurt_closure) and (syn and syn.protect_gui) then
	local Main = Instance.new("ScreenGui")
	Main.Name = randomString()
	syn.protect_gui(Main)
	Main.Parent = COREGUI
	PARENT = Main
elseif COREGUI:FindFirstChild('RobloxGui') then
	PARENT = COREGUI.RobloxGui
else
	local Main = Instance.new("ScreenGui")
	Main.Name = randomString()
	Main.Parent = COREGUI
	PARENT = Main
end

local GUIPivot = Instance.new("Frame")
GUIPivot.Name = randomString()
GUIPivot.Parent = PARENT
GUIPivot.Active = true
GUIPivot.Position = UDim2.new(1, 0, 1, 0)
GUIPivot.BackgroundTransparency = 1
GUIPivot.Size = UDim2.new(0, 1, 0, 1)
GUIPivot.ZIndex = 10

local GUIFrame = Instance.new("Frame")
GUIFrame.Name = randomString()
GUIFrame.Parent = GUIPivot
GUIFrame.Active = true
GUIFrame.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
GUIFrame.BorderSizePixel = 0
GUIFrame.AnchorPoint = Vector2.new(1, 1)
GUIFrame.Position = UDim2.new(0, 0, 0, 0)
GUIFrame.Size = UDim2.new(0, 250, 0, 220)
GUIFrame.ZIndex = 10

local GUIScaling = Instance.new("UIScale", PARENT)
GUIScaling.Scale = 1

local IY_TITLEBARTEXT = IY_MAINNAME .. " " .. IY_VERSION
local GUITitle = Instance.new("TextLabel")
GUITitle.Name = randomString()
GUITitle.Parent = GUIFrame
GUITitle.Active = true
GUITitle.BackgroundColor3 = Color3.fromRGB(36, 36, 37)
GUITitle.BorderSizePixel = 0
GUITitle.Size = UDim2.new(0, 250, 0, 20)
GUITitle.Font = Enum.Font.SourceSans
GUITitle.TextSize = 18
GUITitle.Text = IY_TITLEBARTEXT
GUITitle.TextColor3 = Color3.new(1, 1, 1)
GUITitle.ZIndex = 10
do
	if os.date("%m %d") == "04 01" then
		local names = {
			"skibidi slicers",
			"HD Admin " .. IY_VERSION,
			"android byfron", -- i predicted probably
			os.date("roblx chet workig %Y"),
			os.date("noon sec v4.1.%Y"),
			"gta 6 releaser",
			"all ur base r belong 2 me",
			"remember when yahoo went boohoo?",
			"guy named mario says yahoo",
			"HappyMod " .. IY_VERSION,
			os.date("0 was %Y years ago !!"),
			"\"use lts to upload big files\"",
			"adonis admin " .. IY_VERSION,
			"i... am STEVE! " .. IY_VERSION,
			"APRIL FO🥫💥💥💥💥",
			"Infinite Yield v8.0.1", -- i predict
			"why pass when you can pass away",
			"queen elisabeth exisits",
			"Finite Return " .. IY_VERSION,
			"what if i slapped lite into iy",
			"so basically. owo. anywya.",
			"its iy but faster",
		}
		GUITitle.Text = names[math.random(1, #names)]
	end
	local emoji = IY_Emoji()
	GUITitle.Text = emoji .. " " .. IY_TITLEBARTEXT .. " " .. emoji
end

local Cmdbar = Instance.new("TextBox")
Cmdbar.Name = randomString()
Cmdbar.Parent = GUIFrame
Cmdbar.BackgroundTransparency = 1
Cmdbar.BorderSizePixel = 0
Cmdbar.Position = UDim2.new(0, 5, 0, 20)
Cmdbar.Size = UDim2.new(0, 240, 0, 25)
Cmdbar.Font = Enum.Font.SourceSans
Cmdbar.TextSize = 18
Cmdbar.TextXAlignment = Enum.TextXAlignment.Left
Cmdbar.TextColor3 = Color3.new(1, 1, 1)
Cmdbar.Text = "flyfling"
Cmdbar.ZIndex = 10
Cmdbar.PlaceholderText = "Command Bar"
Cmdbar.PlaceholderColor3 = Color3.new(1, 1, 1)
Cmdbar.TextTransparency = 1
Cmdbar.ClearTextOnFocus = false

local CmdbarView = Instance.new("TextLabel")
CmdbarView.Name = randomString()
CmdbarView.Parent = Cmdbar
CmdbarView.BackgroundTransparency = 1
CmdbarView.BorderSizePixel = 0
CmdbarView.Position = UDim2.new(0, 0, 0, 0)
CmdbarView.Size = UDim2.new(1, 0, 1, 0)
CmdbarView.Font = Enum.Font.SourceSans
CmdbarView.TextSize = 18
CmdbarView.TextXAlignment = Enum.TextXAlignment.Left
CmdbarView.TextColor3 = Color3.new(1, 1, 1)
CmdbarView.Text = ""
CmdbarView.ZIndex = 10

local CmdbarAuto = Instance.new("TextLabel")
CmdbarAuto.Name = randomString()
CmdbarAuto.Parent = Cmdbar
CmdbarAuto.BackgroundTransparency = 1
CmdbarAuto.BorderSizePixel = 0
CmdbarAuto.Position = UDim2.new(0, 0, 0, 0)
CmdbarAuto.Size = UDim2.new(1, 0, 1, 0)
CmdbarAuto.Font = Enum.Font.SourceSans
CmdbarAuto.TextSize = 18
CmdbarAuto.TextXAlignment = Enum.TextXAlignment.Left
CmdbarAuto.TextColor3 = Color3.new(1, 1, 1)
CmdbarAuto.TextTransparency = 0.7
CmdbarAuto.Text = ""
CmdbarAuto.ZIndex = 10

local CmdList = Instance.new("ScrollingFrame")
CmdList.Name = randomString()
CmdList.Parent = GUIFrame
CmdList.BackgroundColor3 = Color3.fromRGB(36, 36, 37)
CmdList.BorderSizePixel = 0
CmdList.Position = UDim2.new(0, 5, 0, 45)
CmdList.Size = UDim2.new(0, 245, 0, 175)
CmdList.ScrollBarImageColor3 = Color3.fromRGB(78, 78, 79)
CmdList.CanvasSize = UDim2.new(0, 0, 0, 0)
CmdList.TopImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
CmdList.MidImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
CmdList.BottomImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
CmdList.ScrollBarThickness = 8
CmdList.VerticalScrollBarInset = "Always"
CmdList.ZIndex = 10

do
	local bar = Instance.new("Frame")
	bar.Name = randomString()
	bar.Parent = GUIFrame
	bar.BackgroundColor3 = Color3.fromRGB(36, 36, 37)
	bar.BorderSizePixel = 0
	bar.Position = UDim2.new(0, 0, 0, 45)
	bar.Size = UDim2.new(0, 5, 0, 175)
	bar.ZIndex = 10
end

local CmdListLayout = Instance.new("UIListLayout")
CmdListLayout.Name = randomString()
CmdListLayout.Parent = CmdList
CmdListLayout.SortOrder = Enum.SortOrder.LayoutOrder

local SettingsButton = Instance.new("Frame")
SettingsButton.Name = randomString()
SettingsButton.Parent = GUIFrame
SettingsButton.BackgroundTransparency = 1
SettingsButton.Position = UDim2.new(0, 230, 0, 0)
SettingsButton.Size = UDim2.new(0, 20, 0, 20)
SettingsButton.ZIndex = 10
do
	local im = Instance.new("ImageButton")
	im.Name = "Icon"
	im.Parent = SettingsButton
	im.BackgroundTransparency = 1
	im.AnchorPoint = Vector2.new(0.5, 0.5)
	im.Position = UDim2.new(0.5, 0, 0.5, 0)
	im.Size = UDim2.new(1, 0, 1, 0)
	im.Image = "rbxassetid://1204397029"
	im.ZIndex = 10
end

local InformationButton = Instance.new("ImageButton")
InformationButton.Name = randomString()
InformationButton.Parent = GUIFrame
InformationButton.BackgroundTransparency = 1
InformationButton.Position = UDim2.new(0, 212, 0, 2)
InformationButton.Size = UDim2.new(0, 16, 0, 16)
InformationButton.Image = "rbxassetid://3523243755"
InformationButton.ZIndex = 10

local NotificationPivot = Instance.new("Frame")
NotificationPivot.Name = randomString()
NotificationPivot.Parent = PARENT
NotificationPivot.Active = true
NotificationPivot.Position = UDim2.new(0, 0, 1, 0)
NotificationPivot.BackgroundTransparency = 1
NotificationPivot.Size = UDim2.new(0, 1, 0, 1)
NotificationPivot.ZIndex = 20

local Notification = Instance.new("Frame")
Notification.Name = randomString()
Notification.Parent = NotificationPivot
Notification.BackgroundColor3 = Color3.fromRGB(36, 36, 37)
Notification.BorderSizePixel = 0
Notification.AnchorPoint = Vector2.new(1, 1)
Notification.Position = UDim2.new(0, 0, 0, 0)
Notification.Size = UDim2.new(0, 250, 0, 100)
Notification.ZIndex = 20
Notification.Visible = false

do
	local Title = Instance.new("TextLabel")
	Title.Name = "Title"
	Title.Parent = Notification
	Title.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Title.BorderSizePixel = 0
	Title.Size = UDim2.new(0, 250, 0, 20)
	Title.Font = Enum.Font.SourceSans
	Title.TextSize = 14
	Title.Text = "Roblox"
	Title.TextColor3 = Color3.new(1, 1, 1)
	Title.ZIndex = 20
	
	local Text = Instance.new("TextLabel")
	Text.Name = "Content"
	Text.Parent = Notification
	Text.BackgroundTransparency = 1
	Text.BorderSizePixel = 0
	Text.Position = UDim2.new(0, 5, 0, 25)
	Text.Size = UDim2.new(0, 240, 0, 75)
	Text.Font = Enum.Font.SourceSans
	Text.TextSize = 16
	Text.Text = "You have been kicked ig"
	Text.TextColor3 = Color3.new(1, 1, 1)
	Text.TextWrapped = true
	Text.ZIndex = 20
	
	local CloseButton = Instance.new("TextButton")
	CloseButton.Name = "CloseButton"
	CloseButton.Parent = Notification
	CloseButton.BackgroundTransparency = 1
	CloseButton.Position = UDim2.new(1, -20, 0, 0)
	CloseButton.Size = UDim2.new(0, 20, 0, 20)
	CloseButton.Text = ""
	CloseButton.ZIndex = 20
	
	local CloseImage = Instance.new("ImageLabel")
	CloseImage.Parent = CloseButton
	CloseImage.BackgroundColor3 = Color3.new(1, 1, 1)
	CloseImage.BackgroundTransparency = 1
	CloseImage.Position = UDim2.new(0, 5, 0, 5)
	CloseImage.Size = UDim2.new(0, 10, 0, 10)
	CloseImage.Image = "rbxassetid://5054663650"
	CloseImage.ZIndex = 20
	
	--[[PinButton.Name = "PinButton"
	PinButton.Parent = Notification
	PinButton.BackgroundTransparency = 1
	PinButton.Size = UDim2.new(0, 20, 0, 20)
	PinButton.ZIndex = 10
	PinButton.Text = ""
	
	PinImage.Parent = PinButton
	PinImage.BackgroundColor3 = Color3.new(1, 1, 1)
	PinImage.BackgroundTransparency = 1
	PinImage.Position = UDim2.new(0, 3, 0, 3)
	PinImage.Size = UDim2.new(0, 14, 0, 14)
	PinImage.ZIndex = 10
	PinImage.Image = "rbxassetid://6234691350"
	PinImage.ImageTransparency = 1]]
end

local Tooltip = Instance.new("Frame")
Tooltip.Name = randomString()
Tooltip.Parent = PARENT
Tooltip.Active = true
Tooltip.BackgroundColor3 = Color3.fromRGB(36, 36, 37)
Tooltip.BackgroundTransparency = 0.1
Tooltip.BorderSizePixel = 0
Tooltip.Size = UDim2.new(0, 200, 0, 96)
Tooltip.Visible = false
Tooltip.ZIndex = 20

do
	local Title = Instance.new("TextLabel")
	Title.Name = "Title"
	Title.Parent = Tooltip
	Title.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Title.BackgroundTransparency = 0.1
	Title.BorderSizePixel = 0
	Title.Size = UDim2.new(0, 200, 0, 20)
	Title.Font = Enum.Font.SourceSans
	Title.TextSize = 14
	Title.Text = ""
	Title.TextColor3 = Color3.new(1, 1, 1)
	Title.TextTransparency = 0.1
	Title.ZIndex = 20
	
	local Description = Instance.new("TextLabel")
	Description.Name = "Description"
	Description.Parent = Tooltip
	Description.BackgroundTransparency = 1
	Description.BorderSizePixel = 0
	Description.Size = UDim2.new(0,180,0,72)
	Description.Position = UDim2.new(0,10,0,18)
	Description.Font = Enum.Font.SourceSans
	Description.TextSize = 16
	Description.Text = ""
	Description.TextColor3 = Color3.new(1, 1, 1)
	Description.TextTransparency = 0.1
	Description.TextWrapped = true
	Description.ZIndex = 20
end

RunService = game:GetService("RunService")

local SettingsFrame = Instance.new("Frame")
SettingsFrame.Name = randomString()
SettingsFrame.Parent = GUIFrame
SettingsFrame.Active = true
SettingsFrame.BackgroundColor3 = Color3.fromRGB(36, 36, 37)
SettingsFrame.BorderSizePixel = 0
SettingsFrame.Position = UDim2.new(0, 0, 0, 220)
SettingsFrame.Size = UDim2.new(0, 250, 0, 175)
SettingsFrame.ZIndex = 11

do
	local SettingsHolder = Instance.new("ScrollingFrame")
	SettingsHolder.Name = "Holder"
	SettingsHolder.Parent = SettingsFrame
	SettingsHolder.BackgroundTransparency = 1
	SettingsHolder.BorderSizePixel = 0
	SettingsHolder.Size = UDim2.new(1, 0, 1, 0)
	SettingsHolder.ScrollBarThickness = 0
	SettingsHolder.ZIndex = 11
	
	local SettingsLayout = Instance.new("UIListLayout")
	SettingsLayout.Name = "UILayout"
	SettingsLayout.Parent = SettingsHolder
	SettingsLayout.SortOrder = Enum.SortOrder.LayoutOrder
end

local _addsettings = 0
local _addsettings_s = 0
function IY_AddSetting(t, text, ...)
	local frame = Instance.new("Frame")
	frame.Name = randomString()
	frame.Parent = SettingsFrame.Holder
	frame.LayoutOrder = _addsettings
	frame.BackgroundTransparency = 1
	frame.Size = UDim2.new(0, 250, 0, 30)
	frame.ZIndex = 11
	local val = Instance.new("NumberValue")
	val.Name = randomString()
	if t == "SWITCH" then
		local textl = Instance.new("TextLabel")
		textl.Name = randomString()
		textl.Parent = frame
		textl.BackgroundTransparency = 1
		textl.Position = UDim2.new(0, 5, 0, 5)
		textl.Size = UDim2.new(0, 240, 0, 20)
		textl.Font = Enum.Font.SourceSans
		textl.TextSize = 14
		textl.Text = text
		textl.TextColor3 = Color3.new(1, 1, 1)
		textl.TextXAlignment = Enum.TextXAlignment.Left
		textl.ZIndex = 11
		local switch = Instance.new("TextButton")
		switch.Name = randomString()
		switch.Parent = frame
		switch.BackgroundColor3 = Color3.fromRGB(78, 78, 79)
		switch.BorderSizePixel = 0
		switch.Position = UDim2.new(0, 225, 0, 5)
		switch.Size = UDim2.new(0, 20, 0, 20)
		switch.Text = ""
		switch.ZIndex = 11
		local on = Instance.new("TextButton")
		on.Name = randomString()
		on.Parent = switch
		on.BackgroundColor3 = Color3.fromRGB(150, 150, 151)
		on.BackgroundTransparency = 1
		on.BorderSizePixel = 0
		on.Position = UDim2.new(0, 2, 0, 2)
		on.Size = UDim2.new(0, 16, 0, 16)
		on.Text = ""
		on.ZIndex = 11
		local function toggle()
			val.Value = (val.Value + 1) % 2
		end
		switch.MouseButton1Click:Connect(toggle)
		on.MouseButton1Click:Connect(toggle)
		val.Changed:Connect(function(v)
			on.BackgroundTransparency = 1 - v
		end)
	end
	if t == "SELECT" then
		local enums = ...
		local textl = Instance.new("TextLabel")
		textl.Name = randomString()
		textl.Parent = frame
		textl.BackgroundTransparency = 1
		textl.Position = UDim2.new(0, 5, 0, 5)
		textl.Size = UDim2.new(0, 240, 0, 20)
		textl.Font = Enum.Font.SourceSans
		textl.TextSize = 14
		textl.Text = text
		textl.TextColor3 = Color3.new(1, 1, 1)
		textl.TextXAlignment = Enum.TextXAlignment.Left
		textl.ZIndex = 11
		local switch = Instance.new("TextButton")
		switch.Name = randomString()
		switch.Parent = frame
		switch.BackgroundColor3 = Color3.fromRGB(78, 78, 79)
		switch.BorderSizePixel = 0
		switch.Position = UDim2.new(0, 185, 0, 5)
		switch.Size = UDim2.new(0, 60, 0, 20)
		switch.Text = enums[1]
		switch.TextColor3 = Color3.new(1, 1, 1)
		switch.ZIndex = 11
		local function toggle()
			val.Value = (val.Value % #enums) + 1
		end
		switch.MouseButton1Click:Connect(toggle)
		val.Value = 1
		val.Changed:Connect(function(v)
			switch.Text = enums[v]
		end)
	end
	if t == "LABEL" then
		frame.Size = UDim2.new(0, 250, 0, 18)
		local textl = Instance.new("TextLabel")
		textl.Name = randomString()
		textl.Parent = frame
		textl.BackgroundTransparency = 1
		textl.Position = UDim2.new(0, 5, 0, 0)
		textl.Size = UDim2.new(1, -5, 0, 18)
		textl.Font = Enum.Font.SourceSans
		textl.TextSize = 14
		textl.Text = text
		textl.TextColor3 = Color3.new(1, 1, 1)
		textl.TextXAlignment = Enum.TextXAlignment.Center
		textl.ZIndex = 11
	end
	_addsettings += 1
	_addsettings_s += frame.Size.Y.Offset
	SettingsFrame.Holder.CanvasSize = UDim2.new(0, 0, 0, _addsettings_s)
	return val
end

local CelebrationContainer = Instance.new("Frame")
CelebrationContainer.Name = randomString()
CelebrationContainer.Parent = GUIFrame
CelebrationContainer.Active = false
CelebrationContainer.BackgroundTransparency = 1
CelebrationContainer.Position = UDim2.new(0, 0, 0, 0)
CelebrationContainer.Size = UDim2.new(0, 250, 0, 220)
CelebrationContainer.ZIndex = 20

do
	local corout = {}
	local rng = Random.new(27649)
	local CelebrationAnimations = {
		NEWYEAR = function()
			local function firework(pos)
				local pivot = Instance.new("Frame", CelebrationContainer)
				pivot.Position = pos
				pivot.Size = UDim2.new(0, 1, 0, 1)
				pivot.BackgroundTransparency = 1
				pivot.ZIndex = 20
				local flash = Instance.new("Frame", pivot)
				flash.BorderSizePixel = 0
				flash.BackgroundColor3 = Color3.new(1, 1, 1)
				flash.AnchorPoint = Vector2.new(0.5, 0.5)
				flash.Size = UDim2.new(0, 18, 0, 18)
				flash.BackgroundTransparency = 1
				flash.ZIndex = 20
				local flash2 = Instance.new("Frame", pivot)
				flash2.BorderSizePixel = 0
				flash2.BackgroundColor3 = Color3.new(1, 1, 1)
				flash2.AnchorPoint = Vector2.new(0.5, 0.5)
				flash2.Size = UDim2.new(0, 40, 0, 40)
				flash2.BackgroundTransparency = 1
				flash2.ZIndex = 20
				local function flare(off, rx)
					local flare = Instance.new("Frame", pivot)
					flare.BorderSizePixel = 0
					flare.BackgroundColor3 = Color3.new(1, 1, 1)
					flare.AnchorPoint = Vector2.new(0.5, 0.5)
					flare.Position = off
					flare.Size = UDim2.new(0, 5, 0, 5)
					flare.BackgroundTransparency = 0.5
					flare.ZIndex = 20
					table.insert(corout, coroutine.create(function()
						local steps = 0
						local substeps = 0
						while true do
							steps += 1
							substeps += 1
							if substeps >= 5 then
								substeps = 0
								flare.Position = flare.Position + UDim2.new(0, 0, 0, 1)
							end
							if rx then
								flare.Position = flare.Position + UDim2.new(0, rng:NextInteger(-1, 1), 0, 0)
							end
							flare.BackgroundColor3 = Color3.fromHSV(rng:NextInteger(0, 7) / 8, math.floor(rng:NextNumber() * 1.3), 1)
							local size = rng:NextInteger(1, 4)
							flare.Size = UDim2.new(0, size, 0, size)
							flare.BackgroundTransparency = steps / 50
							if steps >= 50 then
								break
							end
							coroutine.yield()
						end
						flare:Destroy()
					end))
				end
				table.insert(corout, coroutine.create(function()
					local steps = 0
					while true do
						flare(UDim2.new(0, 0, 0, (10 - steps) * 10), true)
						steps += 1
						if steps >= 10 then
							break
						end
						coroutine.yield()
					end
					steps = 0
					local ssc = rng:NextInteger(60, 90)
					flash.BackgroundTransparency = 0.5
					flash2.BackgroundTransparency = 0.5
					while true do
						flash.Rotation = rng:NextNumber() * 360
						flash2.Rotation = rng:NextNumber() * 360
						flash.Visible = steps < 2
						flash2.Visible = steps < 3
						for i=1, 16 do
							local r = i * (math.pi / 8)
							local huh = steps / 15
							huh = 1 - math.pow(1 - huh, 3)
							local v = Vector2.new(math.sin(r), math.cos(r) + (1 / 10)) * huh * ssc
							flare(UDim2.new(0, v.X, 0, v.Y))
						end
						steps += 1
						if steps >= 15 then
							break
						end
						coroutine.yield()
					end
					flash:Destroy()
					flash2:Destroy()
				end))
			end
			for _=1,10 do
				firework(UDim2.new(0, rng:NextInteger(0, 250), 0, rng:NextInteger(0, 200)))
				task.wait(rng:NextNumber() * 0.1)
			end
			spawn(function()
				while task.wait(rng:NextNumber() * 10) do
					firework(UDim2.new(0, rng:NextInteger(0, 250), 0, rng:NextInteger(0, 200)))
				end
			end)
		end,
		CHRISTMAS = function()
			CelebrationContainer.ClipsDescendants = true
			local function snow(pos)
				local flake = Instance.new("Frame", CelebrationContainer)
				flake.BorderSizePixel = 0
				flake.BackgroundColor3 = Color3.new(1, 1, 1)
				flake.AnchorPoint = Vector2.new(0.5, 0.5)
				flake.Position = pos
				flake.Size = UDim2.new(0, 5, 0, 5)
				flake.BackgroundTransparency = 0.5
				flake.ZIndex = 20
				table.insert(corout, coroutine.create(function()
					local seed1 = rng:NextNumber()
					local seed2 = rng:NextNumber()
					local steps = -10
					while true do
						flake.Position = pos + UDim2.new(0, math.noise(seed1, seed2, steps * 0.005) * 20, 0, steps)
						steps += 1
						if flake.Position.Y.Offset >= 230 then
							break
						end
						coroutine.yield()
					end
					flake:Destroy()
				end))
			end
			spawn(function()
				for i=1, 220, 4 do
					snow(UDim2.new(0, rng:NextInteger(0, 250), 0, i))
				end
				while task.wait(0) do
					snow(UDim2.new(0, rng:NextInteger(0, 250), 0, 0))
				end
			end)
			task.wait(1)
		end,
	}
	spawn(function()
		local stepd = 0
		while true do
			local dt = RunService.RenderStepped:Wait()
			stepd += math.min(dt, 1 / 10)
			if CelebrationContainer.Visible then
				while stepd > 0 do
					local i = 1
					while i <= #corout do
						local st = coroutine.resume(corout[i])
						if st then
							i += 1
						else
							table.remove(corout, i)
						end
					end
					stepd -= 1 / 60
				end
			else
				stepd = 0
				while #corout > 0 do
					coroutine.close(corout[1])
					table.remove(corout, 1)
				end
				CelebrationContainer:ClearAllChildren()
			end
		end
	end)
	
	local IntroBackground = Instance.new("Frame")
	IntroBackground.Name = randomString()
	IntroBackground.Parent = GUIFrame
	IntroBackground.Active = true
	IntroBackground.BackgroundColor3 = Color3.fromRGB(36, 36, 37)
	IntroBackground.BorderSizePixel = 0
	IntroBackground.Position = UDim2.new(0, 0, 0, 45)
	IntroBackground.Size = UDim2.new(0, 250, 0, 175)
	IntroBackground.ZIndex = 19
	
	local Logo = Instance.new("ImageLabel")
	Logo.Name = randomString()
	Logo.Parent = GUIFrame
	Logo.BackgroundTransparency = 1
	Logo.BorderSizePixel = 0
	Logo.Position = UDim2.new(0, 125, 0, 127)
	Logo.Size = UDim2.new(0, 10, 0, 10)
	Logo.Image = "rbxassetid://1352543873"
	Logo.ImageTransparency = 0
	Logo.ZIndex = 19
	
	local Credits = Instance.new("TextBox")
	Credits.Name = randomString()
	Credits.Parent = GUIFrame
	Credits.BackgroundTransparency = 1
	Credits.BorderSizePixel = 0
	Credits.Position = UDim2.new(0, 0, 0.9, 30)
	Credits.Size = UDim2.new(0, 250, 0, 20)
	Credits.Font = Enum.Font.SourceSansLight
	Credits.FontSize = Enum.FontSize.Size18
	Credits.Text = "Rewritten (kinda) by STEVE"
	Credits.TextColor3 = Color3.new(1, 1, 1)
	Credits.TextWrapped = true
	Credits.ZIndex = 19
	local RandomTexts = {
		"Edge // Zwolf // Moon // Toon",
		"I hope both sides of your pillow are warm...",
		"Written (kinda) by STEVE",
		"sorry for mispelling the name",
		"Does anyone use IY themes?",
		"with totally working autocomplete",
		"imagine someone moonsecs this",
		"she neigh!",
		"why pass when you can pass away",
		"CHICKEN JOCKEY",
		"bugs are to be reported",
		"iy but faster",
		"optimisation is goated",
		"im under 6k lines of code!",
		"steals your malware",
		"or add some back on",
	}
	Credits.Text = RandomTexts[math.random(1, #RandomTexts)]
	
	spawn(function()
		local Celebrate = CelebrationAnimations[IY_Celebration()]
		Credits:TweenPosition(UDim2.new(0, 0, 0.9, 0), "Out", "Quart", 0.2)
		Logo:TweenSizeAndPosition(UDim2.new(0, 175, 0, 175), UDim2.new(0, 37, 0, 45), "Out", "Bounce", 1)
		if Celebrate ~= nil then
			Celebrate()
		else
			task.wait(1)
		end
		local OutInfo = TweenInfo.new(1.6809, Enum.EasingStyle.Sine, Enum.EasingDirection.Out, 0, false, 0)
		TweenService:Create(Logo, OutInfo, {ImageTransparency = 1}):Play()
		TweenService:Create(IntroBackground, OutInfo, {BackgroundTransparency = 1}):Play()
		Credits:TweenPosition(UDim2.new(0, 0, 0.9, 30), "Out", "Quart", 0.2)
		task.wait(0.2)
		Logo:Destroy()
		Credits:Destroy()
		IntroBackground:Destroy()
	end)
end

Players = cloneref(game:GetService("Players"))
UserInputService = cloneref(game:GetService("UserInputService"))
TweenService = cloneref(game:GetService("TweenService"))
HttpService = cloneref(game:GetService("HttpService"))
MarketplaceService = cloneref(game:GetService("MarketplaceService"))
TeleportService = cloneref(game:GetService("TeleportService"))
StarterGui = cloneref(game:GetService("StarterGui"))
GuiService = cloneref(game:GetService("GuiService"))
Lighting = cloneref(game:GetService("Lighting"))
ContextActionService = cloneref(game:GetService("ContextActionService"))
NetworkClient = cloneref(game:GetService("NetworkClient"))
ReplicatedStorage = cloneref(game:GetService("ReplicatedStorage"))
GroupService = cloneref(game:GetService("GroupService"))
PathService = cloneref(game:GetService("PathfindingService"))
SoundService = cloneref(game:GetService("SoundService"))
StarterPlayer = cloneref(game:GetService("StarterPlayer"))
InsertService = cloneref(game:GetService("InsertService"))
ChatService = cloneref(game:GetService("Chat"))
ProximityPromptService = cloneref(game:GetService("ProximityPromptService"))
StatsService = cloneref(game:GetService("Stats"))

local GetPlayerIsCaseInsensitive = true

IYMouse = Players.LocalPlayer:GetMouse()

sethidden = sethiddenproperty or set_hidden_property or set_hidden_prop
gethidden = gethiddenproperty or get_hidden_property or get_hidden_prop
queueteleport = (syn and syn.queue_on_teleport) or queue_on_teleport or (fluxus and fluxus.queue_on_teleport)
httprequest = (syn and syn.request) or (http and http.request) or http_request or (fluxus and fluxus.request) or request
local IsOnMobile = table.find({Enum.Platform.IOS, Enum.Platform.Android}, UserInputService:GetPlatform())
everyClipboard = setclipboard or toclipboard or set_clipboard or (Clipboard and Clipboard.set)

local GUIScale = 1
if IsOnMobile then
	GUIScale = 0.75
end
GUIScaling.Scale = GUIScale

spawn(function()
	local _l = false
	while true do
		task.wait()
		local l = -GUIPivot.Position.X.Offset > 250
		local L = 0
		if l then L = 1 end
		TweenService:Create(Notification, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {AnchorPoint = Vector2.new(1 - L, 1)}):Play()
		TweenService:Create(NotificationPivot, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Position = UDim2.new(1, GUIPivot.Position.X.Offset + (-250 * (1 - L)), 1, 0)}):Play()
		_l = l
	end
end)
-- Disabled, Dynamic, Persistent
local NotificationMode = "Persistent"
local _notificationz = {}
spawn(function()
	local title, text, t, losing, qlose = nil, nil, 0, false, false
	Notification.CloseButton.MouseButton1Click:Connect(function()
		losing = true
	end)
	while task.wait() do
		if NotificationMode == "Disabled" then
			table.clear(_notificationz)
		end
		if title ~= nil then
			Notification.Title.Text = title
			Notification.Content.Text = text
			local notiftime = 10
			if #_notificationz > 0 then
				notiftime = 5
				if NotificationMode == "Dynamic" then
					notiftime = 0
				else
					Notification.Title.Text = title .. " (" .. #_notificationz .. ")"
				end
			end
			if tick() > t + notiftime or losing then
				local outtime = 0.5
				if #_notificationz > 0 and losing then
					outtime = 0.1
					qlose = true
				end
				Notification:TweenPosition(UDim2.new(0, 0, 0, 100), "InOut", "Quart", outtime, true, nil)
				task.wait(outtime)
				Notification.Visible = false
				title, text = nil
			end
		else
			if #_notificationz > 0 then
				title, text = _notificationz[1][1], _notificationz[1][2]
				table.remove(_notificationz, 1)
				t, losing = tick(), false
				Notification.Visible = true
				Notification.Title.Text = title
				Notification.Content.Text = text
				local outtime = 0.5
				if qlose then
					outtime = 0.1
				end
				Notification:TweenPosition(UDim2.new(0, 0, 0, 0), "InOut", "Quart", outtime, true, nil)
			end
			qlose = false
		end
	end
end)
function IY_Notify(title, text)
	if NotificationMode == "Disabled" then return end
	table.insert(_notificationz, {title, text})
end

function toClipboard(text)
	if everyClipboard then
		everyClipboard(text)
		IY_Notify("Clipboard", "Copied to clipboard!")
	else
		IY_Notify("Clipboard", "Your exploit does not support clipboard functions.")
	end
end

function writefileExploit()
	return writefile ~= nil
end

function getHierarchy(obj)
	local w = true
	local g = nil
	g = function(o)
		if o == game then
			return "game"
		elseif o.Parent == game then
			return "game:GetService(\"" .. o.ClassName .. "\")"
		elseif o == nil then
			return "(nil)"
		end
		if string.find(o.Name, " ") ~= nil or tonumber(string.sub(o.Name, 1, 1)) ~= nil then
			local n = string.gsub(string.gsub(o.Name, "\\", "\\\\"), "\"", "\\\"")
			if w then
				return g(o.Parent) .. ":FindFirstChild(\"" .. n .. "\")"
			else
				return g(o.Parent) .. "[\"" .. n .. "\"]"
			end
		end
		return g(o.Parent) .. "." .. o.Name
	end
	return g(obj)
end

local Camera = workspace.CurrentCamera
workspace:GetPropertyChangedSignal("CurrentCamera"):Connect(function()
	local newCamera = workspace.CurrentCamera
	if newCamera ~= nil then
		Camera = newCamera
	end
end)

SpecialPlayerCases = {
	["all"] = function(speaker) return Players:GetPlayers() end,
	["others"] = function(speaker)
		local plrs = {}
		for i,v in pairs(Players:GetPlayers()) do
			if v ~= speaker then
				table.insert(plrs,v)
			end
		end
		return plrs
	end,
	["me"] = function(speaker)return {speaker} end,
	["#(%d+)"] = function(speaker,args,currentList)
		local returns = {}
		local randAmount = tonumber(args[1])
		local players = {unpack(currentList)}
		for i = 1,randAmount do
			if #players == 0 then break end
			local randIndex = math.random(1,#players)
			table.insert(returns,players[randIndex])
			table.remove(players,randIndex)
		end
		return returns
	end,
	["random"] = function(speaker,args,currentList)
		local players = Players:GetPlayers()
		local localplayer = Players.LocalPlayer
		table.remove(players, table.find(players, localplayer))
		return {players[math.random(1,#players)]}
	end,
	["%%(.+)"] = function(speaker,args)
		local returns = {}
		local team = args[1]
		for _,plr in pairs(Players:GetPlayers()) do
			if plr.Team and string.sub(string.lower(plr.Team.Name),1,#team) == string.lower(team) then
				table.insert(returns,plr)
			end
		end
		return returns
	end,
	["allies"] = function(speaker)
		local returns = {}
		local team = speaker.Team
		for _,plr in pairs(Players:GetPlayers()) do
			if plr.Team == team then
				table.insert(returns,plr)
			end
		end
		return returns
	end,
	["enemies"] = function(speaker)
		local returns = {}
		local team = speaker.Team
		for _,plr in pairs(Players:GetPlayers()) do
			if plr.Team ~= team then
				table.insert(returns,plr)
			end
		end
		return returns
	end,
	["team"] = function(speaker)
		local returns = {}
		local team = speaker.Team
		for _,plr in pairs(Players:GetPlayers()) do
			if plr.Team == team then
				table.insert(returns,plr)
			end
		end
		return returns
	end,
	["nonteam"] = function(speaker)
		local returns = {}
		local team = speaker.Team
		for _,plr in pairs(Players:GetPlayers()) do
			if plr.Team ~= team then
				table.insert(returns,plr)
			end
		end
		return returns
	end,
	["friends"] = function(speaker,args)
		local returns = {}
		for _,plr in pairs(Players:GetPlayers()) do
			if plr:IsFriendsWith(speaker.UserId) and plr ~= speaker then
				table.insert(returns,plr)
			end
		end
		return returns
	end,
	["nonfriends"] = function(speaker,args)
		local returns = {}
		for _,plr in pairs(Players:GetPlayers()) do
			if not plr:IsFriendsWith(speaker.UserId) and plr ~= speaker then
				table.insert(returns,plr)
			end
		end
		return returns
	end,
	["guests"] = function(speaker,args)
		local returns = {}
		for _,plr in pairs(Players:GetPlayers()) do
			if plr.Guest then
				table.insert(returns,plr)
			end
		end
		return returns
	end,
	["bacons"] = function(speaker,args)
		local returns = {}
		for _,plr in pairs(Players:GetPlayers()) do
			if plr.Character:FindFirstChild('Pal Hair') or plr.Character:FindFirstChild('Kate Hair') then
				table.insert(returns,plr)
			end
		end
		return returns
	end,
	["age(%d+)"] = function(speaker,args)
		local returns = {}
		local age = tonumber(args[1])
		if age == nil then return end
		for _,plr in pairs(Players:GetPlayers()) do
			if plr.AccountAge <= age then
				table.insert(returns,plr)
			end
		end
		return returns
	end,
	["nearest"] = function(speaker,args,currentList)
		local speakerChar = speaker.Character
		if not speakerChar or not speakerChar:FindFirstChild("HumanoidRootPart") then return end
		local lowest = math.huge
		local NearestPlayer = nil
		for _,plr in pairs(currentList) do
			if plr ~= speaker and plr.Character then
				local distance = plr:DistanceFromCharacter(speakerChar.HumanoidRootPart.Position)
				if distance < lowest then
					lowest = distance
					NearestPlayer = plr
				end
			end
		end
		return {NearestPlayer}
	end,
	["farthest"] = function(speaker,args,currentList)
		local speakerChar = speaker.Character
		if not speakerChar or not speakerChar:FindFirstChild("HumanoidRootPart") then return end
		local highest = 0
		local Farthest = nil
		for _,plr in pairs(currentList) do
			if plr ~= speaker and plr.Character then
				local distance = plr:DistanceFromCharacter(speakerChar.HumanoidRootPart.Position)
				if distance > highest then
					highest = distance
					Farthest = plr
				end
			end
		end
		return {Farthest}
	end,
	["group(%d+)"] = function(speaker,args)
		local returns = {}
		local groupID = tonumber(args[1])
		for _,plr in pairs(Players:GetPlayers()) do
			if plr:IsInGroup(groupID) then  
				table.insert(returns,plr)
			end
		end
		return returns
	end,
	["alive"] = function(speaker,args)
		local returns = {}
		for _,plr in pairs(Players:GetPlayers()) do
			if plr.Character and plr.Character:FindFirstChildOfClass("Humanoid") and plr.Character:FindFirstChildOfClass("Humanoid").Health > 0 then
				table.insert(returns,plr)
			end
		end
		return returns
	end,
	["dead"] = function(speaker,args)
		local returns = {}
		for _,plr in pairs(Players:GetPlayers()) do
			if (not plr.Character or not plr.Character:FindFirstChildOfClass("Humanoid")) or plr.Character:FindFirstChildOfClass("Humanoid").Health <= 0 then
				table.insert(returns,plr)
			end
		end
		return returns
	end,
	["rad(%d+)"] = function(speaker,args)
		local returns = {}
		local radius = tonumber(args[1])
		local speakerChar = speaker.Character
		if not speakerChar or not speakerChar:FindFirstChild("HumanoidRootPart") then return end
		for _,plr in pairs(Players:GetPlayers()) do
			if plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
				local magnitude = (plr.Character.HumanoidRootPart.Position-speakerChar.HumanoidRootPart.Position).magnitude
				if magnitude <= radius then table.insert(returns,plr) end
			end
		end
		return returns
	end,
	["cursor"] = function(speaker)
		--[[
		local plrs = {}
		local v = GetClosestPlayerFromCursor()
		if v ~= nil then table.insert(plrs, v) end
		return plrs
		]]
		return {} -- dead function too lazy to fix
	end,
}

function toTokens(str)
	local tokens = {}
	for op,name in string.gmatch(str,"([+-])([^+-]+)") do
		table.insert(tokens,{Operator = op,Name = name})
	end
	return tokens
end

function onlyIncludeInTable(tab,matches)
	local matchTable = {}
	local resultTable = {}
	for i,v in pairs(matches) do matchTable[v.Name] = true end
	for i,v in pairs(tab) do if matchTable[v.Name] then table.insert(resultTable,v) end end
	return resultTable
end

function removeTableMatches(tab,matches)
	local matchTable = {}
	local resultTable = {}
	for i,v in pairs(matches) do matchTable[v.Name] = true end
	for i,v in pairs(tab) do if not matchTable[v.Name] then table.insert(resultTable,v) end end
	return resultTable
end

function getPlayersByName(name)
	local comp = function(x) return x end
	if GetPlayerIsCaseInsensitive then
		comp = string.lower
	end
	local Name, Len, Found = name, string.len(name), {}
	local UsersOnly = string.sub(Name, 1, 1) == "@"
	if UsersOnly then Name = string.sub(Name, 2, -1) end
	local function chk(a, b)
		local c = math.min(string.len(a), string.len(b))
		return comp(string.sub(a, 1, c)) == comp(string.sub(b, 1, c))
	end
	for _,v in pairs(Players:GetPlayers()) do
		if chk(v.Name, Name) or 
			(not UsersOnly and 
				string.len(v.DisplayName) > 0 and 
					chk(v.DisplayName, Name)) then
			table.insert(Found, v)
		end
	end
	return Found
end

function getPlayer(list)
	local speaker = Players.LocalPlayer
	if list == nil then return {speaker.Name} end
	local nameList = string.split(list, ",")
	local foundList = {}
	for _,name in pairs(nameList) do
		if string.sub(name,1,1) ~= "+" and string.sub(name,1,1) ~= "-" then name = "+"..name end
		local tokens = toTokens(name)
		local initialPlayers = Players:GetPlayers()
		for i,v in pairs(tokens) do
			if v.Operator == "+" then
				local tokenContent = v.Name
				local foundCase = false
				for regex,case in pairs(SpecialPlayerCases) do
					local matches = {string.match(tokenContent,"^"..regex.."$")}
					if #matches > 0 then
						foundCase = true
						initialPlayers = onlyIncludeInTable(initialPlayers,case(speaker,matches,initialPlayers))
					end
				end
				if not foundCase then
					initialPlayers = onlyIncludeInTable(initialPlayers,getPlayersByName(tokenContent))
				end
			else
				local tokenContent = v.Name
				local foundCase = false
				for regex,case in pairs(SpecialPlayerCases) do
					local matches = {string.match(tokenContent,"^"..regex.."$")}
					if #matches > 0 then
						foundCase = true
						initialPlayers = removeTableMatches(initialPlayers,case(speaker,matches,initialPlayers))
					end
				end
				if not foundCase then
					initialPlayers = removeTableMatches(initialPlayers,getPlayersByName(tokenContent))
				end
			end
		end
		for i,v in pairs(initialPlayers) do table.insert(foundList,v) end
	end
	local foundNames = {}
	for i,v in pairs(foundList) do table.insert(foundNames,v.Name) end
	return foundNames
end

local SettingsIsOpen = false
SettingsButton.Icon.MouseButton1Click:Connect(function()
	SettingsButton.Icon.Rotation = 0
	TweenService:Create(SettingsButton.Icon, TweenInfo.new(0.3), {Rotation = 180}):Play()
	SettingsIsOpen = not SettingsIsOpen
end)
local IY__FileAPIErrorShown = false
function IY_FileAPIError(kind)
	if IY__FileAPIErrorShown then return end
	IY__FileAPIErrorShown = true
	local textlines = {
		"Your electronic device has experienced a critically fatal error during the creation of the IYl save file.",
		"",
		"If you are able to, you shall get contact with your cheating software's developer (or support team) and kindly elaborate to them that `writefile` refuses to work.",
		"You're not restricted for usage of this script, although such features like configurations and command save data will all be flushed down the drain. In other words, lost.",
		"",
		"Procedures for trial:",
		"> Ensure such folder named `workspace` exists within the same computer disk folder hierarchy parent as your cheating software.",
		"> If your cheating software is within such file types such as a ZIP/RAR archive, make sure you have done the extraction process.",
		"> It is possible that your electronic device is indeed extremely faulty. Restarting the device would be enough to refresh it.",
	}
	if kind == "NOWRITE" then
		textlines[1] = "Your cheating software does not support the necessary functions in order to create your IYl save file."
	end
	if kind == "SAVEFILECORRUPT" then
		textlines[1] = "Your IYl save file has been corrupted!"
		textlines[3] = "If you did not do modifications to the save file, you shall get contact with your cheating software's developer (or support team) and elaborate to them about this."
		textlines[4] = "Your save file has completely been wiped out, therefore being replaced with a shiny, clean one. Therefore your save data, like configurations and command save data, are all flushed down the drain. In other words, lost."
	end
	local FileError = Instance.new("Frame")
	local background = Instance.new("Frame")
	local Directions = Instance.new("TextLabel")
	local shadow = Instance.new("Frame")
	local PopupText = Instance.new("TextLabel")
	local Exit = Instance.new("TextButton")
	local ExitImage = Instance.new("ImageLabel")
	
	FileError.Name = randomString()
	FileError.Parent = PARENT
	FileError.Active = true
	FileError.BackgroundTransparency = 1
	FileError.Position = UDim2.new(0.5, -180, 0, 290)
	FileError.Size = UDim2.new(0, 360, 0, 20)
	FileError.ZIndex = 10
	
	background.Name = "background"
	background.Parent = FileError
	background.Active = true
	background.BackgroundColor3 = Color3.fromRGB(36, 36, 37)
	background.BorderSizePixel = 0
	background.Position = UDim2.new(0, 0, 0, 20)
	background.Size = UDim2.new(0, 360, 0, 205)
	background.ZIndex = 10
	
	Directions.Name = "Directions"
	Directions.Parent = background
	Directions.BackgroundTransparency = 1
	Directions.BorderSizePixel = 0
	Directions.Position = UDim2.new(0, 10, 0, 10)
	Directions.Size = UDim2.new(0, 340, 0, 185)
	Directions.Font = Enum.Font.SourceSans
	Directions.TextSize = 14
	Directions.Text = table.concat(textlines, "\n")
	Directions.TextColor3 = Color3.new(1, 1, 1)
	Directions.TextWrapped = true
	Directions.TextXAlignment = Enum.TextXAlignment.Left
	Directions.TextYAlignment = Enum.TextYAlignment.Top
	Directions.ZIndex = 10
	
	shadow.Name = "shadow"
	shadow.Parent = FileError
	shadow.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	shadow.BorderSizePixel = 0
	shadow.Size = UDim2.new(0, 360, 0, 20)
	shadow.ZIndex = 10
	
	PopupText.Name = "PopupText"
	PopupText.Parent = shadow
	PopupText.BackgroundTransparency = 1
	PopupText.Size = UDim2.new(1, 0, 0.95, 0)
	PopupText.ZIndex = 10
	PopupText.Font = Enum.Font.SourceSans
	PopupText.TextSize = 14
	PopupText.Text = "File Error"
	PopupText.TextColor3 = Color3.new(1, 1, 1)
	PopupText.TextWrapped = true
	
	Exit.Name = "Exit"
	Exit.Parent = shadow
	Exit.BackgroundTransparency = 1
	Exit.Position = UDim2.new(1, -20, 0, 0)
	Exit.Size = UDim2.new(0, 20, 0, 20)
	Exit.Text = ""
	Exit.ZIndex = 10
	
	ExitImage.Parent = Exit
	ExitImage.BackgroundColor3 = Color3.new(1, 1, 1)
	ExitImage.BackgroundTransparency = 1
	ExitImage.Position = UDim2.new(0, 5, 0, 5)
	ExitImage.Size = UDim2.new(0, 10, 0, 10)
	ExitImage.Image = "rbxassetid://5054663650"
	ExitImage.ZIndex = 10
	
	Exit.MouseButton1Click:Connect(function()
		FileError:Destroy()
		IY__FileAPIErrorShown = false
	end)
end
local IY_ConfigJson = {}
local IY_ConfigJsonFile = "IY_Lite.iyl"
function IY_SaveConfig()
	if writefileExploit() then
		writefile(IY_ConfigJsonFile, HttpService:JSONEncode(IY_ConfigJson))
	end
end
local _loadcfgretries = 0
function IY_LoadConfig()
	if writefileExploit() then
		_loadcfgretries += 1
		local s, raw = pcall(function()
			return readfile(IY_ConfigJsonFile)
		end)
		if s then
			if raw ~= nil then
				local s = pcall(function()
					IY_ConfigJson = HttpService:JSONDecode(raw)
				end)
				if s then
					return true
				else
					IY_SaveConfig()
					IY_FileAPIError("SAVEFILECORRUPT")
				end
			else
				IY_SaveConfig()
				task.wait()
				if _loadcfgretries < 3 then
					return IY_LoadConfig()
				else
					IY_FileAPIError("SAVEFILEVOIDED")
				end
			end
		else
			IY_SaveConfig()
			task.wait()
			if pcall(function() readfile(IY_ConfigJsonFile) end) then
				return IY_LoadConfig()
			else
				IY_FileAPIError("SAVEFILEVOIDED")
			end
		end
	else
		IY_FileAPIError("NOWRITE")
	end
	return false
end

function IY_Minimize()
	GUIFrame:TweenPosition(UDim2.new(0, 0, 0, 200), "InOut", "Quart", 0.5, true, nil)
end
function IY_Maximize()
	GUIFrame:TweenPosition(UDim2.new(0, 0, 0, 0), "InOut", "Quart", 0.2, true, nil)
end

local IY_Commands = {}
local IY__AddCommandToList_i = 1
function IY_IndexCommands(text)
	local celebrat = IY_Celebration()
	CmdList.CanvasPosition = Vector2.new(0, 0)
	CmdList.CanvasSize = UDim2.new(0, 0, 0, 0)
	local elementsl = 0
	CmdbarAuto.Text = ""
	Tooltip.Visible = false
	local loopcmd = string.split(text, "^")
	local prefix = ""
	if #loopcmd > 1 then
		for i=1, math.min(2, #loopcmd - 1) do
			prefix ..= loopcmd[1] .. "^"
			table.remove(loopcmd, 1)
		end
	end
	local command = table.concat(loopcmd, "^")
	local k = string.find(command, " ")
	if k ~= nil then
		local cmd = string.sub(command, 1, k - 1)
		local cmd2 = nil
		for _,v in pairs(IY_Commands) do
			local c = {v.Command, unpack(v.Aliases)}
			local d = table.find(c, cmd) ~= nil
			v.GUIElement.Visible = d
			if d then
				cmd2 = v
				elementsl += 1
			end
		end
		if cmd2 ~= nil then
			local args = string.split(string.sub(command, k + 1, -1), " ")
			Tooltip.Visible = true
			Tooltip.Title.Text = "Command: " .. cmd2.Command
			local arg = cmd2.Arguments[#args]
			if arg ~= nil then
				local argd = "Parameter: " .. arg.Name .. (arg.Optional and "" or "*") .. "\n" .. arg.Description
				if arg.Type == "TARGET" then
					argd ..= "\n"
					local comp = function(x) return x end
					if GetPlayerIsCaseInsensitive then
						comp = string.lower
					end
					local typed = args[#args]
					local commaz = string.split(typed, ",")
					typed = commaz[#commaz]
					local plusz = string.split(typed, "+")
					typed = plusz[#plusz]
					minuz = string.split(typed, "-")
					typed = minuz[#minuz]
					typed = comp(typed)
					table.remove(commaz, #commaz)
					table.remove(plusz, #plusz)
					table.remove(minuz, #minuz)
					local filler = {
						{"all", "Every player including you"},
						{"others", "Every other player"},
						{"me", "You, this player, whatever"},
						{"random", "Genshin Impact experience"},
						{"#", "Select this much random players", "Number of players"},
						{"allies", "Players on your team"},
						{"enemies", "Players not in your team"},
						{"team", "Players on your team"},
						{"nonteam", "Players not in your team"},
						{"friends", "Players on your friends list"},
						{"nonfriends", "Players not in your friends list"},
						{"guests", "Non-existent players"},
						{"bacons", "Players with Pal Hair"},
						{"group", "Players in specific group", "Group ID"},
						{"alive", "Players that are alive"},
						{"dead", "Players that are dead"},
						{"age", "Players below account age", "Account age"},
						{"nearest", "Nearest player"},
						{"farthest", "Farthest player"},
						{"rad", "Players within a radius", "Radius in studs"},
						{"cursor", "Nearest player on your cursor"},
					}
					for _,plr in pairs(Players:GetPlayers()) do
						table.insert(filler, {comp(plr.Name), "Select player by name"})
						table.insert(filler, {"@"..comp(plr.Name), "Select player by username"})
						if string.len(plr.DisplayName) > 0 then
							table.insert(filler, {comp(plr.DisplayName), "Select player by name"})
						end
					end
					if string.len(typed) > 0 then
						local sel = nil
						local itis = false
						for _,case in pairs(filler) do
							local f = string.find(case[1], typed)
							if case[3] ~= nil then
								if string.len(case[1]) <= string.len(typed) then
									if string.sub(typed, 1, string.len(case[1])) == case[1] then
										itis = true
									end
								end
							else
								itis = case[1] == typed
							end
							if itis then
								sel = case
								break
							elseif f ~= nil and f == 1 then
								sel = case
							end
						end
						if sel ~= nil then
							if itis and sel[3] ~= nil then
								argd ..= sel[1] .. "???: " .. sel[3]
							else
								argd ..= sel[1] .. ": " .. sel[2]
							end
							local case = cmd .. " "
							for i=1,#args - 1 do
								case ..= args[i] .. " "
							end
							table.insert(minuz, sel[1])
							minuz = table.concat(minuz, "-")
							table.insert(plusz, minuz)
							plusz = table.concat(plusz, "+")
							table.insert(commaz, plusz)
							commaz = table.concat(commaz, ",")
							case ..= commaz
							CmdbarAuto.Text = case
						else
							argd ..= "i dont know"
						end
					else
						argd ..= "Partial name/display name"
					end
				end
				if arg.Type == "ENUM" then
					argd ..= "\n"
					local typed = args[#args]
					if string.len(typed) > 0 then
						local sel = nil
						local itis = false
						for _,case in pairs(arg.Values) do
							local f = string.find(case, typed)
							if f ~= nil and f == 1 then
								sel = case
							end
						end
						if sel ~= nil then
							local case = cmd .. " "
							for i=1,#args - 1 do
								case ..= args[i] .. " "
							end
							case ..= sel
							CmdbarAuto.Text = case
						end
					end
				end
				if arg.Type == "ENUMF" then
					argd ..= "\n"
					local typed = args[#args]
					if string.len(typed) > 0 then
						local valz = arg.Values()
						local sel = nil
						local itis = false
						for _,case in pairs(valz) do
							local f = string.find(case, typed)
							if f ~= nil and f == 1 then
								sel = case
							end
						end
						if sel ~= nil then
							local case = cmd .. " "
							for i=1,#args - 1 do
								case ..= args[i] .. " "
							end
							case ..= sel
							CmdbarAuto.Text = case
						end
					end
				end
				Tooltip.Description.Text = argd
			else
				Tooltip.Description.Text = "(no more parameters)"
			end
		end
	else
		local cmd = command
		local spit_that_code_back = function(v)
			local text = v.GUIElement:GetAttribute("j")
			if celebrat == "EASTER" and math.random() < 0.2 then
				local indices = {}
				local emoji = "🥚"
				local chars = {"o", "O"}
				for i=1, string.len(text) do
					if table.find(chars, string.sub(text, i, i)) ~= nil then
						table.insert(indices, i)
					end
				end
				if #indices > 0 then
					local sel = indices[math.random(1, #indices)]
					text = string.sub(text, 1, sel - 1) .. emoji .. string.sub(text, sel + 1, -1)
				end
			end
			v.GUIElement.Text = text
		end
		if string.len(cmd) > 0 then
			local existents = {}
			local tablesort = table.clone(IY_Commands)
			for _,v in pairs(tablesort) do
				local c = {v.Command, unpack(v.Aliases)}
				for _,t in pairs(c) do
					local j = string.find(t, cmd)
					if j ~= nil then
						table.insert(existents, {j, t, v})
					end
				end
				v.GUIElement.Visible = false
			end
			if #existents > 0 then
				table.sort(existents, function(a, b)
					if a[1] == b[1] then
						return a[2] > b[2]
					end
					return a[1] > b[1]
				end)
				for i,v in pairs(existents) do
					v[3].GUIElement.LayoutOrder = -i
					v[3].GUIElement.Visible = true
					elementsl += 1
					spit_that_code_back(v[3])
				end
				if existents[#existents][1] <= 1 then
					CmdbarAuto.Text = existents[#existents][2]
					Tooltip.Visible = true
					Tooltip.Title.Text = "Command: " .. existents[#existents][3].Command
					Tooltip.Description.Text = existents[#existents][3].Description
				end
			end
		else
			for _,v in pairs(IY_Commands) do
				v.GUIElement.LayoutOrder = v.GUIElement:GetAttribute("i")
				v.GUIElement.Visible = true
				elementsl += 1
				spit_that_code_back(v)
			end
		end
	end
	CmdbarAuto.Text = prefix .. CmdbarAuto.Text
	CmdList.CanvasSize = UDim2.new(0, 0, 0, 20 * elementsl)
end
function IY__AddCommandToList(data)
	local text = data.Command
	for _,v in pairs(data.Aliases) do
		text ..= " / " .. v
	end
	for _,v in pairs(data.Arguments) do
		if v.Optional then
			text ..= " [" .. v.Name .. "]"
		else
			text ..= " <" .. v.Name .. ">"
		end
	end
	local Example = Instance.new("TextButton")
	Example.Name = randomString()
	Example.Parent = CmdList
	Example.BackgroundTransparency = 1
	Example.BorderSizePixel = 0
	Example.Size = UDim2.new(0, 190, 0, 20)
	Example.Font = Enum.Font.SourceSans
	Example.TextSize = 18
	Example.Text = text
	Example.TextColor3 = Color3.new(1, 1, 1)
	Example.TextXAlignment = Enum.TextXAlignment.Left
	Example.ZIndex = 10
	Example.LayoutOrder = IY__AddCommandToList_i
	Example:SetAttribute("i", IY__AddCommandToList_i)
	Example:SetAttribute("j", Example.Text)
	IY__AddCommandToList_i += 1
	Example.MouseButton1Click:Connect(function()
		Cmdbar.Text = data.Command .. " "
		Cmdbar:CaptureFocus()
	end)
	return Example
end
function IY_AddCommand(data)
	local element = IY__AddCommandToList(data)
	data.GUIElement = element
	table.insert(IY_Commands, data)
	if #IY_Commands % 16 == 0 then
		RunService.RenderStepped:Wait()
	end
end
local IY__LastCommandBreak = 0
function IY_ExecuteCommand(command, nonotify)
	local j = string.find(command, " ") or 0
	local cmd = string.sub(command, 1, j - 1)
	local args = {}
	if j > 0 then
		local a = string.sub(command, j + 1)
		args = string.split(a, " ")
	end
	local loopcmd = string.split(cmd, "^")
	if #loopcmd > 1 then
		local times = 0
		local delat = 0
		if #loopcmd == 2 then
			times = tonumber(loopcmd[1]) or times
			table.remove(loopcmd, 1)
		else
			times = tonumber(loopcmd[1]) or times
			delat = tonumber(loopcmd[2]) or delat
			table.remove(loopcmd, 1)
			table.remove(loopcmd, 1)
		end
		cmd = table.concat(loopcmd, "^")
		spawn(function()
			local toe = tick()
			local ts = 0
			while toe > IY__LastCommandBreak do
				ts += 1
				if times < ts then
					break
				end
				IY_ExecuteCommand(cmd .. " " .. table.concat(args, " "), nonotify)
				task.wait(delat)
			end
		end)
		return
	end
	local multicmd = string.split(cmd, "\\")
	if #multicmd > 1 then
		for i=1, #multicmd do
			IY_ExecuteCommand(multicmd[i], nonotify)
		end
		return true, true
	end
	local data = nil
	for _,v in pairs(IY_Commands) do
		if v.Command == cmd or table.find(v.Aliases, cmd) ~= nil then
			data = v
			break
		end
	end
	if data ~= nil then
		local _oldne = NotificationMode
		if nonotify == true then NotificationMode = "Disabled" end
		local s, e = true, ""
		xpcall(data.Execute, function(m)
			s = false
			e = m
			NotificationMode = _oldne
			IY_Notify("Command Error: " .. data.Command, debug.traceback(m))
		end, unpack(args))
		NotificationMode = _oldne
		return true, s
	end
	return false, false
end
local IY__LastUserInput = tick()
Cmdbar.FocusLost:Connect(function(enter)
	IY__LastUserInput = tick()
	Tooltip.Visible = false
	if enter then
		local input = Cmdbar.Text
		Cmdbar.Text = ""
		IY_IndexCommands("")
		IY_ExecuteCommand(input)
	end
end)
Cmdbar:GetPropertyChangedSignal("Text"):Connect(function()
	if Cmdbar:IsFocused() then
		IY_IndexCommands(Cmdbar.Text)
	end
	if string.len(Cmdbar.Text) > 0 then
		CmdbarView.Text = Cmdbar.Text
		CmdbarView.TextColor3 = Cmdbar.TextColor3
	else
		CmdbarView.Text = Cmdbar.PlaceholderText
		CmdbarView.TextColor3 = Cmdbar.PlaceholderColor3
	end
end)
Cmdbar.Text = ""
function IY_UserClick(x, y)
	if x == nil then
		IY__LastUserInput = tick()
		return
	end
	if GUIFrame.AbsolutePosition.X >= x and GUIFrame.AbsolutePosition.Y >= y
		and GUIFrame.AbsolutePosition.X + GUIFrame.AbsoluteSize.X < x
		and GUIFrame.AbsolutePosition.Y + GUIFrame.AbsoluteSize.Y < y then
		IY__LastUserInput = tick()
	end
end
IYMouse.Button1Down:Connect(function()
	IY_UserClick(IYMouse.X, IYMouse.Y)
end)
IYMouse.Move:Connect(function()
	if not IsOnMobile then
		IY_UserClick(IYMouse.X, IYMouse.Y)
	end
end)
GUIFrame.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.Touch then
		IY_UserClick()
	end
end)
GUIFrame.MouseEnter:Connect(function()
	IY_UserClick()
end)
spawn(function()
	local dragging = false
	local dragInput = nil
	local dragStart = 0
	local guiStart = 0
	local function update(input)
		local delta = input.Position.X - dragStart
		local Position = guiStart + (delta / GUIScale)
		Position = math.clamp(Position, (250 - Camera.ViewportSize.X) / GUIScale, 0)
		TweenService:Create(GUIPivot, TweenInfo.new(1.5, Enum.EasingStyle.Elastic), {Position = UDim2.new(1, Position, 1, 0)}):Play()
		IY_UserClick()
	end
	GUITitle.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			dragStart = input.Position.X
			guiStart = GUIPivot.Position.X.Offset
		end
	end)
	UserInputService.InputChanged:Connect(function(input)
		if dragging then
			if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
				update(input)
			end
		end
	end)
	UserInputService.InputEnded:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = false
		end
	end)
end)
local IY__HolderState = true
local IY__KeepIYOpen = false
local IY__SettingsAlpha = 0
local IY__HideTime = 2
RunService.RenderStepped:Connect(function(dt)
	if Cmdbar:IsFocused() or IY__KeepIYOpen then
		IY__LastUserInput = tick()
	end
	if tick() - IY__LastUserInput >= IY__HideTime then
		if IY__HolderState then
			IY__HolderState = false
			IY_Minimize()
		end
	else
		if not IY__HolderState then
			IY__HolderState = true
			IY_Maximize()
		end
	end
	if IsOnMobile then
		Tooltip.Position = GUIPivot.Position + UDim2.new(0, -460, 0, -240)
	end
	if SettingsIsOpen and not Cmdbar:IsFocused() then
		IY__SettingsAlpha = math.min(1, IY__SettingsAlpha + (dt / 0.3))
	else
		IY__SettingsAlpha = math.max(0, IY__SettingsAlpha - (dt / 0.3))
	end
	SettingsFrame.Position = UDim2.new(0, 0, 0, 220):Lerp(UDim2.new(0, 0, 0, 45), TweenService:GetValue(IY__SettingsAlpha, Enum.EasingStyle.Quart, Enum.EasingDirection.InOut))
end)
local function IY__UpdateConfigIn()
	IY_ConfigJson.NotificationMode = NotificationMode
	IY_ConfigJson.KeepMenuOpen = IY__KeepIYOpen
	IY_ConfigJson.CaseInsensitivePlayerSelector = GetPlayerIsCaseInsensitive
	IY_ConfigJson.CelebrationAnimations = CelebrationContainer.Visible
	IY_ConfigJson.GUIScale = GUIScaling.Scale
end
local function IY__UpdateConfigOut()
	if table.find({"Disabled", "Dynamic", "Persistent"}, IY_ConfigJson.NotificationMode) == nil then
		IY_ConfigJson.NotificationMode = "Persistent"
	end
	if IY_ConfigJson.KeepMenuOpen == nil or typeof(IY_ConfigJson.KeepMenuOpen) ~= "boolean" then
		IY_ConfigJson.KeepMenuOpen = false
	end
	if IY_ConfigJson.CaseInsensitivePlayerSelector == nil or typeof(IY_ConfigJson.CaseInsensitivePlayerSelector) ~= "boolean" then
		IY_ConfigJson.CaseInsensitivePlayerSelector = true
	end
	if IY_ConfigJson.CelebrationAnimations == nil or typeof(IY_ConfigJson.CelebrationAnimations) ~= "boolean" then
		IY_ConfigJson.CelebrationAnimations = true
	end
	if IY_ConfigJson.GUIScale == nil or typeof(IY_ConfigJson.GUIScale) ~= "number" or IY_ConfigJson.GUIScale < 0.01 then
		IY_ConfigJson.GUIScale = 1
		if IsOnMobile then
			IY_ConfigJson.GUIScale = 0.75
		end
	end
	NotificationMode = IY_ConfigJson.NotificationMode
	IY__KeepIYOpen = IY_ConfigJson.KeepMenuOpen
	GetPlayerIsCaseInsensitive = IY_ConfigJson.CaseInsensitivePlayerSelector
	CelebrationContainer.Visible = IY_ConfigJson.CelebrationAnimations
	GUIScaling.Scale = IY_ConfigJson.GUIScale
end
IY__UpdateConfigIn()
local _autosave_enabled = IY_LoadConfig()
IY__UpdateConfigOut()
spawn(function()
	-- auto save the config
	if not _autosave_enabled then return end
	while wait(5) do
		IY__UpdateConfigIn()
		IY_SaveConfig()
	end
end)
do
	local a = IY_AddSetting("SWITCH", "Keep Menu Open")
	a.Changed:Connect(function(v)
		IY__KeepIYOpen = v == 1
	end)
	a.Value = IY__KeepIYOpen and 1 or 0
	local b = IY_AddSetting("SWITCH", "Case Insensitive Selector")
	b.Changed:Connect(function(v)
		GetPlayerIsCaseInsensitive = v == 1
	end)
	b.Value = GetPlayerIsCaseInsensitive and 1 or 0
	local c = IY_AddSetting("SWITCH", "Holiday Animations")
	c.Changed:Connect(function(v)
		CelebrationContainer.Visible = v == 1
	end)
	c.Value = CelebrationContainer.Visible and 1 or 0
	local de = {"Disabled", "Dynamic", "Persistent"}
	local d = IY_AddSetting("SELECT", "Notify Mode", de)
	d.Changed:Connect(function(v)
		NotificationMode = de[v]
		print(NotificationMode)
	end)
	d.Value = table.find(de, NotificationMode) or 3
	IY_AddSetting("LABEL", "* Commands' Settings *")
end

local FallenPartsDestroyHeight = workspace.FallenPartsDestroyHeight

IY_AddCommand({
	Command = "discord",
	Aliases = {"support", "help"},
	Arguments = {},
	Plugin = "BUILTIN",
	--Description = "this command is useless, this is only here to make this look like the real iy",
	Description = "you want some help? sure thing! this is awes' discord server and i robbed him for it >:3",
	Execute = function()
		--IY_Notify("help", "the command has description and it says this command you just ran is useless")
		toClipboard("https://discord.gg/Ua3bmjDdXn")
	end,
})
IY_AddCommand({
	Command = "guiscale",
	Aliases = {},
	Arguments = {
		{Name = "scale", Optional = false, Description = "UI Scale"},
	},
	Plugin = "BUILTIN",
	Description = "scale the ui (1 is default scale)",
	Execute = function(scale)
		scale = tonumber(scale) or GUIScaling.Scale
		scale = math.clamp(scale, 0.5, 1.5)
		GUIScaling.Scale = scale
	end,
})
IY_AddCommand({
	Command = "console",
	Aliases = {"devconsole"},
	Arguments = {},
	Plugin = "BUILTIN",
	Description = "Shows the Developer's Console.",
	Execute = function()
		StarterGui:SetCore("DevConsoleVisible", true)
	end,
})

do -- Other Scripts from others
	IY_AddCommand({
		Command = "dex",
		Aliases = {"explorer"},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "Opens DEX by Moon.",
		Execute = function()
			IY_Notify("Loading...", "Sit back and relax while this script loads...")
			loadstring(game:HttpGet("https://raw.githubusercontent.com/infyiff/backup/main/dex.lua"))()
		end,
	})
	IY_AddCommand({
		Command = "remotespy",
		Aliases = {"rspy"},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "Opens Simple Spy V3.",
		Execute = function()
			IY_Notify("Loading...", "Sit back and relax while this script loads...")
			loadstring(game:HttpGet("https://raw.githubusercontent.com/infyiff/backup/main/SimpleSpyV3/main.lua"))()
		end,
	})
	IY_AddCommand({
		Command = "audiologger",
		Aliases = {"alogger"},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "Opens Edge's Audio Logger.",
		Execute = function()
			IY_Notify("Loading...", "Sit back and relax while this script loads...")
			loadstring(game:HttpGet(('https://raw.githubusercontent.com/infyiff/backup/main/audiologger.lua'),true))()
		end,
	})
end
do -- Server info related
	local canOpenServerinfo = true
	IY_AddCommand({
		Command = "serverinfo",
		Aliases = {"info"},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "Gives you information about this server.",
		Execute = function()
			if not canOpenServerinfo then return end
			canOpenServerinfo = false
			spawn(function()
				local FRAME = Instance.new("Frame")
				local shadow = Instance.new("Frame")
				local PopupText = Instance.new("TextLabel")
				local Exit = Instance.new("TextButton")
				local ExitImage = Instance.new("ImageLabel")
				local background = Instance.new("Frame")
				local TextLabel = Instance.new("TextLabel")
				local TextLabel2 = Instance.new("TextLabel")
				local TextLabel3 = Instance.new("TextLabel")
				local Time = Instance.new("TextLabel")
				local appearance = Instance.new("TextLabel")
				local maxplayers = Instance.new("TextLabel")
				local name = Instance.new("TextLabel")
				local placeid = Instance.new("TextLabel")
				local playerid = Instance.new("TextLabel")
				local players = Instance.new("TextLabel")
				local CopyApp = Instance.new("TextButton")
				local CopyPlrID = Instance.new("TextButton")
				local CopyPlcID = Instance.new("TextButton")
				
				FRAME.Name = randomString()
				FRAME.Parent = PARENT
				FRAME.Active = true
				FRAME.BackgroundTransparency = 1
				FRAME.Position = UDim2.new(0.5, -130, 0, -500)
				FRAME.Size = UDim2.new(0, 250, 0, 20)
				FRAME.ZIndex = 10
				
				shadow.Name = "shadow"
				shadow.Parent = FRAME
				shadow.BackgroundColor3 = currentShade2
				shadow.BorderSizePixel = 0
				shadow.Size = UDim2.new(0, 250, 0, 20)
				shadow.ZIndex = 10
				
				PopupText.Name = "PopupText"
				PopupText.Parent = shadow
				PopupText.BackgroundTransparency = 1
				PopupText.Size = UDim2.new(1, 0, 0.95, 0)
				PopupText.ZIndex = 10
				PopupText.Font = Enum.Font.SourceSans
				PopupText.TextSize = 14
				PopupText.Text = "Server"
				PopupText.TextColor3 = currentText1
				PopupText.TextWrapped = true
				
				Exit.Name = "Exit"
				Exit.Parent = shadow
				Exit.BackgroundTransparency = 1
				Exit.Position = UDim2.new(1, -20, 0, 0)
				Exit.Size = UDim2.new(0, 20, 0, 20)
				Exit.Text = ""
				Exit.ZIndex = 10
				
				ExitImage.Parent = Exit
				ExitImage.BackgroundColor3 = Color3.new(1, 1, 1)
				ExitImage.BackgroundTransparency = 1
				ExitImage.Position = UDim2.new(0, 5, 0, 5)
				ExitImage.Size = UDim2.new(0, 10, 0, 10)
				ExitImage.Image = "rbxassetid://5054663650"
				ExitImage.ZIndex = 10
				
				background.Name = "background"
				background.Parent = FRAME
				background.Active = true
				background.BackgroundColor3 = currentShade1
				background.BorderSizePixel = 0
				background.Position = UDim2.new(0, 0, 1, 0)
				background.Size = UDim2.new(0, 250, 0, 250)
				background.ZIndex = 10
				
				TextLabel.Name = "Text Label"
				TextLabel.Parent = background
				TextLabel.BackgroundTransparency = 1
				TextLabel.BorderSizePixel = 0
				TextLabel.Position = UDim2.new(0, 5, 0, 80)
				TextLabel.Size = UDim2.new(0, 100, 0, 20)
				TextLabel.ZIndex = 10
				TextLabel.Font = Enum.Font.SourceSansLight
				TextLabel.TextSize = 20
				TextLabel.Text = "Run Time:"
				TextLabel.TextColor3 = currentText1
				TextLabel.TextXAlignment = Enum.TextXAlignment.Left
				
				TextLabel2.Name = "Text Label2"
				TextLabel2.Parent = background
				TextLabel2.BackgroundTransparency = 1
				TextLabel2.BorderSizePixel = 0
				TextLabel2.Position = UDim2.new(0, 5, 0, 130)
				TextLabel2.Size = UDim2.new(0, 100, 0, 20)
				TextLabel2.ZIndex = 10
				TextLabel2.Font = Enum.Font.SourceSansLight
				TextLabel2.TextSize = 20
				TextLabel2.Text = "Statistics:"
				TextLabel2.TextColor3 = currentText1
				TextLabel2.TextXAlignment = Enum.TextXAlignment.Left
				
				TextLabel3.Name = "Text Label3"
				TextLabel3.Parent = background
				TextLabel3.BackgroundTransparency = 1
				TextLabel3.BorderSizePixel = 0
				TextLabel3.Position = UDim2.new(0, 5, 0, 10)
				TextLabel3.Size = UDim2.new(0, 100, 0, 20)
				TextLabel3.ZIndex = 10
				TextLabel3.Font = Enum.Font.SourceSansLight
				TextLabel3.TextSize = 20
				TextLabel3.Text = "Local Player:"
				TextLabel3.TextColor3 = currentText1
				TextLabel3.TextXAlignment = Enum.TextXAlignment.Left
				
				Time.Name = "Time"
				Time.Parent = background
				Time.BackgroundTransparency = 1
				Time.BorderSizePixel = 0
				Time.Position = UDim2.new(0, 5, 0, 105)
				Time.Size = UDim2.new(0, 100, 0, 20)
				Time.ZIndex = 10
				Time.Font = Enum.Font.SourceSans
				Time.FontSize = Enum.FontSize.Size14
				Time.Text = "LOADING"
				Time.TextColor3 = currentText1
				Time.TextXAlignment = Enum.TextXAlignment.Left
				
				appearance.Name = "appearance"
				appearance.Parent = background
				appearance.BackgroundTransparency = 1
				appearance.BorderSizePixel = 0
				appearance.Position = UDim2.new(0, 5, 0, 55)
				appearance.Size = UDim2.new(0, 100, 0, 20)
				appearance.ZIndex = 10
				appearance.Font = Enum.Font.SourceSans
				appearance.FontSize = Enum.FontSize.Size14
				appearance.Text = "Appearance: LOADING"
				appearance.TextColor3 = currentText1
				appearance.TextXAlignment = Enum.TextXAlignment.Left
				
				maxplayers.Name = "maxplayers"
				maxplayers.Parent = background
				maxplayers.BackgroundTransparency = 1
				maxplayers.BorderSizePixel = 0
				maxplayers.Position = UDim2.new(0, 5, 0, 175)
				maxplayers.Size = UDim2.new(0, 100, 0, 20)
				maxplayers.ZIndex = 10
				maxplayers.Font = Enum.Font.SourceSans
				maxplayers.FontSize = Enum.FontSize.Size14
				maxplayers.Text = "LOADING"
				maxplayers.TextColor3 = currentText1
				maxplayers.TextXAlignment = Enum.TextXAlignment.Left
				
				name.Name = "name"
				name.Parent = background
				name.BackgroundTransparency = 1
				name.BorderSizePixel = 0
				name.Position = UDim2.new(0, 5, 0, 215)
				name.Size = UDim2.new(0, 240, 0, 30)
				name.ZIndex = 10
				name.Font = Enum.Font.SourceSans
				name.FontSize = Enum.FontSize.Size14
				name.Text = "Place Name: LOADING"
				name.TextColor3 = currentText1
				name.TextWrapped = true
				name.TextXAlignment = Enum.TextXAlignment.Left
				name.TextYAlignment = Enum.TextYAlignment.Top
				
				placeid.Name = "placeid"
				placeid.Parent = background
				placeid.BackgroundTransparency = 1
				placeid.BorderSizePixel = 0
				placeid.Position = UDim2.new(0, 5, 0, 195)
				placeid.Size = UDim2.new(0, 100, 0, 20)
				placeid.ZIndex = 10
				placeid.Font = Enum.Font.SourceSans
				placeid.FontSize = Enum.FontSize.Size14
				placeid.Text = "Place ID: LOADING"
				placeid.TextColor3 = currentText1
				placeid.TextXAlignment = Enum.TextXAlignment.Left
				
				playerid.Name = "playerid"
				playerid.Parent = background
				playerid.BackgroundTransparency = 1
				playerid.BorderSizePixel = 0
				playerid.Position = UDim2.new(0, 5, 0, 35)
				playerid.Size = UDim2.new(0, 100, 0, 20)
				playerid.ZIndex = 10
				playerid.Font = Enum.Font.SourceSans
				playerid.FontSize = Enum.FontSize.Size14
				playerid.Text = "Server Code: LOADING"
				playerid.TextColor3 = currentText1
				playerid.TextXAlignment = Enum.TextXAlignment.Left
				
				players.Name = "players"
				players.Parent = background
				players.BackgroundTransparency = 1
				players.BorderSizePixel = 0
				players.Position = UDim2.new(0, 5, 0, 155)
				players.Size = UDim2.new(0, 100, 0, 20)
				players.ZIndex = 10
				players.Font = Enum.Font.SourceSans
				players.FontSize = Enum.FontSize.Size14
				players.Text = "LOADING"
				players.TextColor3 = currentText1
				players.TextXAlignment = Enum.TextXAlignment.Left
				
				CopyApp.Name = "CopyApp"
				CopyApp.Parent = background
				CopyApp.BackgroundColor3 = currentShade2
				CopyApp.BorderSizePixel = 0
				CopyApp.Position = UDim2.new(0, 210, 0, 55)
				CopyApp.Size = UDim2.new(0, 35, 0, 20)
				CopyApp.Font = Enum.Font.SourceSans
				CopyApp.TextSize = 14
				CopyApp.Text = "Copy"
				CopyApp.TextColor3 = currentText1
				CopyApp.ZIndex = 10
				
				CopyPlrID.Name = "CopyPlrID"
				CopyPlrID.Parent = background
				CopyPlrID.BackgroundColor3 = currentShade2
				CopyPlrID.BorderSizePixel = 0
				CopyPlrID.Position = UDim2.new(0, 210, 0, 35)
				CopyPlrID.Size = UDim2.new(0, 35, 0, 20)
				CopyPlrID.Font = Enum.Font.SourceSans
				CopyPlrID.TextSize = 14
				CopyPlrID.Text = "Copy"
				CopyPlrID.TextColor3 = currentText1
				CopyPlrID.ZIndex = 10
				
				CopyPlcID.Name = "CopyPlcID"
				CopyPlcID.Parent = background
				CopyPlcID.BackgroundColor3 = currentShade2
				CopyPlcID.BorderSizePixel = 0
				CopyPlcID.Position = UDim2.new(0, 210, 0, 195)
				CopyPlcID.Size = UDim2.new(0, 35, 0, 20)
				CopyPlcID.Font = Enum.Font.SourceSans
				CopyPlcID.TextSize = 14
				CopyPlcID.Text = "Copy"
				CopyPlcID.TextColor3 = currentText1
				CopyPlcID.ZIndex = 10
				
				local SINFOGUI = background
				FRAME:TweenPosition(UDim2.new(0.5, -130, 0, 100), "InOut", "Quart", 0.5, true, nil) 
				wait(0.5)
				Exit.MouseButton1Click:Connect(function()
					FRAME:TweenPosition(UDim2.new(0.5, -130, 0, -500), "InOut", "Quart", 0.5, true, nil) 
					wait(0.6)
					FRAME:Destroy()
					canOpenServerinfo = true
				end)
				SINFOGUI.playerid.Text = "Server Code: " ..game.PrivateServerId
				SINFOGUI.maxplayers.Text = Players.MaxPlayers.. " Players Max"
				SINFOGUI.placeid.Text = "Place ID: " ..game.PlaceId
				spawn(function()
					local Asset = MarketplaceService:GetProductInfo(PlaceId)
					SINFOGUI.name.Text = "Place Name: " .. Asset.Name
				end)
		
				CopyApp.MouseButton1Click:Connect(function()
					toClipboard(speaker.CharacterAppearanceId)
				end)
				CopyPlrID.MouseButton1Click:Connect(function()
					toClipboard(game.PrivateServerId)
				end)
				CopyPlcID.MouseButton1Click:Connect(function()
					toClipboard(game.PlaceId)
				end)
		
				repeat
					players = Players:GetPlayers()
					SINFOGUI.players.Text = #players.. " Player(s)"
					SINFOGUI.appearance.Text = "Appearance: " ..speaker.CharacterAppearanceId
					local seconds = math.floor(workspace.DistributedGameTime)
					local minutes = math.floor(workspace.DistributedGameTime / 60)
					local hours = math.floor(workspace.DistributedGameTime / 60 / 60)
					local seconds = seconds - (minutes * 60)
					local minutes = minutes - (hours * 60)
					if hours < 1 then
						if minutes < 1 then
							SINFOGUI.Time.Text = seconds .. " Second(s)"
						else
							SINFOGUI.Time.Text = minutes .. " Minute(s), " .. seconds .. " Second(s)"
						end
					else
						SINFOGUI.Time.Text = hours .. " Hour(s), " .. minutes .. " Minute(s), " .. seconds .. " Second(s)"
					end
					wait(1)
				until SINFOGUI.Parent == nil
			end)
		end,
	})
	IY_AddCommand({
		Command = "jobid",
		Aliases = {},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "Creates a Teleport script to this server, and places it in your clipboard.",
		Execute = function()
			toClipboard("game.TeleportService:TeleportToPlaceInstance(" .. game.PlaceId .. ",\"" .. game.JobId .. "\",game.Players.LocalPlayer)")
		end,
	})
	IY_AddCommand({
		Command = "notifyjobid",
		Aliases = {},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "Notifies you the JobId. why would you want that?",
		Execute = function()
			IY_Notify("JobId notify", game.JobId)
		end,
	})
	IY_AddCommand({
		Command = "copyplrid",
		Aliases = {"userid"},
		Arguments = {
			{Name = "target", Type = "TARGET", Optional = false, Description = "The target player"},
		},
		Plugin = "BUILTIN",
		Description = "Copies the player ID of the target player",
		Execute = function(list)
			local target = getPlayer(list)
			target = target[1]
			if target ~= nil then
				target = Players:FindFirstChild(target)
				if target ~= nil then
					toClipboard(tostring(target.UserId))
					return
				end
			end
			IY_Notify("Copy Player ID", "I dont know what you're trying to do you just gave me an invalid player or argument")
		end,
	})
	IY_AddCommand({
		Command = "age",
		Aliases = {"plrage"},
		Arguments = {
			{Name = "target", Type = "TARGET", Optional = false, Description = "The target player"},
		},
		Plugin = "BUILTIN",
		Description = "Notifies you the account age of the target player",
		Execute = function(list)
			local target = getPlayer(list)
			target = target[1]
			if target ~= nil then
				target = Players:FindFirstChild(target)
				if target ~= nil then
					IY_Notify("Player Age", target.Name .. "'s Age is " .. target.AccountAge .. " days")
					return
				end
			end
			IY_Notify("Player Age", "I dont know what you're trying to do you just gave me an invalid player or argument")
		end,
	})
	IY_AddCommand({
		Command = "rejoin",
		Aliases = {"rj"},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "Lets you rejoin",
		Execute = function()
			if #Players:GetPlayers() <= 1 then
				Players.LocalPlayer:Kick("\nRejoining...")
				wait()
				TeleportService:Teleport(game.PlaceId, Players.LocalPlayer)
			else
				TeleportService:TeleportToPlaceInstance(game.PlaceId, game.JobId, Players.LocalPlayer)
			end
		end,
	})
	local autorjEnabled = false
	IY_AddCommand({
		Command = "autorejoin",
		Aliases = {"autorj"},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "Automatically rejoins you if you get disconnected/kicked",
		Execute = function()
			IY_Notify("Auto Rejoin", "Auto rejoin enabled")
			if autorjEnabled then return end
			autorjEnabled = true
			GuiService.ErrorMessageChanged:Connect(function()
				IY_ExecuteCommand("rejoin")
			end)
		end,
	})
	IY_AddCommand({
		Command = "serverhop",
		Aliases = {"shop"},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "this doesnt work for me, i destroyed it and is now unusable",
		Execute = function()
			IY_Notify("Command", "this command doesnt work well, its disabled")
		end,
	})
	IY_AddCommand({
		Command = "joinplayer",
		Aliases = {},
		Arguments = {
			{Name = "Username / ID", Optional = false, Description = "Target Player's username or user ID"},
			{Name = "Place ID", Optional = false, Description = "Target Player's place ID"},
		},
		Plugin = "BUILTIN",
		Description = "this doesnt work for me, i destroyed it and is now unusable",
		Execute = function()
			IY_Notify("Command", "this command doesnt work well, its disabled")
		end,
	})
	IY_AddCommand({
		Command = "gameteleport",
		Aliases = {"gametp"},
		Arguments = {
			{Name = "Place ID", Optional = false, Description = "Target Player's place ID"},
		},
		Plugin = "BUILTIN",
		Description = "Joins a game using its Place ID",
		Execute = function(placeid)
			TeleportService:Teleport(tonumber(placeid))
		end,
	})
	IY_AddCommand({
		Command = "exit",
		Aliases = {},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "Kills the fuсking game lmao",
		Execute = function()
			game:Shutdown()
			IY_Notify("no game", "no game")
		end,
	})
end
do -- Network related stuff
	IY_AddCommand({
		Command = "datalimit",
		Aliases = {},
		Arguments = {
			{Name = "KBPS", Optional = true, Description = "Kilobits per second"},
		},
		Plugin = "BUILTIN",
		Description = "Sets the outgoing KBPS limit",
		Execute = function(num)
			if tonumber(num) ~= nil then
				NetworkClient:SetOutgoingKBPSLimit(tonumber(num))
			end
		end,
	})
	IY_AddCommand({
		Command = "replicationlag",
		Aliases = {"backtrack"},
		Arguments = {
			{Name = "millis", Optional = true, Description = "Additional Ping in ms"},
		},
		Plugin = "BUILTIN",
		Description = "This can be used to increase your ping so u can complain",
		Execute = function()
			if tonumber(num) ~= nil then
				settings():GetService("NetworkSettings").IncomingReplicationLag = tonumber(num)
			end
		end,
	})
end
do -- Anti____
	local antiidling = false
	IY_AddCommand({
		Command = "antiidle",
		Aliases = {"antiafk", "clientantiidle", "clientantiafk"},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "Prevents being kicked for being idle",
		Execute = function()
			IY_Notify('Anti Idle','Anti idle is enabled')
			if antiidling then return end
			antiidling = true
			local GC = getconnections or get_signal_cons
			if GC then
				for i,v in pairs(GC(Players.LocalPlayer.Idled)) do
					if v["Disable"] then
						v["Disable"](v)
					elseif v["Disconnect"] then
						v["Disconnect"](v)
					end
				end
			else
				Players.LocalPlayer.Idled:Connect(function()
					local VirtualUser = game:GetService("VirtualUser")
					VirtualUser:CaptureController()
					VirtualUser:ClickButton2(Vector2.new())
				end)
			end
		end,
	})
	local antikicking = false
	IY_AddCommand({
		Command = "clientantikick",
		Aliases = {"antikick"},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "Prevents kicked from client",
		Execute = function()
			if not hookmetamethod then 
				return IY_Notify('Incompatible Exploit','Your exploit does not support this command (missing hookmetamethod)')
			end
			if not newcclosure then 
				return IY_Notify('Incompatible Exploit','Your exploit does not support this command (missing newcclosure)')
			end
			IY_Notify('Client Antikick','Client anti kick is now active (only effective on localscript kick)')
			if antikicking then return end
			antikicking = true
			-- this was fixed by STEVE, because for some reason the guy who made this
			-- didnt take account the fact that calling Player.Kick(workspace) errors out
			-- and because of that, adonis anticheat detects it
			local LocalPlayer = Players.LocalPlayer
			local oldhmmi
			local oldhmmnc
			local function namecallkick(self, ...)
				if typeof(self) == "Instance" and self == LocalPlayer then
					return
				end
				error("Expected ':' not '.' calling member function Kick", 2)
			end
			oldhmmi = hookmetamethod(LocalPlayer , "__index", newcclosure(function(self, method)
				if typeof(self) == "Instance" and self == LocalPlayer
					and type(method) == "string" and method == "Kick" then
					return namecallkick
				end
				return oldhmmi(self, method)
			end))
			oldhmmnc = hookmetamethod(LocalPlayer, "__namecall", newcclosure(function(self, ...)
				if typeof(self) == "Instance" and self == LocalPlayer
					and getnamecallmethod() == "Kick" then
					return namecallkick(self, ...)
				end
				return oldhmmnc(self, ...)
			end))
		end,
	})
	local antiteleporting = false
	IY_AddCommand({
		Command = "clientantiteleport",
		Aliases = {"antikick"},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "Prevents teleport from client",
		Execute = function()
			if not hookmetamethod then 
				return IY_Notify('Incompatible Exploit','Your exploit does not support this command (missing hookmetamethod)')
			end
			IY_Notify('Client AntiTP','Client anti teleport is now active (only effective on localscript teleport)')
			if antiteleporting then return end
			antiteleporting = true
			local TeleportService = TeleportService
			local oldhmmi
			local oldhmmnc
			oldhmmi = hookmetamethod(game, "__index", function(self, method)
				if self == TeleportService then
					if method == "Teleport" then
						return error("Expected ':' not '.' calling member function Kick", 2)
					elseif method == "TeleportToPlaceInstance" then
						return error("Expected ':' not '.' calling member function TeleportToPlaceInstance", 2)
					end
				end
				return oldhmmi(self, method)
			end)
			oldhmmnc = hookmetamethod(game, "__namecall", function(self, ...)
				if self == TeleportService and getnamecallmethod():lower() == "teleport" or getnamecallmethod() == "TeleportToPlaceInstance" then
					return
				end
				return oldhmmnc(self, ...)
			end)
		end,
	})
	IY_AddCommand({
		Command = "antilag",
		Aliases = {"boostfps", "lowgraphics", "reducelag"},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "Prevents lag idk",
		Execute = function()
			local Terrain = workspace:FindFirstChildOfClass('Terrain')
			Terrain.WaterWaveSize = 0
			Terrain.WaterWaveSpeed = 0
			Terrain.WaterReflectance = 0
			Terrain.WaterTransparency = 0
			Lighting.GlobalShadows = false
			Lighting.FogEnd = 9e9
			settings().Rendering.QualityLevel = 1
			for i,v in pairs(game:GetDescendants()) do
				if v:IsA("Part") or v:IsA("UnionOperation") or v:IsA("MeshPart") or v:IsA("CornerWedgePart") or v:IsA("TrussPart") then
					v.Material = "Plastic"
					v.Reflectance = 0
				elseif v:IsA("Decal") then
					v.Transparency = 1
				elseif v:IsA("ParticleEmitter") or v:IsA("Trail") then
					v.Lifetime = NumberRange.new(0)
				elseif v:IsA("Explosion") then
					v.BlastPressure = 1
					v.BlastRadius = 1
				end
			end
			for i,v in pairs(Lighting:GetDescendants()) do
				if v:IsA("BlurEffect") or v:IsA("SunRaysEffect") or v:IsA("ColorCorrectionEffect") or v:IsA("BloomEffect") or v:IsA("DepthOfFieldEffect") then
					v.Enabled = false
				end
			end
			workspace.DescendantAdded:Connect(function(child)
				task.spawn(function()
					if child:IsA('ForceField') then
						RunService.Heartbeat:Wait()
						child:Destroy()
					elseif child:IsA('Sparkles') then
						RunService.Heartbeat:Wait()
						child:Destroy()
					elseif child:IsA('Smoke') or child:IsA('Fire') then
						RunService.Heartbeat:Wait()
						child:Destroy()
					end
				end)
			end)
		end,
	})
	local anticloging = false
	IY_AddCommand({
		Command = "antichatlog",
		Aliases = {"antilog", "antiban"},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "Prevents chat logging",
		Execute = function()
			if not hookmetamethod or not hookfunction then 
				return IY_Notify('Incompatible Exploit','Your exploit does not support this command (missing hookmetamethod)')
			end
			if anticloging then return IY_Notify('Antichat-log','Im already g bro') end
			anticloging = true
			IY_Notify('Antichat-log','Wait while I load...')
			-- this was made by STEVE
			local randomquotes = {
				"hi lol",
				"yeah maybe",
				"ofc",
				"sure thing",
				"yea hold up",
				"imma brb",
				"i check smth rq",
				"yo chat",
				"guys, look! a birdie",
				"maybe you are not used to this place",
				"good call",
				"hi im a drone",
				"y u pmo sm?",
				"i.... am STEVE",
				"hiya bro",
				"greetings to elites, ######## to lamerz",
				"could you repeat that?",
				"ITS DA BLOOD MOON!",
				"hey guys",
				"tonight, we gonna be drinking sum water",
				"HELP! I HAVE FALLEN, AND I CANT GET UP",
				"your dead 2 me",
				"please, please",
				"uwu",
				"wow bro thats cool",
				"colon three",
				"i remember theres this guy who said: nghffhhfhhhfhh",
				":D",
				":3",
				"maybe you are not used to this place yet",
				"which way are we going? sumeru or liyue",
				"do not interrupt me",
				"guys check this out",
				"ez",
				"noobz",
				"can i have chezburger too?",
				"Ho, you're approaching me?",
				"Then come as close as you like!",
				"may the universe... uhh... i forgot.",
				"got em",
				"i think theres something here",
				"You pray for Kos. You finish your prayer. You feel that Kos is displeased.",
				"terraria is a nice game",
				"hi im \"\"\"pala\"\"\" look at me",
				"pickle",
				"im writing something",
				"im just typing what is on top of my head, no reason.",
				"print(\"hi mom\")",
				"ts works bro trust me",
				"snakator is a good pico 8 demo, promise",
				"my nem,... MR CHEEZ!! *copyrighted music*",
				"red win at 205, blu win at 200",
				"bro fits for a perfect r/masterhacker screenshot",
				"got me, ugh",
				"oh boy i sure do hope my C program doesnSegmentation fault.",
				"irony of the best game not being the best game",
				"the value of knowledge cannot simply be quantified in monetary terms",
				"gotta love shared pointers",
				"raiiiii",
				"you could tell someone something",
				"april fools guys",
				"also try iwbtc!",
				"we have accidentally borrowed your votedisk",
				"play my dead rails clone lol",
				"what new things i added here",
				"myuuuuuujen!",
				"chaaance!",
				"uhh who is this lost child?",
				"the most secure roblox game is the game that has nothing in it.",
				"one with lower educational attainment has somewhat higher knowledge than the other",
				"no one knows that DEC 25 is also OCT 31",
				"true story",
				"/e clampuphill",
				"THIS LINE IS AT 2753! NOT JOKING!",
				"the more you know.",
				"i agree",
				"i disagree",
				"idk man im just an rng",
				"FEED ME",
				"lua isnt luau, cant do +=",
				"you should replicatesignal(game.Players.LocalPlayer.Kill), NOW!",
				"js: == == === == true",
				"Greeting! You don't know me, and I totally don't sound like any existing program, hehe!",
				"I say these pictures are scandalous!",
				"what? how could... what???",
			}
			local function _chat()
				local x = randomquotes[math.random(1, #randomquotes)]
				--print("chat hook called", x)
				return x
			end
			local LocalPlayer = Players.LocalPlayer
			local metas = {}
			local function namecallkick(self, ...)
				if typeof(self) == "Instance" and self == Players then
					return metas.Players_index(self, "Chat")(self, _chat())
				end
				error("Expected ':' not '.' calling member function Chat", 2)
			end
			metas.Players_index = hookmetamethod(Players, "__index", newcclosure(function(self, method)
				if typeof(self) == "Instance" and self == Players
					and type(method) == "string" and method == "Chat" then
					return namecallkick
				end
				return metas.Players_index(self, method)
			end))
			metas.Players_namecall = hookmetamethod(Players, "__namecall", newcclosure(function(self, ...)
				if typeof(self) == "Instance" and self == Players
					and getnamecallmethod() == "Chat" then
					return namecallkick(self, ...)
				end
				return metas.Players_namecall(self, ...)
			end))
			local chatev = Instance.new("BindableEvent")
			metas.Player_index = hookmetamethod(LocalPlayer, "__index", newcclosure(function(self, method)
				if typeof(self) == "Instance" and self == LocalPlayer
					and type(method) == "string" and (method == "Chatted" or method == "chatted") then
					return chatev.Event
				end
				return metas.Player_index(self, method)
			end))
			local posted = LocalPlayer:WaitForChild("PlayerScripts", 10)
			if posted == nil then
				IY_Notify('Antichat-log','Client anti chat log not supported')
				anticloging = false
				return
			end
			posted = posted:WaitForChild("ChatScript", 10)
			if posted == nil then
				IY_Notify('Antichat-log','Client anti chat log not supported')
				anticloging = false
				return
			end
			posted = posted:WaitForChild("ChatMain", 10)
			if posted == nil then
				IY_Notify('Antichat-log','Client anti chat log not supported')
				anticloging = false
				return
			end
			posted = require(posted)
			local s = false
			s, posted = pcall(function()
				return posted.MessagePosted
			end)
			if not s then
				IY_Notify('Antichat-log','Client anti chat log not supported')
				anticloging = false
				return
			end
			local function _newsetcore(self, name, ...)
				if self == StarterGui then
					if name == "CoreGuiChatConnections" then
						StarterGui:SetCore("ChatMakeSystemMessage", {
							Text = "[Antichat-log]: SETCORE changed ChatConnections"
						})
						local what = ...
						what = what.ChatWindow
						if what ~= nil then
							what = what.MessagePosted
							if what ~= nil then
								posted = what
								StarterGui:SetCore("ChatMakeSystemMessage", {
									Text = "[Antichat-log]: SETCORE found MessagePosted"
								})
							end
						end
					end
					return metas.StarterGui_index(self, "SetCore")(self, name, ...)
				end
				error("Expected ':' not '.' calling member function SetCore", 2)
			end
			metas.StarterGui_index = hookmetamethod(StarterGui, "__index", newcclosure(function(self, method)
				if typeof(self) == "Instance" and self == StarterGui
					and type(method) == "string" and method == "SetCore" then
					return _newsetcore
				end
				return metas.StarterGui_index(self, method)
			end))
			metas.StarterGui_namecall = hookmetamethod(StarterGui, "__namecall", newcclosure(function(self, ...)
				if typeof(self) == "Instance" and self == StarterGui
					and getnamecallmethod() == "SetCore" then
					return _newsetcore(self, ...)
				end
				return metas.StarterGui_namecall(self, ...)
			end))
			local lol = newcclosure(function(...)
				local self, message = ...
				if self == posted then
					local m2 = _chat()
					metas.Posted_hook(self, m2)
					chatev:Fire(message)
					StarterGui:SetCore("ChatMakeSystemMessage", {
						Text = "[Antichat-log]: MESSAGE " .. m2
					})
				end
				return metas.Posted_hook(...)
			end)
			metas.Posted_hook = hookfunction(posted.fire, function(...)
				-- hook function upvalue trick
				return lol(...)
			end)
			if setfflag then
				pcall(function()
					setfflag("AbuseReportScreenshot", "False")
					setfflag("AbuseReportScreenshotPercentage", "0")
				end)
			end
			IY_Notify('Antichat-log','Client anti chat log is now active')
		end,
	})
	local antiadonisaa = false
	IY_AddCommand({
		Command = "antiadonisanticheat",
		Aliases = {"antiaac"},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "Adonis really wants to kill the client. Lets murder them! >:3",
		Execute = function()
			IY_Notify('AntiAnticheat (Adonis)', 'Anti anticheat is now active')
			if antiadonisaa then return end
			antiadonisaa = true
			-- anti client detection and anticrashes
			local getinfo = getinfo or debug.getinfo
			local DEBUG = false
			local Hooked = {}
			local Detected, Kill = nil, nil
			setthreadidentity(2)
			local nyaa = {"Crash", "HardCrash", "GPUCrash", "RAMCrash", "KillClient", "SetFPS"} 
			for i, v in getgc(true) do
				if typeof(v) == "table" then
					local DetectFunc = rawget(v, "Detected")
					local KillFunc = rawget(v, "Kill")
					if typeof(DetectFunc) == "function" and not Detected then
						Detected = DetectFunc
						hookfunction(Detected, function(Action, Info, NoCrash) return true end)
						table.insert(Hooked, Detected)
					end
					if rawget(v, "Variables") and rawget(v, "Process") and typeof(KillFunc) == "function" and not Kill then
						Kill = KillFunc
						hookfunction(Kill, function(Info) end)
						table.insert(Hooked, Kill)
					end
				end
				if type(v) == "function" then
					local info = debug.getinfo(v)
					if info.source:find(".Core.Functions") and table.find(nyaa, info.name) then
						hookfunction(v, function() end)
					end
				end
			end
			local OldRobloxDebugInfo = nil
			OldRobloxDebugInfo = hookfunction(getrenv().debug.info, newcclosure(function(...)
				local LevelOrFunc, Info = ...
				if Detected and LevelOrFunc == Detected then
					return coroutine.yield(coroutine.running())
				end
				return OldRobloxDebugInfo(...)
			end))
			setthreadidentity(7)
		end,
	})
	local anticlienthandlekill = false
	IY_AddCommand({
		Command = "anticlienthandlekill",
		Aliases = {"anticlienthkill", "antidoubletouch"},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "In SF games, you get hit if you touch their sword on either your or their client. This makes it apply only on theirs.",
		Execute = function()
			IY_Notify('Anti client handle kill','Anti client handle kill is now active')
			if anticlienthandlekill then return end
			anticlienthandlekill = true
			local function nocok(v)
				if v:IsA("BasePart") and v.Parent.ClassName == "Tool" and v.Name == "Handle" then
					if Players.LocalPlayer.Character ~= nil and v:IsDescendantOf(Players.LocalPlayer.Character) then
						return
					end
					v.CanTouch = false
				end
			end
			workspace.DescendantAdded:Connect(nocok)
			for _,v in pairs(workspace:GetDescendants()) do
				nocok(v)
			end
		end,
	})
end
local function GetSandboxPosition()
	local id = Players.LocalPlayer.UserId
	local sign = id % 4
	local sign1 = sign % 2
	local sign2 = sign // 2
	local int = id // 4
	local x = int % 2048
	local z = (int // 2048) % 2048
	return Vector3.new(x * sign1, 0, z * sign2) * 16
end
do -- Silly stuff: Fly, Noclip, Swim, Float, Spin, Fling
	local ControlM = {
		GetMoveVector = function()
			return Vector3.zero
		end,
	}
	task.spawn(function()
		while true do
			ControlM = require(Players.LocalPlayer.PlayerScripts:WaitForChild("PlayerModule"):WaitForChild("ControlModule"))
			if ControlM ~= nil then
				return
			end
			task.wait()
		end
		IY_Notify("RequireControlModule", "ControlModule returns nil!")
	end)
	local FLYING = nil
	function NOFLY()
		if FLYING ~= nil then
			local h = FLYING:FindFirstChildOfClass("Humanoid")
			if h ~= nil then
				h.PlatformStand = false
			end
		end
		FLYING = nil
	end
	local SPEED = 50
	function FLY(vfly)
		repeat wait() until Players.LocalPlayer and Players.LocalPlayer.Character and Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
		repeat wait() until IYMouse
		FLYING = Players.LocalPlayer.Character
		local H = FLYING:FindFirstChildOfClass("Humanoid")
		local T = nil
		repeat T = H.RootPart wait() until T ~= nil
		local CONTROL = {X = 0, Y = 0, Z = 0}
		local function _FLY()
			local BV = Instance.new("BodyVelocity", T)
			BV.Name = randomString()
			BV.Velocity = Vector3.new(0, 0, 0)
			BV.MaxForce = Vector3.new(0, 0, 0)
			local BG = Instance.new("BodyGyro", T)
			BG.Name = randomString()
			BG.P = 9e4
			--BG.D = 50
			BG.MaxTorque = Vector3.new(9e9, 9e9, 9e9)
			BG.CFrame = T.CFrame
			spawn(function()
				if not vfly then
					H.PlatformStand = true
				end
				repeat RunService.Stepped:Wait()
					BV.MaxForce = Vector3.new(9e9, 9e9, 9e9)
					BG.MaxTorque = Vector3.new(9e9, 9e9, 9e9)
					local cf = Camera.CFrame
					BG.CFrame = cf
					local vel = Vector3.zero
					vel += cf.LookVector * CONTROL.Z * SPEED
					vel += cf.RightVector * CONTROL.X * SPEED
					vel += cf.UpVector * CONTROL.Y * SPEED
					BV.Velocity = vel
					local ct = ControlM:GetMoveVector()
					CONTROL.X = ct.X
					if H.Jump then
						CONTROL.Y = -ct.Z
						CONTROL.Z = 0
					else
						CONTROL.Z = -ct.Z
						CONTROL.Y = 0
					end
				until FLYING == nil
				BG:Destroy()
				BV:Destroy()
				H.PlatformStand = false
			end)
		end
		_FLY()
	end
	local CFLYING = nil
	function NOCFLY()
		if CFLYING ~= nil then
			local h = CFLYING:FindFirstChildOfClass("Humanoid")
			if h ~= nil then
				h.PlatformStand = false
			end
		end
		CFLYING = nil
	end
	local CSPEED = 50
	function CFLY()
		repeat wait() until Players.LocalPlayer and Players.LocalPlayer.Character and Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
		repeat wait() until IYMouse
		CFLYING = Players.LocalPlayer.Character
		local H = CFLYING:FindFirstChildOfClass("Humanoid")
		local T = nil
		repeat T = H.RootPart wait() until T ~= nil
		local CONTROL = {X = 0, Y = 0, Z = 0}
		local function _FLY()
			spawn(function()
				local char = CFLYING
				local CF = T.CFrame
				repeat 
					local dt = RunService.Heartbeat:Wait()
					H.PlatformStand = true
					local cf = Camera.CFrame
					local vel = Vector3.zero
					vel += cf.LookVector * CONTROL.Z * SPEED
					vel += cf.RightVector * CONTROL.X * SPEED
					vel += cf.UpVector * CONTROL.Y * SPEED
					CF = CFrame.new(CF.Position + (vel * dt)) * cf.Rotation
					T.CFrame = CF
					for _,v in pairs(char:GetDescendants()) do
						if v:IsA("BasePart") then
							v.Velocity = Vector3.new(0, 0, 0)
							v.RotVelocity = Vector3.new(0, 0, 0)
						end
					end
					local ct = ControlM:GetMoveVector()
					CONTROL.X = ct.X
					if H.Jump then
						CONTROL.Y = -ct.Z
						CONTROL.Z = 0
					else
						CONTROL.Z = -ct.Z
						CONTROL.Y = 0
					end
				until CFLYING == nil
				--T.Anchored = false
				H.PlatformStand = false
			end)
		end
		_FLY()
	end
	local FLOATING = nil
	local function FLOAT()
		local char = Players.LocalPlayer.Character
		if char ~= nil then
			local f = Instance.new("Part")
			f.Name = randomString()
			f.Parent = char
			f.Transparency = 1
			f.Size = Vector3.new(16, 2048, 16)
			f.Anchored = true
			f.CanCollide = true
			FLOATING = f
			local h = char:FindFirstChildOfClass("Humanoid")
			local r = char:FindFirstChild("HumanoidRootPart")
			repeat
				RunService.Stepped:Wait()
				local feet = 3 + h.HipHeight
				if h.RigType == Enum.HumanoidRigType.R15 then
					feet = 1 + h.HipHeight
				end
				f.Anchored = true
				f.CanCollide = true
				f.Position = r.Position - Vector3.new(0, feet + (f.Size.Y / 2), 0)
			until FLOATING == nil
		end
	end
	local function NOFLOAT()
		if FLOATING ~= nil then
			FLOATING:Destroy()
		end
		FLOATING = nil
	end
	IY_AddCommand({
		Command = "fly",
		Aliases = {},
		Arguments = {
			{Name = "speed", Optional = true, Description = "Fly speed"},
		},
		Plugin = "BUILTIN",
		Description = "Lets you fly around",
		Execute = function(speed)
			IY_Notify("Flight", "You are now flying!\nHold Jump button to go up and down!")
			local s = tonumber(speed)
			if s ~= nil then
				s *= 50
			else
				s = SPEED
			end
			SPEED = s
			NOFLY()
			NOCFLY()
			RunService.Stepped:Wait()
			RunService.Stepped:Wait()
			FLY(false)
		end,
	})
	IY_AddCommand({
		Command = "vfly",
		Aliases = {},
		Arguments = {
			{Name = "speed", Optional = true, Description = "Fly speed"},
		},
		Plugin = "BUILTIN",
		Description = "Lets you fly around with a vehicle",
		Execute = function(speed)
			IY_Notify("Flight", "You are now vflying!\nHold Jump button to go up and down!")
			local s = tonumber(speed)
			if s ~= nil then
				s *= 50
			else
				s = SPEED
			end
			SPEED = s
			NOFLY()
			NOCFLY()
			RunService.Stepped:Wait()
			RunService.Stepped:Wait()
			FLY(true)
		end,
	})
	IY_AddCommand({
		Command = "cframefly",
		Aliases = {"cfly"},
		Arguments = {
			{Name = "speed", Optional = true, Description = "Fly speed"},
		},
		Plugin = "BUILTIN",
		Description = "Fly using CFrame, the replicating version.",
		Execute = function(speed)
			IY_Notify("Flight", "You are now cflying!\nHold Jump button to go up and down!")
			local s = tonumber(speed)
			if s ~= nil then
				s *= 50
			else
				s = CSPEED
			end
			CSPEED = s
			NOFLY()
			NOCFLY()
			RunService.Stepped:Wait()
			RunService.Stepped:Wait()
			CFLY()
		end,
	})
	IY_AddCommand({
		Command = "unfly",
		Aliases = {"nofly"},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "Disables flying (works for 3 types of fly)",
		Execute = function()
			IY_Notify("Flight", "Flight has been disabled")
			NOFLY()
			NOCFLY()
		end,
	})
	IY_AddCommand({
		Command = "unvfly",
		Aliases = {"novfly"},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "Disables vehicle flying (same as unfly)",
		Execute = function()
			IY_ExecuteCommand("unfly")
		end,
	})
	IY_AddCommand({
		Command = "uncfly",
		Aliases = {"nocfly"},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "Disables CFrame flying (same as unfly)",
		Execute = function()
			IY_ExecuteCommand("unfly")
		end,
	})
	local ncconn = nil
	IY_AddCommand({
		Command = "noclip",
		Aliases = {},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "Go through walls by letting your atoms align",
		Execute = function()
			IY_Notify("Noclip", "Noclip Enabled")
			if ncconn ~= nil then
				ncconn:Disconnect()
			end
			ncconn = RunService.Stepped:Connect(function()
				local char = Players.LocalPlayer.Character
				if char ~= nil then
					for _,v in pairs(char:GetDescendants()) do
						if v:IsA("BasePart") and v ~= FLOATING then
							v.CanCollide = false
						end
					end
				end
			end)
		end,
	})
	IY_AddCommand({
		Command = "unnoclip",
		Aliases = {"clip"},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "Become solid again, i guess",
		Execute = function()
			IY_Notify("Noclip", "Noclip Disabled")
			if ncconn ~= nil then
				ncconn:Disconnect()
			end
			local char = Players.LocalPlayer.Character
			local root = char:FindFirstChild("HumanoidRootPart")
			if root ~= nil then root.CanCollide = true end
		end,
	})
	local vnoclipParts = {}
	IY_AddCommand({
		Command = "vehiclenoclip",
		Aliases = {"vnoclip"},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "Make your vehicle's atoms align",
		Execute = function()
			IY_Notify("Noclip", "Vehicle Noclip Enabled")
			vnoclipParts = {}
			local seat = Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid').SeatPart
			local vehicleModel = seat.Parent
			repeat
				if vehicleModel.ClassName ~= "Model" then
					vehicleModel = vehicleModel.Parent
				end
			until vehicleModel.ClassName == "Model"
			wait(0.1)
			IY_ExecuteCommand("noclip", true)
			for i,v in pairs(vehicleModel:GetDescendants()) do
				if v:IsA("BasePart") and v.CanCollide then
					table.insert(vnoclipParts,v)
					v.CanCollide = false
				end
			end
		end,
	})
	IY_AddCommand({
		Command = "vehicleclip",
		Aliases = {"vclip", "unvehiclenoclip", "unvnoclip"},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "Solidify your vehicle back",
		Execute = function()
			IY_Notify("Noclip", "Vehicle Noclip Disabled")
			IY_ExecuteCommand("clip", true)
			for i, v in pairs(vnoclipParts) do
				v.CanCollide = true
			end
			vnoclipParts = {}
		end,
	})
	IY_AddCommand({
		Command = "float",
		Aliases = {"platform"},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "Places a floor directly on your feet",
		Execute = function()
			IY_Notify("Float", "Floating Enabled")
			NOFLOAT()
			RunService.Stepped:Wait()
			RunService.Stepped:Wait()
			FLOAT()
		end,
	})
	IY_AddCommand({
		Command = "unfloat",
		Aliases = {"unplatform", "nofloat", "noplatform"},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "Stops float/platform",
		Execute = function()
			IY_Notify("Float", "Floating Disabled")
			NOFLOAT()
		end,
	})
	local spinname = randomString()
	IY_AddCommand({
		Command = "spin",
		Aliases = {},
		Arguments = {
			{Name = "speed", Optional = true, Description = "Spin speed"},
		},
		Plugin = "BUILTIN",
		Description = "Watch out here I, watch out here I come. Spin me right round baby right round like a record baby right round round round.",
		Execute = function(speed)
			speed = tonumber(speed) or 20
			local char = Players.LocalPlayer.Character
			local root = char:FindFirstChild("HumanoidRootPart")
			if root == nil then return end
			local spinme = root:FindFirstChild(spinname) or Instance.new("BodyAngularVelocity", root)
			spinme.Name = spinname
			spinme.AngularVelocity = Vector3.new(0, speed, 0)
			spinme.MaxTorque = Vector3.new(0, math.huge, 0)
			spinme.P = math.huge
		end,
	})
	IY_AddCommand({
		Command = "unspin",
		Aliases = {},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "stop the spin",
		Execute = function(speed)
			local char = Players.LocalPlayer.Character
			local root = char:FindFirstChild("HumanoidRootPart")
			if root == nil then return end
			local spin = root:FindFirstChild(spinname)
			if spin ~= nil then spin:Destroy() end
		end,
	})
	local fligning = false
	IY_AddCommand({
		Command = "fling",
		Aliases = {},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "Turns you into a fling machine",
		Execute = function()
			if fligning then
				fligning = false
				task.wait(0.2)
				task.wait(0.1)
				task.wait(0.1)
				task.wait()
			end
			fligning = true
			local char = Players.LocalPlayer.Character
			local root = char:FindFirstChild("HumanoidRootPart")
			if root == nil then return end
			local nocliper = RunService.PreSimulation:Connect(function()
				for _,v in pairs(char:GetDescendants()) do
					if v:IsA("BasePart") then
						if v.Parent == char then
							v.CustomPhysicalProperties = PhysicalProperties.new(100, 0.3, 0.5)
						end
						v.CanCollide = false
					end
				end
			end)
			RunService.Stepped:Wait()
			local bambam = Instance.new("BodyAngularVelocity", root)
			bambam.Name = randomString()
			bambam.AngularVelocity = Vector3.new(0, 99999, 0)
			bambam.MaxTorque = Vector3.new(0, math.huge, 0)
			bambam.P = math.huge
			char.Destroying:Connect(function()
				fligning = false
			end)
			IY_Notify("Fling", "ok now go touch some kids")
			repeat
				bambam.AngularVelocity = Vector3.new(0, 99999, 0)
				task.wait(0.2)
				bambam.AngularVelocity = Vector3.new(0, 0, 0)
				task.wait(0.1)
			until not fligning
			nocliper:Disconnect()
			for _,v in pairs(char:GetDescendants()) do
				if v:IsA("BasePart") then
					v.CustomPhysicalProperties = nil
					v.Velocity = Vector3.zero
					v.RotVelocity = Vector3.zero
				end
			end
			bambam:Destroy()
		end,
	})
	IY_AddCommand({
		Command = "unfling",
		Aliases = {"nofling"},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "makes you boring",
		Execute = function()
			fligning = false
		end,
	})
	local walkfligning = false
	IY_AddCommand({
		Command = "walkfling",
		Aliases = {"wfling"},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "fling but you can walk, better than real iy",
		Execute = function()
			if walkfligning then
				walkfligning = false
				task.wait()
				task.wait()
				task.wait()
				task.wait()
			end
			walkfligning = true
			IY_Notify("Walk Fling", "ok now be that one youtube roblox animator")
			IY_ExecuteCommand("antifling", true)
			pcall(sethiddenproperty, "SignalBehavior", "Immediate")
			repeat
				RunService.Heartbeat:Wait()
				local char = Players.LocalPlayer.Character
				if char ~= nil then
					local root = char:FindFirstChild("HumanoidRootPart")
					if root ~= nil then
						local a, b = root.Velocity, root.RotVelocity
						root.Velocity, root.RotVelocity = Vector3.new(0, -2^64, 0), Vector3.new(9e12, 9e12, 9e12)
						RunService.PreAnimation:Wait()
						root.Velocity, root.RotVelocity = a, b
					end
				end
			until not walkfligning
		end,
	})
	IY_AddCommand({
		Command = "unwalkfling",
		Aliases = {"unwfling"},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "restore yourself",
		Execute = function()
			walkfligning = false
		end,
	})
	IY_AddCommand({
		Command = "copypos",
		Aliases = {"copyplrpos"},
		Arguments = {
			{Name = "target", Type = "TARGET", Optional = true, Description = "The target player"},
		},
		Plugin = "BUILTIN",
		Description = "setclipboard(target character pivot)",
		Execute = function(list)
			local targets = getPlayer(list)
			if #targets > 0 then
				local target = Players[targets[1]]
				if target.Character ~= nil then
					local c = target.Character:GetPivot()
					toClipboard(string.format("%.2f, %.2f, %.2f", c.X, c.Y, c.Z))
				end
			end
		end,
	})
	IY_AddCommand({
		Command = "tppos",
		Aliases = {"gotopos"},
		Arguments = {
			{Name = "X", Optional = true, Description = "X axis"},
			{Name = "Y", Optional = true, Description = "Y axis"},
			{Name = "Z", Optional = true, Description = "Z axis"},
		},
		Plugin = "BUILTIN",
		Description = "teleports you to the coords",
		Execute = function(x, y, z)
			local function w(v)
				if tonumber(v) ~= nil then
					return tonumber(v)
				end
				if v:sub(v:len(),v:len()) == "," then
					return tonumber(v:sub(1,v:len()-1))
				end
			end
			x = w(x)
			y = w(y)
			z = w(z)
			Players.LocalPlayer.Character:PivotTo(CFrame.new(x, y, z))
		end,
	})
	local antiflingcon = nil
	IY_AddCommand({
		Command = "antifling",
		Aliases = {},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "those skids cant get ye now hehehe",
		Execute = function()
			IY_Notify("Antifling", "Antifling enabled!")
			if antiflingcon ~= nil then
				antiflingcon:Disconnect()
				antiflingcon = nil
			end
			antiflingcon = RunService.PreSimulation:Connect(function()
				for _,v in pairs(Players:GetPlayers()) do
					if v ~= Players.LocalPlayer and v.Character ~= nil then
						for _,w in pairs(v.Character:GetDescendants()) do
							if w:IsA("BasePart") then
								w.CanCollide = false
							end
						end
					end
				end
			end)
		end,
	})
	IY_AddCommand({
		Command = "antifling2",
		Aliases = {},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "\"trust me antifling is disabled see i can step on ppl\"",
		Execute = function()
			IY_Notify("Antifling", "Antifling enabled!")
			if antiflingcon ~= nil then
				antiflingcon:Disconnect()
				antiflingcon = nil
			end
			antiflingcon = RunService.PreSimulation:Connect(function()
				for _,v in pairs(Players:GetPlayers()) do
					if v ~= Players.LocalPlayer and v.Character ~= nil then
						for _,w in pairs(v.Character:GetDescendants()) do
							if w:IsA("BasePart") then
								w.Velocity = Vector3.zero
								w.RotVelocity = Vector3.zero
							end
						end
					end
				end
			end)
		end,
	})
	IY_AddCommand({
		Command = "unantifling",
		Aliases = {},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "\"doesnt that make you feel a little weak? :3c\"",
		Execute = function()
			IY_Notify("Antifling", "Antifling disabled!")
			if antiflingcon ~= nil then
				antiflingcon:Disconnect()
				antiflingcon = nil
			end
		end,
	})
	--[[IY_AddCommand({
		Command = "invisfling",
		Aliases = {},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "do you remember this? unless ur a newgen LOL",
		Execute = function()
			IY_Notify("Invisfling", "Please wait while I... ngfhh.!! meow")
			Players.LocalPlayer.Character:BreakJoints()
			workspace.FallenPartsDestroyHeight = 0/0
			local char = Players.LocalPlayer.CharacterAdded:Wait()
			char.ChildAdded:Connect(function(v)
				if v:IsA("LocalScript") and v.Name == "Animate" then
					v.Disabled = true
					task.wait()
					v:Destroy()
				end
			end)
			local root = char:WaitForChild("HumanoidRootPart")
			local hum = char:WaitForChild("Humanoid")
			if hum.RigType ~= Enum.HumanoidRigType.R15 then
				IY_Notify("Invisfling", "ngh!! i dont smell R15 here.!! 3:")
				return
			end
			local invis = RunService.PreSimulation:Connect(function()
				for _,v in pairs(char:GetDescendants()) do
					if v:IsA("BasePart") then
						v.Massless = root ~= v
						v.CanTouch = v.Parent ~= char
					end
					if v:IsA("Motor6D") then
						v.MaxVelocity = 9e9
					end
				end
				for _,v in pairs(hum:GetPlayingAnimationTracks()) do
					v:Stop(0)
				end
			end)
			local invis2 = RunService.Heartbeat:Connect(function()
				root.Transparency = 0
				Camera.CameraSubject = root
				hum:ChangeState(Enum.HumanoidStateType.Physics)
				for _,v in pairs(char:GetDescendants()) do
					if v:IsA("Motor6D") then
						v.MaxVelocity = 9e9
						v:SetDesiredAngle(math.random() * math.pi * 2)
						v.MaxVelocity = 9e9
						sethiddenproperty(v, "ReplicateCurrentOffset6D", Vector3.new(-1 + math.random(0, 1) * 2, -1 + math.random(0, 1) * 2, -1 + math.random(0, 1) * 2) * 65536)
						sethiddenproperty(v, "ReplicateCurrentAngle6D", Vector3.new(math.random() * math.pi * 2, math.random() * math.pi * 2, math.random() * math.pi * 2))
					end
				end
			end)
			task.spawn(IY_ExecuteCommand, "fly", true)
			task.spawn(IY_ExecuteCommand, "fling", true)
			task.spawn(IY_ExecuteCommand, "noclip", true)
			Players.LocalPlayer.CharacterRemoving:Wait()
			invis:Disconnect()
			invis2:Disconnect()
			invis = nil
		end,
	})]]
	IY_AddCommand({
		Command = "masscenter",
		Aliases = {},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "put your center of mass to the hrp center",
		Execute = function()
			local char = Players.LocalPlayer.Character
			local root = char:WaitForChild("HumanoidRootPart")
			for _,v in pairs(char:GetDescendants()) do
				if v:IsA("BasePart") then
					v.Massless = v ~= root
				end
			end
		end,
	})
	IY_AddCommand({
		Command = "flyfling",
		Aliases = {},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "fling but fly",
		Execute = function()
			IY_Notify("Flyfling", "i even centered the camera for you! :3")
			local char = Players.LocalPlayer.Character
			local root = char:WaitForChild("HumanoidRootPart")
			Camera.CameraSubject = root
			task.spawn(IY_ExecuteCommand, "masscenter", true)
			task.spawn(IY_ExecuteCommand, "fly", true)
			task.spawn(IY_ExecuteCommand, "fling", true)
			task.spawn(IY_ExecuteCommand, "noclip", true)
		end,
	})
	local hatflinging = false
	IY_AddCommand({
		Command = "hatfling",
		Aliases = {"hfling"},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "(r6 only for now) you become hat, but i NGHFHFHFHHFHHH!!! uwu",
		Execute = function()
			if hatflinging then return end
			hatflinging = true
			if replicatesignal == nil then
				IY_Notify("Hatfling", "use deleta executor (missing replicatesignal)")
				return
			end
			if sethiddenproperty == nil then
				IY_Notify("Hatfling", "use deleta executor (missing sethiddenproperty)")
				return
			end
			IY_Notify("Hatfling", "Please wait while I... ngfhh.!! meow")
			local CurrentCF = nil
			local flinghat = nil
			pcall(sethiddenproperty, "SignalBehavior", "Immediate")
			task.spawn(IY_ExecuteCommand, "unnoclip", true)
			task.spawn(IY_ExecuteCommand, "unwalkfling", true)
			local HackAnimation = Instance.new("Animation")
			HackAnimation.AnimationId = "rbxassetid://35154961"
			local function doanywithmeuwu(char)
				local hum = char:WaitForChild("Humanoid")
				local torso = char:WaitForChild("Torso")
				local root = char:WaitForChild("HumanoidRootPart")
				if CurrentCF == nil then
					CurrentCF = root.CFrame
				end
				workspace.FallenPartsDestroyHeight = 0/0
				task.wait(0.1)
				local neko = CFrame.new(0, FallenPartsDestroyHeight + 0.25, 0) * CFrame.Angles(math.pi * 0.5, 0, 0)
				local hatcolling = true
				workspace.FallenPartsDestroyHeight = 0/0
				for _,v in pairs(hum:GetPlayingAnimationTracks()) do
					v:Stop(0)
				end
				local hack = hum:LoadAnimation(HackAnimation)
				hack:Play()
				hack.TimePosition = 3.24
				hack:AdjustSpeed(0)
				task.spawn(function()
					while hatcolling do
						RunService.PostSimulation:Wait()
						root.CFrame = neko + GetSandboxPosition()
						root.RotVelocity = Vector3.zero
						root.Velocity = Vector3.new(0, 0, 25)
					end
				end)
				if Players.CharacterAutoLoads then
					replicatesignal(Players.LocalPlayer.ConnectDiedSignalBackend)
					task.wait(Players.RespawnTime)
				end
				task.wait(1)
				if char == Players.LocalPlayer.Character then
					local hats = {}
					local statelock = {}
					for _,v in pairs(char:GetChildren()) do
						if v:IsA("Accessory") then
							table.insert(statelock, v.Changed:Connect(function(p)
								if p == "BackendAccoutrementState" then
									sethiddenproperty(v, "BackendAccoutrementState", 0)
								end
							end))
							sethiddenproperty(v, "BackendAccoutrementState", 2)
							table.insert(hats, {v, v:WaitForChild("Handle")})
						end
					end
					for _,v in pairs(hats) do
						local h = v[2]
						h:BreakJoints()
						h.Velocity = Vector3.new(0, 50, 0)
						h.RotVelocity = Vector3.zero
						h.CFrame = CFrame.new(0, FallenPartsDestroyHeight + 20, 0) + GetSandboxPosition()
					end
					task.spawn(function()
						while hatcolling do
							RunService.PostSimulation:Wait()
							for _,v in pairs(hats) do
								local h = v[2]
								h.Velocity = Vector3.new(0, 50, 0)
								h.RotVelocity = Vector3.zero
								h.CFrame = CFrame.new(0, FallenPartsDestroyHeight + 20, 0) + GetSandboxPosition()
							end
						end
					end)
					hum:ChangeState(Enum.HumanoidStateType.Dead)
					torso.AncestryChanged:Wait()
					for _,v in pairs(statelock) do v:Disconnect() end
					for _,v in pairs(hats) do
						sethiddenproperty(v[1], "BackendAccoutrementState", 4)
					end
					task.wait(2)
					local ohats = hats
					hats = {}
					for _,v in pairs(ohats) do
						local h = v[2]
						if h:IsDescendantOf(workspace) and h.CanCollide then
							table.insert(hats, v)
						end
					end
					hatcolling = false
					workspace.FallenPartsDestroyHeight = FallenPartsDestroyHeight
					if #hats == 0 then
						replicatesignal(Players.LocalPlayer.ConnectDiedSignalBackend)
						return
					end
					table.sort(hats, function(a, b)
						local c, d = a[2].Size, b[2].Size
						return c.X * c.Y * c.Z > d.X * d.Y * d.Z
					end)
					flinghat = hats[1][2]
					flinghat.AncestryChanged:Wait()
					replicatesignal(Players.LocalPlayer.ConnectDiedSignalBackend)
				end
			end
			local c = Players.LocalPlayer.CharacterAdded:Connect(doanywithmeuwu)
			if Players.LocalPlayer.Character ~= nil then
				task.spawn(doanywithmeuwu, Players.LocalPlayer.Character)
			end
			local cam = Instance.new("Part")
			cam.Name = randomString()
			cam.Anchored = true
			cam.CanCollide = false
			cam.Transparency = 0.5
			cam.Size = Vector3.zero
			cam.Material = Enum.Material.SmoothPlastic
			cam.Parent = workspace
			local claimed = 0
			repeat
				local dt = RunService.PostSimulation:Wait()
				if CurrentCF ~= nil then
					local ct = ControlM:GetMoveVector()
					local CONTROL = Vector3.new(ct.X, 0, -ct.Z)
					local cf = Camera.CoordinateFrame
					local vel = Vector3.zero
					vel += cf.LookVector * CONTROL.Z * 50
					vel += cf.RightVector * CONTROL.X * 50
					vel += cf.UpVector * CONTROL.Y * 50
					CurrentCF = CFrame.new(CurrentCF.Position + (vel * dt)) * CFrame.Angles(math.random() * math.pi * 2, math.random() * math.pi * 2, math.random() * math.pi * 2)
					cam.CFrame = CurrentCF
					if flinghat ~= nil then
						cam.Color = Color3.new(1, 0, 0)
						if flinghat:IsDescendantOf(workspace) then
							cam.Color = Color3.new(1, 1, 0)
							if flinghat.ReceiveAge == 0 then
								flinghat.CFrame = CurrentCF
								flinghat.Velocity = vel + Vector3.new(0, 25, 0)
								flinghat.RotVelocity = Vector3.one * 9e9 * math.clamp((claimed - 5) / 25, 0, 1)
								flinghat.CanCollide = false
								flinghat.CanTouch = false
								cam.Color = Color3.new(0, 1, 0)
							else
								claimed = 0
							end
						else
							claimed = 0
						end
						cam.Size = flinghat.Size
						Camera.CameraSubject = cam
						Players.LocalPlayer.SimulationRadius = 999
					else
						claimed = 0
						cam.Size = Vector3.zero
					end
					claimed += dt
				end
			until not hatflinging
			cam:Destroy()
			c:Disconnect()
			if flinghat ~= nil then flinghat:Destroy() end
			if Players.LocalPlayer.Character ~= nil then
				Players.LocalPlayer.Character:BreakJoints()
			end
			replicatesignal(Players.LocalPlayer.ConnectDiedSignalBackend)
		end,
	})
	IY_AddCommand({
		Command = "unhatfling",
		Aliases = {"unhfling"},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "Stops hatfling",
		Execute = function()
			hatflinging = false
		end,
	})
end
do -- Animation
	local danceTrack = nil
	IY_AddCommand({
		Command = "dance",
		Aliases = {},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "Makes you D A N C E",
		Execute = function()
			if danceTrack ~= nil then
				danceTrack:Stop()
				danceTrack:Destroy()
				danceTrack = nil
			end
			local Character = Players.LocalPlayer.Character
			if Character ~= nil then
				local Humanoid = Character:FindFirstChildOfClass("Humanoid")
				if Humanoid ~= nil then
					local dances = {"27789359", "30196114", "248263260", "45834924", "33796059", "28488254", "52155728"}
					if Humanoid.RigType == Enum.HumanoidRigType.R15 then
						dances = {"3333432454", "4555808220", "4049037604", "4555782893", "10214311282", "10714010337", "10713981723", "10714372526", "10714076981", "10714392151", "11444443576"}
					end
					local animation = Instance.new("Animation")
					animation.AnimationId = "rbxassetid://" .. dances[math.random(1, #dances)]
					danceTrack = Humanoid:LoadAnimation(animation)
					danceTrack.Looped = true
					danceTrack:Play()
				end
			end
		end,
	})
	IY_AddCommand({
		Command = "undance",
		Aliases = {},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "noboogie",
		Execute = function()
			if danceTrack ~= nil then
				danceTrack:Stop()
				danceTrack:Destroy()
				danceTrack = nil
			end
		end,
	})
	IY_AddCommand({
		Command = "noanim",
		Aliases = {},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "Animate.Disabled = true",
		Execute = function()
			local Character = Players.LocalPlayer.Character
			if Character ~= nil then
				local Animate = Character:FindFirstChild("Animate")
				if Animate ~= nil then
					Animate.Disabled = true
				end
			end
		end,
	})
	IY_AddCommand({
		Command = "reanim",
		Aliases = {},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "Animate.Disabled = false",
		Execute = function()
			local Character = Players.LocalPlayer.Character
			if Character ~= nil then
				local Humanoid = Character:FindFirstChildOfClass("Humanoid")
				if Humanoid ~= nil then
					for i,v in pairs(Humanoid:GetPlayingAnimationTracks()) do
						v:Stop()
					end
				end
				local Animate = Character:FindFirstChild("Animate")
				if Animate ~= nil then
					Animate.Disabled = true
					task.wait()
					Animate.Disabled = false
				end
			end
		end,
	})
	IY_AddCommand({
		Command = "stopanimations",
		Aliases = {"stopanims"},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "stops all animations",
		Execute = function()
			local Character = Players.LocalPlayer.Character
			if Character ~= nil then
				local Humanoid = Character:FindFirstChildOfClass("Humanoid")
				if Humanoid ~= nil then
					for i,v in pairs(Humanoid:GetPlayingAnimationTracks()) do
						v:Stop()
					end
				end
			end
		end,
	})
	IY_AddCommand({
		Command = "animationspeed",
		Aliases = {"animspeed"},
		Arguments = {
			{Name = "speed", Optional = false, Description = "Animation speed"},
		},
		Plugin = "BUILTIN",
		Description = "sets all playing animations to this speed",
		Execute = function(speed)
			local Character = Players.LocalPlayer.Character
			if Character ~= nil then
				local Humanoid = Character:FindFirstChildOfClass("Humanoid")
				if Humanoid ~= nil then
					for i,v in pairs(Humanoid:GetPlayingAnimationTracks()) do
						v:AdjustSpeed(tonumber(speed) or 1)
					end
				end
			end
		end,
	})
end
do -- Stuff related to players
	IY_AddCommand({
		Command = "goto",
		Aliases = {},
		Arguments = {
			{Name = "target", Type = "TARGET", Optional = false, Description = "The target player"},
		},
		Plugin = "BUILTIN",
		Description = "Brings you to the target player",
		Execute = function(list)
			local char = Players.LocalPlayer.Character
			if char ~= nil then
				local targets = getPlayer(list)
				if #targets > 0 then
					local target = Players[targets[1]]
					if target.Character ~= nil then
						local tar = target.Character:GetPivot()
						char:PivotTo(tar + (tar.LookVector * -2.5))
						for _,v in pairs(char:GetDescendants()) do
							if v:IsA("BasePart") then
								v.Velocity = Vector3.zero
								v.RotVelocity = Vector3.zero
							end
						end
					end
				end
			end
		end,
	})
	local loopgotoing = false
	IY_AddCommand({
		Command = "loopgoto",
		Aliases = {},
		Arguments = {
			{Name = "target", Type = "TARGET", Optional = false, Description = "The target player"},
		},
		Plugin = "BUILTIN",
		Description = "Repeatedly brings you to the target player",
		Execute = function(list)
			local targets = getPlayer(list)
			loopgotoing = true
			while loopgotoing do
				local char = Players.LocalPlayer.Character
				if char ~= nil then
					local targets = getPlayer(list)
					if #targets > 0 then
						local target = Players[targets[1]]
						if target.Character ~= nil then
							local tar = target.Character:GetPivot()
							char:PivotTo(tar)
							for _,v in pairs(char:GetChildren()) do
								if v:IsA("BasePart") then
									v.AssemblyLinearVelocity = Vector3.zero
								end
							end
						end
					end
				end
				RunService.Stepped:Wait()
			end
		end,
	})
	IY_AddCommand({
		Command = "unloopgoto",
		Aliases = {"noloopgoto"},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "Stop loopgoto",
		Execute = function()
			loopgotoing = false
		end,
	})
	IY_AddCommand({
		Command = "clientbring",
		Aliases = {"cbring"},
		Arguments = {
			{Name = "target", Type = "TARGET", Optional = false, Description = "The target player/s"},
		},
		Plugin = "BUILTIN",
		Description = "[CLIENT] Brings the target player in your clientside",
		Execute = function(list)
			local me = Players.LocalPlayer.Character:GetPivot()
			local targets = getPlayer(list)
			for _,v in pairs(targets) do
				local plr = Players:FindFirstChild(v)
				if plr ~= nil then
					if plr.Character then
						local r = plr.Character:FindFirstChild("HumanoidRootPart")
						if r ~= nil then
							r.CFrame = me + (me.LookVector * 4)
						end
					end
				end
			end
		end,
	})
	local loopbringing = false
	IY_AddCommand({
		Command = "loopclientbring",
		Aliases = {"loopcbring", "loopbring"},
		Arguments = {
			{Name = "target", Type = "TARGET", Optional = false, Description = "The target player/s"},
		},
		Plugin = "BUILTIN",
		Description = "[CLIENT] Repeatedly brings the target player in your clientside",
		Execute = function(list)
			local targets = getPlayer(list)
			loopbringing = true
			while loopbringing do
				if Players.LocalPlayer.Character ~= nil then
					local me = Players.LocalPlayer.Character:GetPivot()
					for _,v in pairs(targets) do
						local plr = Players:FindFirstChild(v)
						if plr ~= nil then
							if plr.Character then
								local r = plr.Character:FindFirstChild("HumanoidRootPart")
								if r ~= nil then
									r.CFrame = me + (me.LookVector * 4)
								end
							end
						end
					end
				end
				RunService.Stepped:Wait()
			end
		end,
	})
	IY_AddCommand({
		Command = "unloopclientbring",
		Aliases = {"unloopcbring", "unloopbring"},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "[CLIENT] Stop loopclientbring",
		Execute = function()
			loopbringing = false
		end,
	})
	local function febring(yu, to, tries)
		tries = tries or 1
		local sps = 10
		local sp = 1
		local me = Players.LocalPlayer.Character
		local mer = me:FindFirstChild("HumanoidRootPart")
		local meh = me:FindFirstChild("Humanoid")
		local yur = yu:FindFirstChild("HumanoidRootPart")
		local oldcf = mer.CFrame
		local fr = yur.Position + Vector3.new(0, 2, 0)
		local lv = (to - fr).Unit
		local lastpos = mer.Position
		local oldvel = Vector3.zero
		local t = 0
		local ts = 1 / ((to - yur.Position).Magnitude / sps)
		t -= 0.7 * ts
		local ct = 0
		local sspt = 0
		local coins = {}
		while t < 1 do
			local dt = RunService.PostSimulation:Wait()
			meh:ChangeState(Enum.HumanoidStateType.Physics)
			for _,v in pairs(meh:GetPlayingAnimationTracks()) do
				v:Stop(0)
			end
			t += dt * ts * sp
			local targ = fr + Vector3.new(0, 5 * ((t / ts) / 0.3), 0)
			if t >= 0 then
				targ = fr:Lerp(to, t)
				if t < 0.5 and sp < 6.4 then
					sp += dt * 3.0
					sspt = t
				elseif t >= 1 - sspt and sp > 1 then
					sp -= dt * 3.0
				end
			end
			mer.CFrame = CFrame.lookAlong(targ, lv) * CFrame.Angles(-math.pi / 2, 0, 0)
			local v = (targ - lastpos) / dt
			local oldvel2 = oldvel
			oldvel = v
			v += v - oldvel2
			if t >= 0 then
				mer.Velocity = v
			else
				mer.Velocity = Vector3.zero
			end
			mer.RotVelocity = Vector3.zero
			lastpos = targ
			table.insert(coins, targ + Vector3.new(0, 3, 0))
			ct += dt
			for i,v in pairs(coins) do
				if (yur.Position - v).Magnitude < 3 then
					ct = 0
					coins[i] = v + Vector3.new(0, 10000, 0)
				end
			end
			if ct > 0.8 + Players.LocalPlayer:GetNetworkPing() then
				break
			end
		end
		meh:ChangeState(Enum.HumanoidStateType.GettingUp)
		mer.CFrame = oldcf
		mer.Velocity = Vector3.zero
		if t < 1 and yur.Velocity.Y > workspace.Gravity * -0.5 and yu:IsDescendantOf(workspace) and tries < 5 then
			return febring(yu, to, tries + 1)
		end
	end
	IY_AddCommand({
		Command = "bring",
		Aliases = {"febring"},
		Arguments = {
			{Name = "target", Type = "TARGET", Optional = false, Description = "The target player"},
		},
		Plugin = "BUILTIN",
		Description = "Brings player to your position using your character",
		Execute = function(list)
			local targets = getPlayer(list)
			local to = Players.LocalPlayer.Character.HumanoidRootPart.Position
			if targets[1] ~= nil then
				local plr = game.Players:FindFirstChild(targets[1])
				if plr ~= nil and plr.Character ~= nil then
					febring(plr.Character, to)
				end
			end
		end,
	})
	IY_AddCommand({
		Command = "bringto",
		Aliases = {"febringto"},
		Arguments = {
			{Name = "target", Type = "TARGET", Optional = false, Description = "The target player to bring"},
			{Name = "source", Type = "TARGET", Optional = false, Description = "The target player to bring to"},
		},
		Plugin = "BUILTIN",
		Description = "Brings player to your position using your character",
		Execute = function(list1, list2)
			local targets = getPlayer(list1)
			local sources = getPlayer(list2)
			if targets[1] ~= nil and sources[1] ~= nil then
				local plr1 = game.Players:FindFirstChild(targets[1])
				local plr2 = game.Players:FindFirstChild(sources[1])
				if plr1 ~= nil and plr1.Character ~= nil and plr2 ~= nil and plr2.Character ~= nil then
					febring(plr1.Character, plr2.Character.HumanoidRootPart.Position)
				end
			end
		end,
	})
	IY_AddCommand({
		Command = "freeze",
		Aliases = {"fr"},
		Arguments = {
			{Name = "target", Type = "TARGET", Optional = false, Description = "The target player/s"},
		},
		Plugin = "BUILTIN",
		Description = "[CLIENT] Freezes the target player in your clientside",
		Execute = function(list)
			local targets = getPlayer(list)
			if list == nil or string.len(list) <= 0 then targets = {Players.LocalPlayer.Name} end
			for _,v in pairs(targets) do
				local plr = Players:FindFirstChild(v)
				if plr ~= nil then
					if plr.Character then
						for _,v in pairs(plr.Character:GetDescendants()) do
							if v:IsA("BasePart") then
								v.Anchored = true
							end
						end
					end
				end
			end
		end,
	})
	IY_AddCommand({
		Command = "unfreeze",
		Aliases = {"unfr", "thaw"},
		Arguments = {
			{Name = "target", Type = "TARGET", Optional = false, Description = "The target player/s"},
		},
		Plugin = "BUILTIN",
		Description = "[CLIENT] Unfreezes the target player in your clientside",
		Execute = function(list)
			local targets = getPlayer(list)
			if list == nil or string.len(list) <= 0 then targets = {Players.LocalPlayer.Name} end
			for _,v in pairs(targets) do
				local plr = Players:FindFirstChild(v)
				if plr ~= nil then
					if plr.Character then
						for _,v in pairs(plr.Character:GetDescendants()) do
							if v:IsA("BasePart") then
								v.Anchored = false
							end
						end
					end
				end
			end
		end,
	})
	IY_AddCommand({
		Command = "gravity",
		Aliases = {},
		Arguments = {
			{Name = "studs/s2", Optional = false, Description = "studs per second, per second"},
		},
		Plugin = "BUILTIN",
		Description = "[CLIENT] Set the workspace gravity in your clientside",
		Execute = function(grav)
			workspace.Gravity = tonumber(grav) or 196.2
		end,
	})
end
__OnDiedEvent = {}
do -- Silly Spawning related commands
	local LastDeath = nil
	IY_AddCommand({
		Command = "flashback",
		Aliases = {"diedtp"},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "Teleports you to where you last died",
		Execute = function()
			if LastDeath ~= nil then
				local char = Players.LocalPlayer.Character or Players.LocalPlayer.CharacterAdded:Wait()
				local root = char:WaitForChild("HumanoidRootPart")
				root.CFrame = LastDeath
			end
		end,
	})
	local spawnpos = nil
	IY_AddCommand({
		Command = "spawnpoint",
		Aliases = {"spawn"},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "Set spawnpoint",
		Execute = function()
			local char = Players.LocalPlayer.Character
			if char ~= nil then
				local root = char:FindFirstChild("HumanoidRootPart")
				if root ~= nil then
					spawnpos = root.CFrame
				end
			end
			IY_Notify("Spawnpoint", "Spawn point created!")
		end,
	})
	IY_AddCommand({
		Command = "unspawnpoint",
		Aliases = {"unspawn", "nospawnpoint", "nospawn"},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "Remove spawnpoint",
		Execute = function()
			spawnpos = nil
			IY_Notify("Spawnpoint", "Spawn point removed!")
		end,
	})
	local flashbackOnRespawn = false
	IY_AddCommand({
		Command = "autoflashback",
		Aliases = {"autodiedtp"},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "Automatically teleports you to where you died when you respawn",
		Execute = function()
			flashbackOnRespawn = true
			IY_Notify("Auto flashback", "oh yea giddy yes break bro buddy")
		end,
	})
	IY_AddCommand({
		Command = "unautoflashback",
		Aliases = {"unautodiedtp", "noautoflashback", "noautodiedtp"},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "Stops autoflashback",
		Execute = function()
			flashbackOnRespawn = false
			IY_Notify("Auto flashback", "oh no skibidi nuh fix blud enemy")
		end,
	})
	local onDied = nil
	onDied = function()
		spawn(function()
			local char = Players.LocalPlayer.Character
			if char ~= nil then
				local hum = char:FindFirstChildOfClass("Humanoid")
				if hum ~= nil then
					hum.Died:Connect(function()
						LastDeath = nil
						local r = hum.RootPart
						if r ~= nil then
							LastDeath = r.CFrame
						end
						for _,f in pairs(__OnDiedEvent) do
							spawn(f)
						end
					end)
					return
				end
			end
			wait()
			onDied()
		end)
	end
	Players.LocalPlayer.CharacterAdded:Connect(function()
		repeat wait() until Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
		pcall(function()
			if flashbackOnRespawn then
				wait()
				IY_ExecuteCommand("diedtp")
			elseif spawnpos ~= nil then
				wait()
				Players.LocalPlayer.Character.HumanoidRootPart.CFrame = spawnpos
			end
		end)
		onDied()
	end)
	onDied()
end
do -- Silly Tool related commands
	IY_ConfigJson.LoopkillConfig = IY_ConfigJson.LoopkillConfig or {}
	local loopkillcfg = IY_ConfigJson.LoopkillConfig
	if loopkillcfg.ufte == nil then
		loopkillcfg.ufte = true
	end
	if loopkillcfg.ause == nil then
		loopkillcfg.ause = true
	end
	if loopkillcfg.ares == nil then
		loopkillcfg.ares = false
	end
	loopkillcfg.arest = loopkillcfg.arest or 3
	local loophkilling = false
	local loophkilling_ufte = loopkillcfg.ufte
	local loophkilling_ause = loopkillcfg.ause
	local loophkilling_ares = loopkillcfg.ares
	local loophkilling_ares_d = loopkillcfg.arest
	local function touchthisfurry(tooh, char)
		if char == Players.LocalPlayer.Character then return end
		tooh.CanTouch = true
		if loophkilling_ufte and firetouchinterest ~= nil then
			for _,v in pairs(char:GetDescendants()) do
				if v:IsA("BasePart") then
					v.CanTouch = true
					pcall(firetouchinterest, tooh, v, 1)
					pcall(firetouchinterest, tooh, v, 0)
					pcall(firetouchinterest, v, tooh, 1)
					pcall(firetouchinterest, v, tooh, 0)
				end
			end
		else
			for _,v in pairs(char:GetDescendants()) do
				if v:IsA("BasePart") then
					v:BreakJoints()
					v.CanCollide = false
					v.CanTouch = true
					v.Size = Vector3.one * 0.01
					v.CFrame = tooh.CFrame
					v.AssemblyLinearVelocity = Vector3.new(0, 64, 0)
					v.AssemblyAngularVelocity = Vector3.zero
				end
			end
		end
	end
	IY_AddCommand({
		Command = "kill",
		Aliases = {"handlekill", "hkill"},
		Arguments = {
			{Name = "target", Type = "TARGET", Optional = false, Description = "The target player/s"},
		},
		Plugin = "BUILTIN",
		Description = "Kills the target using tools that kill on touch (like the Classic Sword)",
		Execute = function(list)
			local tool = Players.LocalPlayer.Character:FindFirstChildOfClass("Tool")
			if tool == nil then
				IY_Notify("Handle kill", "Equip a tool that deals damage on touch (like the Classic Sword)")
				return
			end
			local tooh = tool:FindFirstChild("Handle")
			if tooh == nil then
				IY_Notify("Handle kill", "Equip a tool that HAS A HANDLE and deals damage on touch (like the Classic Sword)")
				return
			end
			local targets = getPlayer(list)
			local models = {}
			for _,v in pairs(targets) do
				local plr = Players[v]
				if plr ~= Players.LocalPlayer and plr.Character then
					table.insert(models, plr.Character)
				end
			end
			while tooh:IsDescendantOf(workspace) do
				local k = false
				for _,char in pairs(models) do
					if char:IsDescendantOf(workspace) then
						k = true
						touchthisfurry(tooh, char)
					end
				end
				if not k then break end
				RunService.PreSimulation:Wait()
			end
		end,
	})
	local auraing = false
	IY_AddCommand({
		Command = "aura",
		Aliases = {"protect"},
		Arguments = {
			{Name = "master", Type = "TARGET", Optional = false, Description = "The player to aura"},
			{Name = "target", Type = "TARGET", Optional = false, Description = "The target players"},
			{Name = "radius", Optional = false, Description = "Aura radius"},
		},
		Plugin = "BUILTIN",
		Description = "Creates a kill aura on the master using tools that kill on touch (like the classic sword)",
		Execute = function(list, list2, radius)
			radius = tonumber(radius) or 8
			loophkilling = false
			wait()
			wait()
			local tool = Players.LocalPlayer.Character:FindFirstChildOfClass("Tool") or Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool")
			if tool ~= nil and tool:FindFirstChild("Handle") ~= nil then
				IY_Notify("Aurakill", "Created aura.")
			else
				IY_Notify("Aurakill", "Grab a tool handlekill wants.")
				return
			end
			local function getChild(parent, name, class)
				for _,v in pairs(parent:GetChildren()) do
					if v.Name == name and v.ClassName == class then
						return v
					end
				end
			end
			local toolname = tool.Name
			local aurafarmer = Players[getPlayer(list)[1]]
			auraing = true
			while auraing do
				RunService.PreSimulation:Wait()
				if Players.LocalPlayer.Character ~= nil then
					local h = Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
					if h ~= nil and h.Health > 0 and h.RootPart ~= nil then
						tool = getChild(Players.LocalPlayer.Character, toolname, "Tool") or getChild(Players.LocalPlayer.Backpack, toolname, "Tool")
						if tool ~= nil then
							if tool.Parent ~= Players.LocalPlayer.Character then
								h:UnequipTools()
								tool.Parent = Players.LocalPlayer.Character
							end
							if loophkilling_ause then
								tool:Activate()
							end
						else
							continue
						end
						local tooh = tool:FindFirstChild("Handle")
						if tooh == nil then
							continue
						end
						if aurafarmer.Character ~= nil then
							local targets = getPlayer(list2)
							if #targets > 0 then
								for _,v in pairs(targets) do
									local plr = Players[v]
									if plr.Character and aurafarmer:DistanceFromCharacter(plr.Character:GetPivot().Position) <= radius then
										touchthisfurry(tooh, plr.Character)
									end
								end
							end
						end
					end
				end
			end
		end,
	})
	IY_AddCommand({
		Command = "unaura",
		Aliases = {"unprotect"},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "Stops aura",
		Execute = function()
			auraing = false
		end,
	})
	IY_AddCommand({
		Command = "loopkill",
		Aliases = {"loophandlekill", "loophkill"},
		Arguments = {
			{Name = "target", Type = "TARGET", Optional = false, Description = "The target player/s"},
		},
		Plugin = "BUILTIN",
		Description = "Repeatedly kills the target using tools that kill on touch (like the classic sword)",
		Execute = function(list)
			loophkilling = false
			task.wait()
			task.wait()
			local tool = Players.LocalPlayer.Character:FindFirstChildOfClass("Tool") or Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool")
			if tool ~= nil and tool:FindFirstChild("Handle") ~= nil then
				IY_Notify("Loopkill", "Loopkilling the targets.")
			else
				IY_Notify("Loopkill", "Grab a tool handlekill wants.")
				return
			end
			local function getChild(parent, name, class)
				for _,v in pairs(parent:GetChildren()) do
					if v.Name == name and v.ClassName == class then
						return v
					end
				end
			end
			local toolname = tool.Name
			local lastreset = 0
			local lastlkill = 0
			loophkilling = true
			while loophkilling do
				RunService.PreSimulation:Wait()
				if Players.LocalPlayer.Character ~= nil then
					local h = Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
					if h ~= nil then
						tool = getChild(Players.LocalPlayer.Character, toolname, "Tool") or getChild(Players.LocalPlayer.Backpack, toolname, "Tool")
						if tool ~= nil then
							if tool.Parent ~= Players.LocalPlayer.Character then
								h:UnequipTools()
								tool.Parent = Players.LocalPlayer.Character
							end
							if loophkilling_ause then
								tool.Enabled = true
								tool:Activate()
							end
						else
							continue
						end
						local tooh = tool:FindFirstChild("Handle")
						if tooh == nil then
							continue
						end
						local targets = getPlayer(list)
						if #targets > 0 then
							if not loophkilling_ares then lastreset = tick() end
							if tick() - lastreset < loophkilling_ares_d then
								for _,v in pairs(targets) do
									local plr = Players[v]
									if plr.Character then
										touchthisfurry(tooh, plr.Character)
									end
								end
							else
								h:ChangeState(Enum.HumanoidStateType.Dead)
								Players.LocalPlayer.CharacterAdded:Wait()
								lastreset = tick()
							end
							lastlkill = tick()
						else
							if tick() > lastlkill + 10 then
								IY_Notify("Loopkill", "No targets, loopkill stopped")
								loophkilling = false
							end
						end
					else
						lastreset = tick()
					end
				else
					lastreset = tick()
				end
			end
		end,
	})
	IY_AddCommand({
		Command = "unloopkill",
		Aliases = {"unloophandlekill", "unloophkill"},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "Stops loopkill",
		Execute = function()
			loophkilling = false
		end,
	})
	IY_AddSetting("LABEL", "Handle kill Settings")
	local loophkill_a = IY_AddSetting("SWITCH", "Use firetouchinterest")
	loophkill_a.Changed:Connect(function()
		loophkilling_ufte = loophkill_a.Value == 1
		loopkillcfg.ufte = loophkilling_ufte
		if loophkilling_ufte and firetouchinterest == nil then
			loophkilling_ufte = false
			loopkillcfg.ufte = false
			loophkill_a.Value = 0
			IY_Notify("Handle kill Settings", "Your executor does not support this feature. (missing firetouchinterest)")
		end
	end)
	loophkill_a.Value = loophkilling_ufte and 1 or 0
	local loophkill_b = IY_AddSetting("SWITCH", "Spam Activate")
	loophkill_b.Changed:Connect(function()
		loophkilling_ause = loophkill_b.Value == 1
		loopkillcfg.ause = loophkilling_ause
	end)
	loophkill_b.Value = loophkilling_ause and 1 or 0
	local loophkill_c = IY_AddSetting("SWITCH", "Auto Reset")
	loophkill_c.Changed:Connect(function()
		loophkilling_ares = loophkill_c.Value == 1
		loopkillcfg.ares = loophkilling_ares
	end)
	loophkill_c.Value = loophkilling_ares and 1 or 0
	local loophkill_d = IY_AddSetting("SELECT", "Reset Time", {"1", "2", "3", "4", "5"})
	loophkill_d.Changed:Connect(function()
		loophkilling_ares_d = loophkill_d.Value
		loopkillcfg.arest = loophkilling_ares_d
	end)
	loophkill_d.Value = math.clamp(math.floor(loophkilling_ares_d), 1, 6)
	IY_AddCommand({
		Command = "equiptools",
		Aliases = {},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "Equips all tools in your backpack",
		Execute = function()
			if Players.LocalPlayer.Character ~= nil then
				for _,v in pairs(Players.LocalPlayer.Backpack:GetChildren()) do
					if v:IsA("Tool") then
						v.Parent = Players.LocalPlayer.Character
					end
				end
			end
		end,
	})
	IY_AddCommand({
		Command = "unequiptools",
		Aliases = {},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "Unequips all tools",
		Execute = function()
			if Players.LocalPlayer.Character ~= nil then
				local h = Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
				if h ~= nil then
					h:UnequipTools()
				end
			end
		end,
	})
	IY_AddCommand({
		Command = "droptool",
		Aliases = {},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "Drops all droppable and equipped tools",
		Execute = function()
			if Players.LocalPlayer.Character ~= nil then
				local h = Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
				if h ~= nil then
					for _,v in pairs(Players.LocalPlayer.Character:GetChildren()) do
						if v:IsA("Tool") and v.CanBeDropped then
							v.Parent = workspace
						end
					end
				end
			end
		end,
	})
	IY_AddCommand({
		Command = "droptools",
		Aliases = {},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "Drops all droppable tools",
		Execute = function()
			if Players.LocalPlayer.Character ~= nil then
				local h = Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
				if h ~= nil then
					for _,v in pairs(Players.LocalPlayer.Backpack:GetChildren()) do
						if v:IsA("Tool") and v.CanBeDropped then
							v.Parent = Players.LocalPlayer.Character
						end
					end
					for _,v in pairs(Players.LocalPlayer.Character:GetChildren()) do
						if v:IsA("Tool") and v.CanBeDropped then
							v.Parent = workspace
						end
					end
				end
			end
		end,
	})
	IY_AddCommand({
		Command = "safedroptools",
		Aliases = {},
		Arguments = {
			{Name = "speed", Optional = true, Description = "default is 1"},
		},
		Plugin = "BUILTIN",
		Description = "Drops all droppable tools, \"safely\"",
		Execute = function(speed)
			speed = 0.2 / (tonumber(speed) or 1)
			if Players.LocalPlayer.Character ~= nil then
				local h = Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
				if h ~= nil then
					for _,v in pairs(Players.LocalPlayer.Backpack:GetChildren()) do
						if v:IsA("Tool") and v.CanBeDropped then
							v.Parent = Players.LocalPlayer.Character
						end
					end
					for _,v in pairs(Players.LocalPlayer.Character:GetChildren()) do
						if v:IsA("Tool") and v.CanBeDropped then
							v.Parent = workspace
							task.wait(speed)
						end
					end
				end
			end
		end,
	})
	IY_AddCommand({
		Command = "activatetools",
		Aliases = {"usetools"},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "Activates all equipped tools",
		Execute = function()
			if Players.LocalPlayer.Character ~= nil then
				local h = Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
				if h ~= nil then
					for _,v in pairs(Players.LocalPlayer.Character:GetChildren()) do
						if v:IsA("Tool") then
							v:Activate()
						end
					end
				end
			end
		end,
	})
	local spamtoolsing = false
	IY_AddCommand({
		Command = "spamtools",
		Aliases = {},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "Activates all equipped tools, but repeatedly",
		Execute = function()
			if spamtoolsing then return end
			spamtoolsing = true
			while spamtoolsing do
				if Players.LocalPlayer.Character ~= nil then
					local h = Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
					if h ~= nil then
						for _,v in pairs(Players.LocalPlayer.Character:GetChildren()) do
							if v:IsA("Tool") then
								v.Enabled = true
								v:Activate()
							end
						end
					end
				end
				task.wait()
			end
		end,
	})
	IY_AddCommand({
		Command = "unspamtools",
		Aliases = {},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "Stops spamtools",
		Execute = function()
			spamtoolsing = false
		end,
	})
	IY_AddCommand({
		Command = "grabtools",
		Aliases = {},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "Grabs all dropped tools",
		Execute = function()
			if Players.LocalPlayer.Character ~= nil then
				local h = Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
				if h ~= nil then
					for _,v in pairs(workspace:GetChildren()) do
						if v:IsA("Tool") then
							h:EquipTool(v)
						end
					end
				end
			end
		end,
	})
	local grabbingtools = nil
	IY_AddCommand({
		Command = "loopgrabtools",
		Aliases = {},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "Repeatedly grabs all dropped tools",
		Execute = function()
			IY_ExecuteCommand("grabtools")
			if grabbingtools then grabbingtools:Disconnect() end
			grabbingtools = workspace.ChildAdded:Connect(function(v)
				if Players.LocalPlayer.Character ~= nil then
					local h = Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
					if h ~= nil then
						if v:IsA("Tool") then
							h:EquipTool(v)
						end
					end
				end
			end)
		end,
	})
	IY_AddCommand({
		Command = "unloopgrabtools",
		Aliases = {},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "Stops loopgrabtools",
		Execute = function()
			if grabbingtools then grabbingtools:Disconnect() end
			grabbingtools = nil
		end,
	})
	local reachname = randomString()
	IY_AddCommand({
		Command = "reach",
		Aliases = {"toolsize", "toolhitbox", "boxreach"},
		Arguments = {
			{Name = "size", Optional = true, Description = "New handle size in studs"},
		},
		Plugin = "BUILTIN",
		Description = "Increases your tool's Handle's Size, allowing you to killaura in some games",
		Execute = function(studs)
			local s = tonumber(studs) or 6
			if Players.LocalPlayer.Character ~= nil then
				local tool = Players.LocalPlayer.Character:FindFirstChildOfClass("Tool")
				if tool ~= nil and tool:FindFirstChild("Handle") then
					tool.Handle.Size = Vector3.one * math.min(s, 2048)
					tool.Handle.CanCollide = false
					tool.Handle.Massless = true
					local a = tool.Handle:FindFirstChild(reachname) or Instance.new("SelectionBox")
					a.Name = reachname
					a.Parent = tool.Handle
					a.Adornee = tool.Handle
				end
			end
		end,
	})
	local toolorbitting = false
	IY_AddCommand({
		Command = "toolorbit",
		Aliases = {},
		Arguments = {
			{Name = "speed", Optional = true, Description = "Speed of orbit (in pies, defaults to 1)"},
			{Name = "size", Optional = true, Description = "Size of orbit (in studs, defaults to 8)"},
		},
		Plugin = "BUILTIN",
		Description = "All tools go in orbit.",
		Execute = function(speed, size)
			speed = tonumber(speed) or 1
			size = tonumber(size) or 8
			if toolorbitting then return end
			toolorbitting = true
			local orbits = {}
			local rdt = 0
			repeat
				local dt = rdt
				rdt = 0
				local safe = false
				local char = Players.LocalPlayer.Character
				local back = Players.LocalPlayer:FindFirstChildOfClass("Backpack")
				if char ~= nil and back ~= nil then
					for _,v in pairs(char:GetChildren()) do
						if v:IsA("Tool") and orbits[v] == nil then
							orbits[v] = {
								CFrame.Angles(math.random() * math.pi * 2, math.random() * math.pi * 2, math.random() * math.pi * 2),
								math.random()
							}
						end
					end
					for k,v in pairs(orbits) do
						if k.Parent == char then
							v[2] = (v[2] + (dt * speed * 0.5)) % 1
							k.Parent = back
							k.Grip = CFrame.new(0, 0, size) * CFrame.Angles(0, v[2] * math.pi * 2, 0) * v[1]
							k.Parent = char
							rdt += task.wait(0.025)
						else
							orbits[k] = nil
						end
					end
				end
				if not safe then task.wait() end
			until not toolorbitting
		end,
	})
	IY_AddCommand({
		Command = "untoolorbit",
		Aliases = {},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "remove gravitational pull",
		Execute = function()
			toolorbitting = false
		end,
	})
	IY_AddCommand({
		Command = "dupetools",
		Aliases = {"clonetools"},
		Arguments = {
			{Name = "times", Optional = false, Description = "How many times to dupe"},
		},
		Plugin = "BUILTIN",
		Description = "abuse starterpack/startergear and tool canbedropped for duping",
		Execute = function(times)
			times = tonumber(times) or 1
			for i=1, times do
				IY_Notify("Dupe Tools", `Duping tools {i}/{times}...`)
				local char = Players.LocalPlayer.Character
				local back = Players.LocalPlayer.Backpack
				local root = char:WaitForChild("HumanoidRootPart")
				root.CFrame = CFrame.new(0, 2147000000, 0) + GetSandboxPosition()
				root.Velocity = Vector3.zero
				root.RotVelocity = Vector3.zero
				task.wait(0.2)
				for _,v in pairs(back:GetChildren()) do
					if v:IsA("Tool") and v.CanBeDropped then
						v.Parent = Players.LocalPlayer.Character
					end
				end
				local tools = {}
				for _,v in pairs(char:GetChildren()) do
					if v:IsA("Tool") and v.CanBeDropped then
						v.Parent = workspace
						table.insert(tools, v)
					end
				end
				task.wait(0.2)
				char:BreakJoints()
				Players.LocalPlayer.CharacterAdded:Wait()
				task.wait(0.2)
				char = Players.LocalPlayer.Character
				local hum = char:WaitForChild("Humanoid")
				for _,v in pairs(tools) do
					hum:EquipTool(v)
				end
				task.wait(0.5)
			end
		end,
	})
end
do -- Silly Humanoid stuff
	IY_AddCommand({
		Command = "walkspeed",
		Aliases = {"ws", "speed"},
		Arguments = {
			{Name = "speed", Optional = false, Description = "Speed to set (Default 16)"},
		},
		Plugin = "BUILTIN",
		Description = "Changes your walkspeed",
		Execute = function(ws)
			local ws = tonumber(ws) or 16
			if Players.LocalPlayer.Character ~= nil then
				local h = Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
				if h ~= nil then
					h.WalkSpeed = ws
				end
			end
		end,
	})
	IY_AddCommand({
		Command = "jumppower",
		Aliases = {"jp", "jpower"},
		Arguments = {
			{Name = "power", Optional = false, Description = "Power to set (Default 50)"},
		},
		Plugin = "BUILTIN",
		Description = "Changes your jump power",
		Execute = function(jp)
			local jp = tonumber(jp) or 50
			if Players.LocalPlayer.Character ~= nil then
				local h = Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
				if h ~= nil then
					h.JumpPower = jp
				end
			end
		end,
	})
	local loopwsing = false
	IY_AddCommand({
		Command = "loopwalkspeed",
		Aliases = {"loopws", "loopspeed"},
		Arguments = {
			{Name = "speed", Optional = false, Description = "Speed to set (Default 16)"},
		},
		Plugin = "BUILTIN",
		Description = "Repeatedly changes your walkspeed",
		Execute = function(ws)
			local ws = tonumber(ws) or 16
			loopwsing = false
			RunService.Stepped:Wait()
			RunService.Stepped:Wait()
			loopwsing = true
			while loopwsing do
				RunService.Stepped:Wait()
				if Players.LocalPlayer.Character ~= nil then
					local h = Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
					if h ~= nil then
						h.WalkSpeed = ws
					end
				end
			end
		end,
	})
	IY_AddCommand({
		Command = "unloopwalkspeed",
		Aliases = {"unloopws", "unloopspeed"},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "Stops loopwalkspeed",
		Execute = function()
			loopwsing = false
		end,
	})
	local loopjping = false
	IY_AddCommand({
		Command = "loopjumppower",
		Aliases = {"loopjp", "loopbunny"},
		Arguments = {
			{Name = "power", Optional = false, Description = "Power to set (Default 50)"},
		},
		Plugin = "BUILTIN",
		Description = "Repeatedly changes your jump power",
		Execute = function(jp)
			local jp = tonumber(jp) or 16
			loopjping = false
			RunService.Stepped:Wait()
			RunService.Stepped:Wait()
			loopjping = true
			while loopjping do
				RunService.Stepped:Wait()
				if Players.LocalPlayer.Character ~= nil then
					local h = Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
					if h ~= nil then
						h.JumpPower = jp
					end
				end
			end
		end,
	})
	IY_AddCommand({
		Command = "unloopjumppower",
		Aliases = {"unloopjp", "unloopbunny"},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "Stops loopjumppower",
		Execute = function()
			loopjping = false
		end,
	})
	IY_AddCommand({
		Command = "reset",
		Aliases = {"die"},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "Kills your character",
		Execute = function()
			local h = Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
			if h ~= nil then
				h:ChangeState(Enum.HumanoidStateType.Dead)
			end
		end,
	})
	IY_AddCommand({
		Command = "respawn",
		Aliases = {},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "Respawns your character with methods",
		Execute = function()
			local h = Players.LocalPlayer.Character
			if h ~= nil then
				h:BreakJoints()
			end
			if replicatesignal ~= nil then
				replicatesignal(Players.LocalPlayer.ConnectDiedSignalBackend)
			end
		end,
	})
	IY_AddCommand({
		Command = "maxslopeangle",
		Aliases = {"msa"},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "Sets the floor angle your character can walk on",
		Execute = function(msa)
			local h = Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
			if h ~= nil then
				h.MaxSlopeAngle = tonumber(msa) or 89
			end
		end,
	})
	IY_AddCommand({
		Command = "hipheight",
		Aliases = {"hheight"},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "Sets the R15 Leg height.",
		Execute = function(hh)
			local h = Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
			if h ~= nil then
				h.HipHeight = tonumber(hh) or 0
			end
		end,
	})
	IY_AddCommand({
		Command = "sit",
		Aliases = {},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "sit anywhere, just balance yourself",
		Execute = function()
			local h = Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
			if h ~= nil then
				h.Sit = true
			end
		end,
	})
	IY_AddCommand({
		Command = "nosit",
		Aliases = {},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "i refuse",
		Execute = function()
			local h = Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
			if h ~= nil then
				h:SetStateEnabled(Enum.HumanoidStateType.Seated, false)
			end
		end,
	})
	IY_AddCommand({
		Command = "unnosit",
		Aliases = {},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "i accept",
		Execute = function()
			local h = Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
			if h ~= nil then
				h:SetStateEnabled(Enum.HumanoidStateType.Seated, true)
			end
		end,
	})
	local headsitting = nil
	IY_AddCommand({
		Command = "headsit",
		Aliases = {},
		Arguments = {
			{Name = "target", Type = "TARGET", Optional = false, Description = "The target player"}
		},
		Plugin = "BUILTIN",
		Description = "shoulder sit on players",
		Execute = function(list)
			local h = Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
			if h ~= nil then
				local targets = getPlayer(list)
				if #targets > 0 then
					local target = Players[targets[1]]
					if target.Character ~= nil then
						local root = target.Character.HumanoidRootPart
						h.Sit = true
						if headsitting then
							headsitting:Disconnect()
							headsitting = nil
						end
						headsitting = RunService.PostSimulation:Connect(function()
							if h:IsDescendantOf(workspace) and h.RootPart and h.Sit and root:IsDescendantOf(workspace) then
								h.RootPart.CFrame = root.CFrame * CFrame.new(0, 1.6, 1.05)
								h.RootPart.Velocity = Vector3.zero
								h.RootPart.RotVelocity = Vector3.zero
							else
								headsitting:Disconnect()
								headsitting = nil
							end
						end)
					end
				end
			end
		end,
	})
	IY_AddCommand({
		Command = "unheadsit",
		Aliases = {},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "you can just jump vro",
		Execute = function()
			if headsitting then
				headsitting:Disconnect()
				headsitting = nil
			end
		end,
	})
	IY_AddCommand({
		Command = "platformstand",
		Aliases = {"stun"},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "Stuns your character",
		Execute = function()
			local h = Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
			if h ~= nil then
				h.PlatformStand = true
			end
		end,
	})
	IY_AddCommand({
		Command = "trip",
		Aliases = {},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "make your character fall over",
		Execute = function()
			local h = Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
			if h ~= nil and h.RootPart ~= nil then
				local r = h.RootPart
				RunService.PreSimulation:Wait()
				h:ChangeState(0)
				r.AssemblyLinearVelocity = r.CFrame.LookVector * 30
			end
		end,
	})
	IY_AddCommand({
		Command = "lay",
		Aliases = {"laydown"},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "Watch the stars go by...",
		Execute = function()
			local h = Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
			if h ~= nil and h.RootPart ~= nil then
				local r = h.RootPart
				h.Sit = true
				task.wait(0.1)
				r.CFrame = r.CFrame * CFrame.Angles(math.pi * 0.5, 0, 0)
				for _, v in ipairs(h:GetPlayingAnimationTracks()) do
					v:Stop()
				end
			end
		end,
	})
	IY_AddCommand({
		Command = "jump",
		Aliases = {},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "wanna see me jump?",
		Execute = function()
			local h = Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
			if h ~= nil then
				h:ChangeState(Enum.HumanoidStateType.Jumping)
			end
		end,
	})
	local inflyjump = nil
	IY_AddCommand({
		Command = "infinitejump",
		Aliases = {"infjump"},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "Gives you infinite jumps",
		Execute = function()
			IY_Notify("Infinite Jump", "Infinite Jump enabled!")
			if inflyjump then inflyjump:Disconnect() end
			local deb = false
			inflyjump = UserInputService.JumpRequest:Connect(function()
				if deb then return end
				if Players.LocalPlayer.Character ~= nil then
					local h = Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
					if h ~= nil then
						h:ChangeState(Enum.HumanoidStateType.Jumping)
						deb = true
						wait()
						deb = false
					end
				end
			end)
		end,
	})
	IY_AddCommand({
		Command = "uninfinitejump",
		Aliases = {"uninfjump", "noinfinitejump", "noinfjump"},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "Disables infinite jumping",
		Execute = function()
			IY_Notify("Infinite Jump", "Infinite Jump disabled!")
			if inflyjump then inflyjump:Disconnect() end
			inflyjump = nil
		end,
	})
	IY_AddCommand({
		Command = "infiniteveljump",
		Aliases = {"infveljump"},
		Arguments = {
			{Name = "jumppower", Optional = true, Description = "override jump power"},
		},
		Plugin = "BUILTIN",
		Description = "Gives you velocity based infinite jumps, bypasses infinite jump detectors",
		Execute = function(jumppower)
			IY_Notify("Infinite VelJump", "Infinite VelJump enabled!")
			if inflyjump then inflyjump:Disconnect() end
			local deb = false
			inflyjump = UserInputService.JumpRequest:Connect(function()
				if deb then return end
				if Players.LocalPlayer.Character ~= nil then
					local h = Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
					if h ~= nil and h.RootPart ~= nil then
						h.RootPart.AssemblyLinearVelocity = 
							(h.RootPart.AssemblyLinearVelocity * Vector3.new(1, 0, 1))
								+ Vector3.new(0, tonumber(jumppower) or h.JumpPower, 0)
						deb = true
						wait()
						deb = false
					end
				end
			end)
		end,
	})
	IY_AddCommand({
		Command = "uninfiniteveljump",
		Aliases = {"uninfveljump", "noinfiniteveljump", "noinfveljump"},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "Disables infinite velocity jumping",
		Execute = function()
			IY_Notify("Infinite VekJump", "Infinite VelJump disabled!")
			if inflyjump then inflyjump:Disconnect() end
			inflyjump = nil
		end,
	})
	IY_AddCommand({
		Command = "flyjump",
		Aliases = {},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "Lets you hold jump to fly",
		Execute = function()
			IY_Notify("Fly Jump", "Fly Jump enabled!")
			if inflyjump then inflyjump:Disconnect() end
			inflyjump = UserInputService.JumpRequest:Connect(function()
				if Players.LocalPlayer.Character ~= nil then
					local h = Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
					if h ~= nil then
						h:ChangeState(Enum.HumanoidStateType.Jumping)
					end
				end
			end)
		end,
	})
	IY_AddCommand({
		Command = "unflyjump",
		Aliases = {"noflyjump"},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "Disables fly jump",
		Execute = function()
			IY_Notify("Fly Jump", "Fly Jump disabled!")
			if inflyjump then inflyjump:Disconnect() end
			inflyjump = nil
		end,
	})
	local autojump = nil
	IY_AddCommand({
		Command = "autojump",
		Aliases = {"ajump"},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "Automatically jump over obstacles",
		Execute = function()
			IY_Notify("Auto Jump", "Auto Jump enabled!")
			if autojump then autojump:Disconnect() end
			autojump = RunService.Stepped:Connect(function(_,dt)
				if Players.LocalPlayer.Character ~= nil then
					local h = Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
					if h ~= nil and h.RootPart ~= nil then
						if h:GetState() == Enum.HumanoidStateType.Running then
							local r = h.RootPart
							local rcp = RaycastParams.new()
							rcp.RespectCanCollide = true
							rcp.FilterType = Enum.RaycastFilterType.Exclude
							rcp.FilterDescendantsInstances = {Players.LocalPlayer.Character}
							local check = workspace:Blockcast(r.CFrame, r.Size, r.AssemblyLinearVelocity * Vector3.new(dt, 0, dt), rcp)
							if check ~= nil then
								h:ChangeState(Enum.HumanoidStateType.Jumping)
							end
						end
					end
				end
			end)
		end,
	})
	IY_AddCommand({
		Command = "unautojump",
		Aliases = {"unajump", "noautojump", "noajump"},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "Disables auto jump",
		Execute = function()
			IY_Notify("Auto Jump", "Auto Jump disabled!")
			if autojump then autojump:Disconnect() end
			autojump = nil
		end,
	})
	local edgejump = nil
	IY_AddCommand({
		Command = "edgejump",
		Aliases = {"ejump"},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "Automatically jump over gaps",
		Execute = function()
			IY_Notify("Edge Jump", "Edge Jump enabled!")
			if edgejump then edgejump:Disconnect() end
			local lstate = nil
			edgejump = RunService.Stepped:Connect(function(_,dt)
				if Players.LocalPlayer.Character ~= nil then
					local h = Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
					if h ~= nil and h.RootPart ~= nil then
						if lstate == Enum.HumanoidStateType.Running then
							local r = h.RootPart
							local rcp = RaycastParams.new()
							rcp.RespectCanCollide = true
							rcp.FilterType = Enum.RaycastFilterType.Exclude
							rcp.FilterDescendantsInstances = {Players.LocalPlayer.Character}
							local check = workspace:Raycast(r.Position, Vector3.new(0, -3.5, 0), rcp)
							if check == nil then
								h:ChangeState(Enum.HumanoidStateType.Jumping)
							end
						end
						lstate = h:GetState()
						return
					end
				end
				lstate = nil
			end)
		end,
	})
	IY_AddCommand({
		Command = "unedgejump",
		Aliases = {"unejump", "noedgejump", "noejump"},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "Disables edge jump",
		Execute = function()
			IY_Notify("Edge Jump", "Edge Jump disabled!")
			if edgejump then edgejump:Disconnect() end
			edgejump = nil
		end,
	})
	local tpwalker = nil
	IY_AddCommand({
		Command = "teleportwalk",
		Aliases = {"tpwalk"},
		Arguments = {
			{Name = "speed", Optional = true, Description = "Walkspeed to add"},
		},
		Plugin = "BUILTIN",
		Description = "Walk faster using teleportation",
		Execute = function(speed)
			IY_Notify("Teleport walk", "Teleport walk enabled!")
			if tpwalker then tpwalker:Disconnect() end
			local ws = tonumber(speed) or 1
			tpwalker = RunService.Stepped:Connect(function(_,dt)
				if Players.LocalPlayer.Character ~= nil then
					local h = Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
					if h ~= nil and h.RootPart ~= nil then
						local r = h.RootPart
						r.CFrame = r.CFrame + (h.MoveDirection * ws)
					end
				end
			end)
		end,
	})
	IY_AddCommand({
		Command = "unteleportwalk",
		Aliases = {"untpwalk", "noteleportwalk", "notpwalk"},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "Disables teleport walk",
		Execute = function()
			IY_Notify("Teleport walk", "Teleport walk disabled!")
			if tpwalker then tpwalker:Disconnect() end
			tpwalker = nil
		end,
	})
	local antivoiding = nil
	IY_AddCommand({
		Command = "antivoid",
		Aliases = {},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "If you fall off the void, will bounce you back up",
		Execute = function()
			IY_Notify("Antivoid", "Antivoid enabled!")
			if antivoiding then antivoiding:Disconnect() end
			antivoiding = RunService.PreSimulation:Connect(function()
				if Players.LocalPlayer.Character ~= nil then
					local h = Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
					if h ~= nil and h.RootPart ~= nil then
						local r = h.RootPart
						if r.Position.Y + (r.AssemblyLinearVelocity.Y * (1 / 15)) < FallenPartsDestroyHeight + 10 then
							r.AssemblyLinearVelocity = Vector3.new(0, 50, 0) - r.AssemblyLinearVelocity
						end
					end
				end
			end)
		end,
	})
	IY_AddCommand({
		Command = "unantivoid",
		Aliases = {"noantivoid"},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "Stops antivoid",
		Execute = function()
			IY_Notify("Antivoid", "Antivoid disabled!")
			if antivoiding then antivoiding:Disconnect() end
			antivoiding = nil
		end,
	})
	local fakingout = false
	IY_AddCommand({
		Command = "fakeout",
		Aliases = {"antiattach"},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "Teleports you to the void for some seconds, useful to kill loopgoto'ers",
		Execute = function()
			if fakingout then return end
			if Players.LocalPlayer.Character ~= nil then
				local h = Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
				if h ~= nil and h.RootPart ~= nil then
					local r = h.RootPart
					fakingout = true
					local old = r.CFrame
					workspace.FallenPartsDestroyHeight = 0/0
					r.CFrame = CFrame.new(0, FallenPartsDestroyHeight + 5, 0) + GetSandboxPosition()
					r.Velocity = Vector3.new(0, -100, 0)
					task.wait(0.5)
					r.CFrame = old
					workspace.FallenPartsDestroyHeight = FallenPartsDestroyHeight
					fakingout = false
				end
			end
		end,
	})
	local noonecankillme = nil
	IY_AddCommand({
		Command = "noonecankillme",
		Aliases = {"infakeout"},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "Fakeout but forever until you un___ it",
		Execute = function()
			if noonecankillme then
				noonecankillme:Disconnect()
				workspace.FallenPartsDestroyHeight = FallenPartsDestroyHeight
			end
			local iter = 0
			noonecankillme = RunService.Stepped:Connect(function()
				workspace.FallenPartsDestroyHeight = 0/1/0
				if Players.LocalPlayer.Character ~= nil then
					local h = Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
					if h ~= nil and h.RootPart ~= nil then
						local r = h.RootPart
						r.CFrame = CFrame.new(0, -65536 * iter, 0) + GetSandboxPosition()
						r.AssemblyLinearVelocity = Vector3.new(0, -500, 0)
						r.AssemblyAngularVelocity = Vector3.new(0, 0, 0)
						iter = math.min(iter + 1, 8)
					end
				end
				fakingout = true
			end)
		end,
	})
	IY_AddCommand({
		Command = "unnoonecankillme",
		Aliases = {"onecankillme", "uninfakeout", "noinfakeout"},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "Stops noonecankillme",
		Execute = function()
			if noonecankillme then
				noonecankillme:Disconnect()
				fakingout = false
				workspace.FallenPartsDestroyHeight = FallenPartsDestroyHeight
			end
			noonecankillme = nil
		end,
	})
	IY_AddCommand({
		Command = "novoid",
		Aliases = {},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "Removes the void completely, allowing you to fall forever.",
		Execute = function()
			IY_Notify("No void", "workspace.Void:Destroy() executed successfully")
			workspace.FallenPartsDestroyHeight = 0/0
		end,
	})
	IY_AddCommand({
		Command = "revoid",
		Aliases = {},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "Restores the void.",
		Execute = function()
			IY_Notify("Re void", "workspace.Void re successfully")
			workspace.FallenPartsDestroyHeight = FallenPartsDestroyHeight
		end,
	})
	IY_AddCommand({
		Command = "permadeath",
		Aliases = {"unpermadeath"},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "either disables respawning or respawns",
		Execute = function()
			if replicatesignal == nil then
				IY_Notify("Permadeath", "Unsupported executor")
				return
			end
			IY_Notify("Permadeath", "Wait for it...")
			local oldchar = Players.LocalPlayer.Character
			replicatesignal(Players.LocalPlayer.ConnectDiedSignalBackend)
			task.wait(Players.RespawnTime)
			if oldchar == Players.LocalPlayer.Character then
				IY_Notify("Permadeath", "Hardcore mode enabled.")
			else
				IY_Notify("Permadeath", "Respawned.")
			end
		end,
	})
	local instarespawner = nil
	IY_AddCommand({
		Command = "instantrespawn",
		Aliases = {"instarespawn"},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "Instant respawn",
		Execute = function()
			if replicatesignal == nil then
				IY_Notify("Instant respawn", "Unsupported executor")
				return
			end
			IY_Notify("Instant respawn", "Instant respawn enabled")
			if instarespawner then
				instarespawner:Disconnect()
			end
			instarespawner = RunService.Stepped:Connect(function()
				replicatesignal(Players.LocalPlayer.ConnectDiedSignalBackend)
			end)
		end,
	})
	IY_AddCommand({
		Command = "noinstantrespawn",
		Aliases = {"noinstarespawn"},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "Stops instantrespawn",
		Execute = function()
			if instarespawner then
				instarespawner:Disconnect()
			end
			instarespawner = nil
		end,
	})
	IY_AddCommand({
		Command = "strengthen",
		Aliases = {},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "Nanomachines, son! They harden in response to physical trauma.",
		Execute = function()
			for _,v in pairs(Players.LocalPlayer:GetDescendants()) do
				if v:IsA("BasePart") then
					v.CustomPhysicalProperties = PhysicalProperties.new(100, 0.3, 0.5)
				end
			end
		end,
	})
	IY_AddCommand({
		Command = "weaken",
		Aliases = {},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "U-UwU~ P-P-Pwease don't h-hurt me~!! ^w^",
		Execute = function()
			for _,v in pairs(Players.LocalPlayer:GetDescendants()) do
				if v:IsA("BasePart") then
					v.CustomPhysicalProperties = PhysicalProperties.new(0.001, 0.3, 0.5)
				end
			end
		end,
	})
	IY_AddCommand({
		Command = "unstrengthen",
		Aliases = {"unweaken"},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "yo bro",
		Execute = function()
			for _,v in pairs(Players.LocalPlayer:GetDescendants()) do
				if v:IsA("BasePart") then
					v.CustomPhysicalProperties = PhysicalProperties.new(0.7, 0.3, 0.5)
				end
			end
		end,
	})
	IY_AddCommand({
		Command = "breakvelocity",
		Aliases = {},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "kill force and stuff",
		Execute = function()
			for _,v in pairs(Players.LocalPlayer.Character:GetDescendants()) do
				if v:IsA("BasePart") then
					v.Velocity = Vector3.zero
					v.RotVelocity = Vector3.zero
				end
				if v:IsA("BodyMover") then
					v:Destroy()
				end
			end
		end,
	})
	IY_AddCommand({
		Command = "god",
		Aliases = {"noonecanactuallykillme"},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "adamxdd690 technically made this command!\nmakes you unkillable. youll need a specific condition for this to work.",
		Execute = function()
			local h = Players.LocalPlayer.Character.Humanoid
			Players.LocalPlayer.Character.ChildAdded:Connect(function(v)
				if v:IsA("Tool") and v.CanBeDropped and v:GetAttribute("B") then
					task.wait()
					v.Parent = workspace
				end
			end)
			h:SetStateEnabled(Enum.HumanoidStateType.Dead, false)
			pcall(replicatesignal, Players.LocalPlayer.Kill)
			while h:IsDescendantOf(workspace) and RunService.PreAnimation:Wait() do
				pcall(function()
					game:GetService("CoreGui").TopBarApp.TopBarApp.FullScreenFrame.HurtOverlay:Destroy()
				end)
				pcall(function()
					game:GetService("CoreGui").TopBarApp.TopBarApp.UnibarLeftFrame.HealthBar.HealthBar.ClipsDescendants = true
				end)
				h.RootPart.CFrame += Vector3.new(0, 0.003, 0)
				local toolhandles = {}
				for _,player in pairs(Players:GetPlayers()) do
					if player ~= Players.LocalPlayer and player.Character then
						for _,v in pairs(player.Character:GetChildren()) do
							if v:IsA("Tool") and v:FindFirstChild("Handle") then
								v:SetAttribute("B", true)
								table.insert(toolhandles, v.Handle)
							end
						end
					end
				end
				for _,limb in pairs(h.Parent:GetChildren()) do
					if limb:IsA("BasePart") then
						limb.CanTouch = true
						for _,h in pairs(toolhandles) do
							h.CanTouch = true
							pcall(firetouchinterest, h, limb, 1)
							pcall(firetouchinterest, h, limb, 0)
						end
					end
				end
			end
		end,
	})
	IY_AddCommand({
		Command = "simulationradius",
		Aliases = {"simrad"},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "Set your simulationradius to 9 billion",
		Execute = function()
			Players.LocalPlayer.ReplicationFocus = workspace -- all belongs to me everything that i see
			sethiddenproperty(Players.LocalPlayer, "SimulationRadius", 1/0) -- math.huge in 3 chars!
		end,
	})
end
do -- Cool tools
	IY_AddCommand({
		Command = "teleporttool",
		Aliases = {"tptool"},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "Gives you a tool to teleport",
		Execute = function()
			local tool = Instance.new("Tool")
			tool.Name = "Teleport Tool"
			tool.RequiresHandle = false
			tool.Parent = Players.LocalPlayer.Backpack
			tool.Activated:Connect(function()
				local h = Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
				if h ~= nil and h.RootPart ~= nil then
					local r = h.RootPart
					r.CFrame = CFrame.new(IYMouse.Hit.Position + Vector3.new(0, 3, 0)) * r.CFrame.Rotation
				end
			end)
		end,
	})
	local tpuaname_bp = randomString()
	local tpuaname_bg = randomString()
	local function tpua_PUT(part, cf)
		for _,c in pairs(part:GetChildren()) do
			if c:IsA("BodyPosition") or c:IsA("BodyGyro") then
				c:Destroy()
			end
		end
		local BP = part:FindFirstChild(tpuaname_bp) or Instance.new("BodyPosition")
		BP.Name = tpuaname_bp
		BP.Parent = part
		BP.MaxForce = Vector3.one * math.huge
		BP.Position = cf.Position
		local BG = part:FindFirstChild(tpuaname_bg) or Instance.new("BodyGyro")
		BG.Name = tpuaname_bg
		BG.Parent = part
		BG.MaxTorque = Vector3.one * math.huge
		BG.CFrame = cf.Rotation
	end
	local function tpua_THAW(part)
		local BP = part:FindFirstChild(tpuaname_bp)
		local BG = part:FindFirstChild(tpuaname_bg)
		if BP then BP:Destroy() end
		if BG then BG:Destroy() end
	end
	IY_AddCommand({
		Command = "tpuatool",
		Aliases = {},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "Gives you a tool to bring parts",
		Execute = function()
			local tool = Instance.new("Tool")
			tool.Name = "TPUA Tool"
			tool.RequiresHandle = false
			tool.Parent = Players.LocalPlayer.Backpack
			tool.Activated:Connect(function()
				local rcp = RaycastParams.new()
				rcp.RespectCanCollide = false
				rcp.FilterType = Enum.RaycastFilterType.Exclude
				rcp.FilterDescendantsInstances = {Players.LocalPlayer.Character}
				local rc = workspace:Raycast(Camera.CFrame.Position, IYMouse.UnitRay.Direction * 65536, rcp)
				local hit = nil
				if rc ~= nil then hit = rc.Instance end
				if hit == nil then return end
				if not hit.Anchored then
					IY_Notify("TPUA", "yes")
					tpua_PUT(hit, CFrame.new(Camera.Focus.Position))
					return
				end
				IY_Notify("TPUA", "no")
			end)
		end,
	})
end
do -- Outfit related commands
	IY_ConfigJson.OutfitData = IY_ConfigJson.OutfitData or {}
	local DESC_INSTS = {"BodyColors", "Shirt", "ShirtGraphic", "Pants", "Accessory", "CharacterMesh"}
	local function becomehd(hdesc)
		local char = Players.LocalPlayer.Character
		if char ~= nil then
			local hum = char:FindFirstChildOfClass("Humanoid")
			if hum ~= nil then
				local death = {}
				for _,v in pairs(char:GetDescendants()) do
					if table.find(DESC_INSTS, v.ClassName) ~= nil then
						local spare = {v, true}
						v.Changed:Connect(function()
							spare[2] = false
						end)
						table.insert(death, spare)
					end
				end
				hum:ApplyDescriptionClientServer(hdesc)
				RunService.RenderStepped:Wait()
				for _,spare in pairs(death) do
					if spare[2] and spare[1] ~= nil then
						spare[1]:Destroy()
					end
				end
			end
		end
	end
	local function serializehd(hdesc)
		local prowpertis = {
			--"BackAccessory",
			"BodyTypeScale",
			"ClimbAnimation",
			"DepthScale",
			"Face",
			--"FaceAccessory",
			"FallAnimation",
			--"FrontAccessory",
			"GraphicTShirt",
			--"HairAccessory",
			--"HatAccessory",
			"Head",
			"HeadColor",
			"HeadScale",
			"HeightScale",
			"IdleAnimation",
			"JumpAnimation",
			"LeftArm",
			"LeftArmColor",
			"LeftLeg",
			"LeftLegColor",
			--"NeckAccessory",
			"Pants",
			"ProportionScale",
			"RightArm",
			"RightArmColor",
			"RightLeg",
			"RightLegColor",
			"RunAnimation",
			"Shirt",
			--"ShouldersAccessory",
			"SwimAnimation",
			"Torso",
			"TorsoColor",
			--"WaistAccessory",
			"WalkAnimation",
			"WidthScale",
		}
		local tabla = {}
		tabla.Properties = {}
		for _,prop in pairs(prowpertis) do
			local v = hdesc[prop]
			if typeof(v) == "Color3" then
				v = {v.R, v.G, v.B}
			end
			tabla.Properties[prop] = v
		end
		tabla.Accessories = {}
		for i,blob in pairs(hdesc:GetAccessories(true)) do
			local patch = blob
			patch.AccessoryType = patch.AccessoryType.Name
			patch.Position = {patch.Position.X, patch.Position.Y, patch.Position.Z}
			patch.Rotation = {patch.Rotation.X, patch.Rotation.Y, patch.Rotation.Z}
			patch.Scale = {patch.Scale.X, patch.Scale.Y, patch.Scale.Z}
			tabla.Accessories[i] = patch
		end
		tabla.Emotes = hdesc:GetEmotes()
		tabla.EquippedEmotes = hdesc:GetEquippedEmotes()
		return HttpService:JSONEncode(tabla)
	end
	local function deserializehd(strable)
		local tabla = HttpService:JSONDecode(strable)
		local prowpertis = {
			"HeadColor",
			"LeftArmColor",
			"LeftLegColor",
			"RightArmColor",
			"RightLegColor",
			"TorsoColor",
		}
		local hdesc = Instance.new("HumanoidDescription")
		for prop,v in pairs(tabla.Properties) do
			if typeof(hdesc[prop]) == "Color3" then
				hdesc[prop] = Color3.new(unpack(v))
				continue
			end
			hdesc[prop] = v
		end
		local accs = {}
		for i,blob in pairs(tabla.Accessories) do
			local patch = blob
			patch.AccessoryType = Enum.AccessoryType[patch.AccessoryType]
			patch.Position = Vector3.new(unpack(patch.Position))
			patch.Rotation = Vector3.new(unpack(patch.Rotation))
			patch.Scale = Vector3.new(unpack(patch.Scale))
			accs[i] = patch
		end
		hdesc:SetAccessories(accs, true)
		hdesc:SetEmotes(tabla.Emotes)
		hdesc:SetEquippedEmotes(tabla.EquippedEmotes)
		return hdesc
	end
	local loadavatar_ = false
	local function loadavatar(target)
		if loadavatar_ then return end
		loadavatar_ = true
		if target ~= nil then
			local char = Players.LocalPlayer.Character
			if char then
				local dummy = Instance.new("HumanoidDescription")
				becomehd(dummy)
				becomehd(target)
				dummy:Destroy()
				IY_Notify("Disguise", "Successfully loaded avatar!")
			end
		end
		loadavatar_ = false
	end
	IY_AddCommand({
		Command = "loadavatar",
		Aliases = {"disguise"},
		Arguments = {
			{Name = "Target / Player ID", Type = "TARGET", Optional = false, Description = "The target player / ID"},
		},
		Plugin = "BUILTIN",
		Description = "[CLIENT] Loads an avatar by player or player ID, and applies it to your character",
		Execute = function(plrid)
			local ID = getPlayer(plrid)[1]
			if ID ~= nil then
				ID = Players:FindFirstChild(ID)
				if ID ~= nil then 
					ID = ID.UserId
				end
			end
			if ID == nil then
				ID = tonumber(plrid)
			end
			IY_Notify("Disguise", "Loading from ID: "..ID)
			local target = game.Players:GetHumanoidDescriptionFromUserId(ID)
			loadavatar(target)
		end,
	})
	IY_AddCommand({
		Command = "loadavatarfromoutfit",
		Aliases = {},
		Arguments = {
			{Name = "Outfit ID", Optional = false, Description = "The target ID"},
		},
		Plugin = "BUILTIN",
		Description = "[CLIENT] Loads an avatar by outfit ID, and applies it to your character",
		Execute = function(plrid)
			local ID = tonumber(plrid)
			IY_Notify("Disguise", "Loading from outfit ID: "..ID)
			local target = game.Players:GetHumanoidDescriptionFromOutfitId(ID)
			loadavatar(target)
		end,
	})
	IY_AddCommand({
		Command = "loadavatartool",
		Aliases = {"disguisetool"},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "[CLIENT] Gives you a tool to disguise into characters, like NPCs",
		Execute = function()
			local tool = Instance.new("Tool")
			tool.Name = "Disguise Tool"
			tool.RequiresHandle = false
			tool.Parent = Players.LocalPlayer.Backpack
			tool.Activated:Connect(function()
				spawn(function()
					local rcp = RaycastParams.new()
					rcp.RespectCanCollide = false
					rcp.FilterType = Enum.RaycastFilterType.Exclude
					rcp.FilterDescendantsInstances = {Players.LocalPlayer.Character}
					local rc = workspace:Raycast(Camera.CFrame.Position, IYMouse.UnitRay.Direction * 65536, rcp)
					local hit = nil
					if rc ~= nil then hit = rc.Instance end
					if hit == nil then return end
					local targetchar = hit:FindFirstAncestorOfClass("Model")
					if targetchar ~= nil then
						local targethum = targetchar:FindFirstChildOfClass("Humanoid")
						if targethum ~= nil then
							local targethdes = targethum:GetAppliedDescription()
							if targethdes ~= nil then
								loadavatar(targethdes)
							else
								IY_Notify("Disguise", "Humanoid has no description")
							end
						end
					end
				end)
			end)
		end,
	})
	IY_AddCommand({
		Command = "loadoutfit",
		Aliases = {},
		Arguments = {
			{Name = "Outfit Name", Type = "ENUMF", Values = function()
				local keys = {}
				for k,_ in pairs(IY_ConfigJson.OutfitData) do
					table.insert(keys, k)
				end
				return keys
			end, Optional = false, Description = "The saved outfit name"},
		},
		Plugin = "BUILTIN",
		Description = "[CLIENT] Loads an outfit you saved, to your character",
		Execute = function(name)
			local target = IY_ConfigJson.OutfitData[name]
			if target ~= nil then
				local success = false
				success, target = xpcall(function()
					return deserializehd(target)
				end, function(m)
					print(debug.traceback(m))
				end)
				if success then
					loadavatar(target)
					return
				end
				IY_Notify("Load Outfit", "Data loading error")
				return
			end
			IY_Notify("Load Outfit", "Outfit not found")
		end,
	})
	IY_AddCommand({
		Command = "saveoutfit",
		Aliases = {},
		Arguments = {
			{Name = "Outfit Name", Optional = false, Description = "The outfit name to save"},
		},
		Plugin = "BUILTIN",
		Description = "[CLIENT] Saves the current outfit of your character",
		Execute = function(name)
			local char = Players.LocalPlayer.Character
			if char == nil then IY_Notify("Save Outfit", "No character.") end
			local hum = char:FindFirstChildOfClass("Humanoid")
			if hum == nil then IY_Notify("Save Outfit", "No character.") end
			local target = IY_ConfigJson.OutfitData[name]
			if target ~= nil then
				IY_Notify("Save Outfit", "Overwriting save...")
			else
				IY_Notify("Save Outfit", "Writing save...")
			end
			local target = hum:GetAppliedDescription()
			local success = false
			success, target = xpcall(function()
				return serializehd(target)
			end, function(m)
				print(debug.traceback(m))
			end)
			if not success then IY_Notify("Save Outfit", "Failed to serialize.") end
			IY_ConfigJson.OutfitData[name] = target
		end,
	})
	local keepers = nil
	IY_AddCommand({
		Command = "keepavatar",
		Aliases = {"become"},
		Arguments = {
			{Name = "Target / Player ID", Type = "TARGET", Optional = false, Description = "The target player / ID"},
		},
		Plugin = "BUILTIN",
		Description = "[CLIENT] Loads an avatar by player or player ID, and applies it to your character, even when respawning",
		Execute = function(plrid)
			local ID = getPlayer(plrid)[1]
			if ID ~= nil then
				ID = Players:FindFirstChild(ID)
				if ID ~= nil then 
					ID = ID.UserId
				end
			end
			if ID == nil then
				ID = tonumber(plrid)
			end
			if keepers ~= nil then
				keepers:Disconnect()
				keepers = nil
			end
			local uwu = function()
				if Players.LocalPlayer.Character == nil then return end
				repeat task.wait() until Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid") ~= nil
				wait(0.5)
				local target = game.Players:GetHumanoidDescriptionFromUserId(ID)
				loadavatar(target)
			end
			keepers = Players.LocalPlayer.CharacterAdded:Connect(uwu)
			uwu()
		end,
	})
	IY_AddCommand({
		Command = "keepoutfit",
		Aliases = {"becomeo"},
		Arguments = {
			{Name = "Outfit Name", Type = "ENUMF", Values = function()
				local keys = {}
				for k,_ in pairs(IY_ConfigJson.OutfitData) do
					table.insert(keys, k)
				end
				return keys
			end, Optional = false, Description = "The saved outfit name"},
		},
		Plugin = "BUILTIN",
		Description = "[CLIENT] Loads an outfit you saved, and applies it to your character, even when respawning",
		Execute = function(name)
			local target = IY_ConfigJson.OutfitData[name]
			if target ~= nil then
				local success = false
				success, target = xpcall(function()
					return deserializehd(target)
				end, function(m)
					print(debug.traceback(m))
				end)
				if success then
					if keepers ~= nil then
						keepers:Disconnect()
						keepers = nil
					end
					local uwu = function()
						if Players.LocalPlayer.Character == nil then return end
						repeat task.wait() until Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid") ~= nil
						wait(0.5)
						loadavatar(target)
					end
					keepers = Players.LocalPlayer.CharacterAdded:Connect(uwu)
					uwu()
					return
				end
				IY_Notify("Load Outfit", "Data loading error")
				return
			end
			IY_Notify("Load Outfit", "Outfit not found")
		end,
	})
	IY_AddCommand({
		Command = "nokeepavatar",
		Aliases = {"unbecome", "nokeepoutfit", "unbecomeo"},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "[CLIENT] Stops keepavatar/keepoutfit",
		Execute = function(plrid)
			if keepers ~= nil then
				keepers:Disconnect()
				keepers = nil
			end
		end,
	})
end
do
	-- Camera commands
	IY_AddCommand({
		Command = "gotocam",
		Aliases = {},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "Brings you to your camera",
		Execute = function()
			local char = Players.LocalPlayer.Character
			if char ~= nil then
				char:PivotTo(Camera.CFrame)
			end
		end,
	})
	local viewplr = nil
	local viewplrconn = nil
	local viewplrconn2 = nil
	IY_AddCommand({
		Command = "view",
		Aliases = {"spectate"},
		Arguments = {
			{Name = "target", Type = "TARGET", Optional = false, Description = "The target player"},
		},
		Plugin = "BUILTIN",
		Description = "Spectate a player",
		Execute = function(list)
			local target = getPlayer(list)[1]
			if target ~= nil then
				target = Players[target]
				if viewplrconn ~= nil then
					viewplrconn:Disconnect()
					viewplrconn = nil
				end
				if viewplrconn2 ~= nil then
					viewplrconn2:Disconnect()
					viewplrconn2 = nil
				end
				viewplr = target
				local cursub = nil
				Camera.CameraSubject = viewplr.Character:FindFirstChildOfClass("Humanoid") or char
				viewplrconn = Camera:GetPropertyChangedSignal("CameraSubject"):Connect(function()
					if Camera.CameraSubject ~= cursub then
						Camera.CameraSubject = cursub
					end
				end)
				viewplrconn2 = viewplr.CharacterAdded:Connect(function(char)
					cursub = char
					Camera.CameraSubject = cursub
					local t = tick() + 1
					repeat task.wait() until char:FindFirstChildOfClass("Humanoid") ~= nil or tick() > t
					cursub = char:FindFirstChildOfClass("Humanoid") or char
					Camera.CameraSubject = cursub
				end)
				cursub = Camera.CameraSubject
				IY_Notify("Spectator", "Spectating " .. viewplr.Name)
			end
		end,
	})
	IY_AddCommand({
		Command = "unview",
		Aliases = {"unspectate"},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "Unspectate",
		Execute = function()
			if viewplrconn ~= nil then
				viewplrconn:Disconnect()
				viewplrconn = nil
			end
			if viewplrconn2 ~= nil then
				viewplrconn2:Disconnect()
				viewplrconn2 = nil
			end
			viewplr = nil
			Camera.CameraSubject = Players.LocalPlayer.Character
			IY_Notify("Spectator", "Spectate is bye (unviewed)")
		end,
	})
	Players.PlayerRemoving:Connect(function(plr)
		if viewplr == plr then
			if viewplrconn ~= nil then
				viewplrconn:Disconnect()
				viewplrconn = nil
			end
			if viewplrconn2 ~= nil then
				viewplrconn2:Disconnect()
				viewplrconn2 = nil
			end
			viewplr = nil
			Camera.CameraSubject = Players.LocalPlayer.Character
			IY_Notify("Spectator", "Spectate is bye (player left)")
		end
	end)
	local freecamming = false
	local freecamtc = nil
	local freecamSpeed = 50
	local freecamPos = Vector3.zero
	local freecamRot = Vector2.zero
	IY_AddCommand({
		Command = "freecam",
		Aliases = {"fc", "camfly"},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "sv_cheats 1;fly",
		Execute = function()
			if freecamming then return end
			freecamming = true
			IY_Notify("Freecam", "birb")
			local Move, Look = Vector3.zero, Vector2.zero
			if UserInputService.TouchEnabled then
				local TouchControlGUI = Instance.new("ScreenGui")
				TouchControlGUI.Name = randomString()
				TouchControlGUI.IgnoreGuiInset = true
				TouchControlGUI.ResetOnSpawn = false
				TouchControlGUI.DisplayOrder = 2147000000
				TouchControlGUI.Parent = Players.LocalPlayer:WaitForChild("PlayerGui")
				local TouchControl = Instance.new("Frame")
				TouchControl.Name = randomString()
				TouchControl.Active = true
				TouchControl.Position = UDim2.new(0, 0, 0, 0)
				TouchControl.BackgroundTransparency = 1
				TouchControl.Size = UDim2.new(1, 0, 1, 0)
				TouchControl.ZIndex = 1
				TouchControl.Parent = TouchControlGUI
				local t1, t2 = nil, nil
				local p1, p2 = Vector3.zero, Vector3.zero
				TouchControl.InputBegan:Connect(function(input)
					if input.UserInputType == Enum.UserInputType.Touch then
						if input.Position.X < Camera.ViewportSize.X / 2 then
							t1 = input
							p1 = input.Position
							Move = Vector3.zero
						else
							t2 = input
							p2 = input.Position
							Look = Vector2.zero
						end
					end
				end)
				TouchControl.InputChanged:Connect(function(input)
					if input.UserInputType == Enum.UserInputType.Touch then
						if t1 == input then
							local delta = input.Position - p1
							p1 = input.Position
							Move += Vector3.new(delta.X, 0, -delta.Y) / (Camera.ViewportSize.Y * 0.1)
						elseif t2 == input then
							local delta = input.Position - p2
							p2 = input.Position
							Look = (Vector2.new(-delta.Y, -delta.X) * math.pi * 2) / Camera.ViewportSize.Y
						end
					end
				end)
				TouchControl.InputEnded:Connect(function(input)
					if input.UserInputType == Enum.UserInputType.Touch then
						if t1 == input then
							t1 = nil
							Move = Vector3.zero
						elseif t2 == input then
							t2 = nil
							Look = Vector2.zero
						end
					end
				end)
				freecamtc = TouchControlGUI
			else
				local keyboard = {
					W = 0, S = 0, E = 0, Q = 0, D = 0, A = 0
				}
				ContextActionService:BindActionAtPriority(
					"IYLITE_FreeCameraKeyboard",
					function(_, state, input)
						keyboard[input.KeyCode.Name] = state == Enum.UserInputState.Begin and 1 or 0
						Move = Vector3.new(
							keyboard.D - keyboard.A,
							keyboard.E - keyboard.Q,
							keyboard.W - keyboard.S
						)
						return Enum.ContextActionResult.Sink
					end,
					false,
					INPUT_PRIORITY,
					Enum.KeyCode.W,
					Enum.KeyCode.A,
					Enum.KeyCode.S,
					Enum.KeyCode.D,
					Enum.KeyCode.E,
					Enum.KeyCode.Q,
					Enum.KeyCode.Up,
					Enum.KeyCode.Down
				)
				ContextActionService:BindActionAtPriority(
					"IYLITE_FreeCameraMouse",
					function(_, _, input)
						Look = Vector2.new(-input.Delta.Y, -input.Delta.X) * math.pi / 64
						return Enum.ContextActionResult.Sink
					end,
					false,
					INPUT_PRIORITY,
					Enum.UserInputType.MouseMovement
				)
			end
			freecamPos = Camera.CFrame.Position
			freecamRot = Vector2.new(Camera.CFrame:ToEulerAngles(Enum.RotationOrder.YXZ))
			RunService:BindToRenderStep("IYLITE_FreeCameraUpdate", Enum.RenderPriority.Camera.Value - 1, function(dt)
				freecamRot = Vector2.new(
					math.clamp(freecamRot.X + Look.X, -math.pi * 0.5, math.pi * 0.5),
					(freecamRot.Y + Look.Y) % (math.pi * 2)
				)
				local CamCF = CFrame.fromEulerAngles(freecamRot.X, freecamRot.Y, 0, Enum.RotationOrder.YXZ)
				freecamPos += (CamCF.RightVector * Move.X + CamCF.UpVector * Move.Y + CamCF.LookVector * Move.Z) * dt * freecamSpeed
				CamCF += freecamPos
				Camera.CFrame = CamCF
				Camera.CameraType = Enum.CameraType.Scriptable
			end)
		end,
	})
	IY_AddCommand({
		Command = "unfreecam",
		Aliases = {"unfc", "uncamfly"},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "we will be right back",
		Execute = function()
			if not freecamming then return end
			freecamming = false
			RunService:UnbindFromRenderStep("IYLITE_FreeCameraUpdate")
			ContextActionService:UnbindAction("IYLITE_FreeCameraKeyboard")
			ContextActionService:UnbindAction("IYLITE_FreeCameraMouse")
			if freecamtc ~= nil then
				freecamtc:Destroy()
				freecamtc = nil
			end
			task.wait()
			Camera.CameraSubject = Players.LocalPlayer.Character
			Camera.CameraType = Enum.CameraType.Custom
		end,
	})
	IY_AddCommand({
		Command = "freecamgoto",
		Aliases = {"fcgoto"},
		Arguments = {
			{Name = "target", Type = "TARGET", Optional = false, Description = "The target player"},
		},
		Plugin = "BUILTIN",
		Description = "goto command but for freecam",
		Execute = function(list)
			if not freecamming then return end
			local targets = getPlayer(list)
			if #targets > 0 then
				local target = Players[targets[1]]
				if target.Character ~= nil then
					local tar = target.Character:GetPivot()
					tar += tar.LookVector * -2.5
					freecamPos = tar.Position
					freecamRot = Vector2.new(tar:ToEulerAngles(Enum.RotationOrder.YXZ))
				end
			end
		end,
	})
	IY_AddCommand({
		Command = "freecamspeed",
		Aliases = {"fcspeed"},
		Arguments = {
			{Name = "speed", Optional = false, Description = "Speed (1 for every 50 studs/s)"},
		},
		Plugin = "BUILTIN",
		Description = "goto command but for freecam",
		Execute = function(speed)
			freecamSpeed = tonumber(speed) or freecamSpeed
		end,
	})
	IY_AddCommand({
		Command = "fixcam",
		Aliases = {"restorecam"},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "Fix the camera",
		Execute = function()
			IY_ExecuteCommand("unview", true)
			IY_ExecuteCommand("unfreecam", true)
			task.wait(0.1)
			workspace.CurrentCamera:Destroy()
			task.wait(0.1)
			Camera.CameraSubject = Players.LocalPlayer.Character
			workspace.CurrentCamera.CameraType = "Custom"
		end,
	})
end
do -- Ifninite Yeild related commands
	IY_AddCommand({
		Command = "breakcmd",
		Aliases = {"breakloops", "break"},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "Breaks command loops (;inf^0^reset)",
		Execute = function()
			IY_Notify("Break command", "Command loops broken!")
			IY__LastCommandBreak = tick()
		end,
	})
end
do
	local notifykill = false
	IY_AddCommand({
		Command = "notifykill",
		Aliases = {},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "Notifies who kills you in games like SFOTHO",
		Execute = function()
			IY_Notify("Notify Kill", "Initialized!")
			if notifykill then return end
			notifykill = true
			table.insert(__OnDiedEvent, function()
				if Players.LocalPlayer.Character ~= nil then
					local h = Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
					if h ~= nil then
						local creator = h:FindFirstChild("creator")
						if creator ~= nil then
							local crname1 = "idk who"
							local crname2 = "roblox"
							if creator.Value ~= nil and typeof(creator.Value) == "Instance" then
								crname1 = creator.Value.Name
								crname2 = crname1
							end
							IY_Notify("Notify Kill", crname1 .. " killed you, blame " .. crname2 .. "!")
						end
					end
				end
			end)
		end,
	})
	local notifykills = false
	IY_AddCommand({
		Command = "notifykills",
		Aliases = {},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "Notifies all kills in games like SFOTHO",
		Execute = function()
			IY_ExecuteCommand("notifykill")
			IY_Notify("Notify Kills", "Initialized!")
			if notifykills then return end
			notifykills = true
			local function nk(plr)
				local function ca(char)
					local human = char:WaitForChild("Humanoid", 60)
					if human ~= nil then
						human.Died:Connect(function()
							local creator = human:FindFirstChild("creator")
							if creator ~= nil then
								local crname = "idk who"
								if creator.Value ~= nil and typeof(creator.Value) == "Instance" and creator.Value:IsA("Player") then
									crname = creator.Value.Name
								end
								if crname == Players.LocalPlayer.Name then
									crname = "You just"
								end
								IY_Notify("Notify Kills", crname .. " killed " .. plr.Name .. "!")
							end
						end)
					end
				end
				plr.CharacterAdded:Connect(ca)
				if plr.Character ~= nil then ca(plr.Character) end
			end
			Players.PlayerAdded:Connect(nk)
			for _,plr in pairs(Players:GetPlayers()) do
				if plr ~= Players.LocalPlayer then
					spawn(function()
						nk(plr)
					end)
				end
			end
		end,
	})
	local notifyws = false
	IY_AddCommand({
		Command = "notifywhispers",
		Aliases = {"notifyws"},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "Notifies all whispers (legacy chat)",
		Execute = function()
			IY_Notify("Notify Whispers", "Initialized!")
			if notifyws then return end
			notifyws = true
			local function nk(plr)
				plr.Chatted:Connect(function(message)
					if message:sub(1, 1) == "/" then
						local split = string.split(message, " ")
						local ngh = split[1]
						local target = split[2]
						table.remove(split, 1)
						table.remove(split, 1)
						local wmessage = table.concat(split, " ")
						if table.find({"/w", "/whisper"}, ngh) ~= nil then
							IY_Notify("Notify Whispers", plr.Name .. " whispered to " .. target .. "\n" .. wmessage)
						end
					end
				end)
			end
			Players.PlayerAdded:Connect(nk)
			for _,plr in pairs(Players:GetPlayers()) do
				if plr ~= Players.LocalPlayer then
					nk(plr)
				end
			end
		end,
	})
	IY_AddCommand({
		Command = "notify",
		Aliases = {},
		Arguments = {
			{Name = "message", Optional = false, Description = "The message in the notify"},
		},
		Plugin = "BUILTIN",
		Description = "Notifies you the text you put",
		Execute = function(...)
			local msg = table.concat({...}, " ")
			IY_Notify("Custom Notification Command", msg)
		end,
	})
	IY_AddCommand({
		Command = "clearnotifications",
		Aliases = {"clearnotifs", "notifyclear"},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "Clears notifications (for persistent mode)",
		Execute = function()
			table.clear(_notificationz)
		end,
	})
end
local thegamestocheckfor = {487316}
if table.find(thegamestocheckfor, game.PlaceId) ~= nil then
	local ahealconn = nil
	IY_AddCommand({
		Command = "autoheal",
		Aliases = {"totemofundying", "siphon"},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "[SFOTHO] Healpads you once you're low.",
		Execute = function()
			if firetouchinterest == nil then
				return IY_Notify("Totem Of Undying", "Your executor does not support this command. (missing firetouchinterest)")
			end
			if ahealconn ~= nil then
				ahealconn:Disconnect()
				ahealconn = nil
			end
			local function heal(r)
				for _,v in pairs(workspace:GetChildren()) do
					if v.Name == "HealPad" then
						local pad = v:FindFirstChild("Pad")
						if pad ~= nil and pad:IsA("BasePart") and pad.Color.G > 0.5 then
							firetouchinterest(pad, r, 0)
							firetouchinterest(pad, r, 1)
							return
						end
					end
				end
			end
			ahealconn = RunService.Stepped:Connect(function()
				if Players.LocalPlayer.Character ~= nil then
					local h = Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
					if h ~= nil and h.RootPart ~= nil then
						if h.Health < h.MaxHealth then
							heal(h.RootPart)
						end
					end
				end
			end)
		end,
	})
	IY_AddCommand({
		Command = "unautoheal",
		Aliases = {"totemofdying", "unsiphon"},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "[SFOTHO] Stops autoheal.",
		Execute = function()
			if ahealconn ~= nil then
				ahealconn:Disconnect()
				ahealconn = nil
			end
		end,
	})
end
do -- Experimental commands
	IY_AddCommand({
		Command = "disnet",
		Aliases = {},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "[DEV] takes away character ownership for a short time",
		Execute = function()
			local character = Players.LocalPlayer.Character
			if character ~= nil then
				local hrp = character:FindFirstChild("HumanoidRootPart")
				if hrp ~= nil then
					hrp.CFrame = CFrame.new(Vector3.new(0/0, 0/0, 0/0))
				end
			end
		end,
	})
	IY_AddCommand({
		Command = "rcelol",
		Aliases = {},
		Arguments = {
			{Name = "message", Optional = false, Description = "The message to print"},
		},
		Plugin = "BUILTIN",
		Description = "[DEV] FE print console lol",
		Execute = function(...)
			local msg = table.concat({...}, " ")
			local character = Players.LocalPlayer.Character
			if character ~= nil then
				local old = character.Animate.idle.Animation1.AnimationId
				character.Animate.Disabled = true
				character.Animate.idle.Animation1.AnimationId = "active://" .. msg
				task.wait()
				character.Animate.Disabled = false
				task.wait()
				character.Animate.Disabled = true
				character.Animate.idle.Animation1.AnimationId = old
				task.wait()
				character.Animate.Disabled = false
			end
		end,
	})
	IY_AddCommand({
		Command = "howmanycommands",
		Aliases = {},
		Arguments = {},
		Plugin = "BUILTIN",
		Description = "[DEV] command counter",
		Execute = function(...)
			IY_Notify("better than frisk", `we got {#IY_Commands} cmds rn`)
		end,
	})
end

IY_IndexCommands("")
Players.LocalPlayer.CharacterAdded:Connect(function()
	IY_ExecuteCommand("clip\\vclip\\unfly\\unfloat", true)
end)